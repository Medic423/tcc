// EMS Database Schema
generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/ems"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_EMS")
}

model EMSUser {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String
  name         String
  agencyName   String
  isActive     Boolean  @default(true)
  userType     String   @default("EMS") // EMS, ADMIN
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  transportRequests TransportRequest[]

  @@map("ems_users")
}

model EMSAgency {
  id               String   @id @default(cuid())
  name             String
  contactName      String
  phone            String
  email            String
  address          String
  city             String
  state            String
  zipCode          String
  serviceArea      String[]
  operatingHours   Json?
  capabilities     String[]
  pricingStructure Json?
  isActive         Boolean  @default(true)
  status           String   @default("ACTIVE")
  addedBy          String?
  addedAt          DateTime @default(now())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  units            Unit[]

  @@map("ems_agencies")
}

model Unit {
  id             String   @id @default(cuid())
  agencyId       String?
  unitNumber     String
  type           String
  capabilities   String[]
  currentStatus  String   @default("AVAILABLE")
  currentLocation Json?
  shiftStart     DateTime?
  shiftEnd       DateTime?
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  agency         EMSAgency? @relation(fields: [agencyId], references: [id])

  @@map("units")
}

model TransportRequest {
  id                    String    @id @default(cuid())
  patientId             String
  originFacilityId      String?
  destinationFacilityId String?
  transportLevel        String
  priority              String
  status                String    @default("PENDING")
  specialRequirements   String?
  requestTimestamp      DateTime  @default(now())
  acceptedTimestamp     DateTime?
  pickupTimestamp       DateTime?
  completionTimestamp   DateTime?
  assignedAgencyId      String?
  assignedUnitId        String?
  createdById           String?
  readyStart            DateTime?
  readyEnd              DateTime?
  isolation             Boolean   @default(false)
  bariatric             Boolean   @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  // Relations
  createdBy             EMSUser? @relation(fields: [createdById], references: [id])

  @@map("transport_requests")
}