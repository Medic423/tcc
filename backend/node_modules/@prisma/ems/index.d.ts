
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model EMSUser
 * 
 */
export type EMSUser = $Result.DefaultSelection<Prisma.$EMSUserPayload>
/**
 * Model EMSAgency
 * 
 */
export type EMSAgency = $Result.DefaultSelection<Prisma.$EMSAgencyPayload>
/**
 * Model Unit
 * 
 */
export type Unit = $Result.DefaultSelection<Prisma.$UnitPayload>
/**
 * Model CrewRole
 * 
 */
export type CrewRole = $Result.DefaultSelection<Prisma.$CrewRolePayload>
/**
 * Model TransportRequest
 * 
 */
export type TransportRequest = $Result.DefaultSelection<Prisma.$TransportRequestPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more EMSUsers
 * const eMSUsers = await prisma.eMSUser.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more EMSUsers
   * const eMSUsers = await prisma.eMSUser.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.eMSUser`: Exposes CRUD operations for the **EMSUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EMSUsers
    * const eMSUsers = await prisma.eMSUser.findMany()
    * ```
    */
  get eMSUser(): Prisma.EMSUserDelegate<ExtArgs>;

  /**
   * `prisma.eMSAgency`: Exposes CRUD operations for the **EMSAgency** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EMSAgencies
    * const eMSAgencies = await prisma.eMSAgency.findMany()
    * ```
    */
  get eMSAgency(): Prisma.EMSAgencyDelegate<ExtArgs>;

  /**
   * `prisma.unit`: Exposes CRUD operations for the **Unit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Units
    * const units = await prisma.unit.findMany()
    * ```
    */
  get unit(): Prisma.UnitDelegate<ExtArgs>;

  /**
   * `prisma.crewRole`: Exposes CRUD operations for the **CrewRole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CrewRoles
    * const crewRoles = await prisma.crewRole.findMany()
    * ```
    */
  get crewRole(): Prisma.CrewRoleDelegate<ExtArgs>;

  /**
   * `prisma.transportRequest`: Exposes CRUD operations for the **TransportRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransportRequests
    * const transportRequests = await prisma.transportRequest.findMany()
    * ```
    */
  get transportRequest(): Prisma.TransportRequestDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    EMSUser: 'EMSUser',
    EMSAgency: 'EMSAgency',
    Unit: 'Unit',
    CrewRole: 'CrewRole',
    TransportRequest: 'TransportRequest'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "eMSUser" | "eMSAgency" | "unit" | "crewRole" | "transportRequest"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      EMSUser: {
        payload: Prisma.$EMSUserPayload<ExtArgs>
        fields: Prisma.EMSUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EMSUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EMSUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>
          }
          findFirst: {
            args: Prisma.EMSUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EMSUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>
          }
          findMany: {
            args: Prisma.EMSUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>[]
          }
          create: {
            args: Prisma.EMSUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>
          }
          createMany: {
            args: Prisma.EMSUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EMSUserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>[]
          }
          delete: {
            args: Prisma.EMSUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>
          }
          update: {
            args: Prisma.EMSUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>
          }
          deleteMany: {
            args: Prisma.EMSUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EMSUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EMSUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSUserPayload>
          }
          aggregate: {
            args: Prisma.EMSUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEMSUser>
          }
          groupBy: {
            args: Prisma.EMSUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<EMSUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.EMSUserCountArgs<ExtArgs>
            result: $Utils.Optional<EMSUserCountAggregateOutputType> | number
          }
        }
      }
      EMSAgency: {
        payload: Prisma.$EMSAgencyPayload<ExtArgs>
        fields: Prisma.EMSAgencyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EMSAgencyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EMSAgencyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>
          }
          findFirst: {
            args: Prisma.EMSAgencyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EMSAgencyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>
          }
          findMany: {
            args: Prisma.EMSAgencyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>[]
          }
          create: {
            args: Prisma.EMSAgencyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>
          }
          createMany: {
            args: Prisma.EMSAgencyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EMSAgencyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>[]
          }
          delete: {
            args: Prisma.EMSAgencyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>
          }
          update: {
            args: Prisma.EMSAgencyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>
          }
          deleteMany: {
            args: Prisma.EMSAgencyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EMSAgencyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EMSAgencyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EMSAgencyPayload>
          }
          aggregate: {
            args: Prisma.EMSAgencyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEMSAgency>
          }
          groupBy: {
            args: Prisma.EMSAgencyGroupByArgs<ExtArgs>
            result: $Utils.Optional<EMSAgencyGroupByOutputType>[]
          }
          count: {
            args: Prisma.EMSAgencyCountArgs<ExtArgs>
            result: $Utils.Optional<EMSAgencyCountAggregateOutputType> | number
          }
        }
      }
      Unit: {
        payload: Prisma.$UnitPayload<ExtArgs>
        fields: Prisma.UnitFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UnitFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UnitFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          findFirst: {
            args: Prisma.UnitFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UnitFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          findMany: {
            args: Prisma.UnitFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>[]
          }
          create: {
            args: Prisma.UnitCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          createMany: {
            args: Prisma.UnitCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UnitCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>[]
          }
          delete: {
            args: Prisma.UnitDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          update: {
            args: Prisma.UnitUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          deleteMany: {
            args: Prisma.UnitDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UnitUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UnitUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          aggregate: {
            args: Prisma.UnitAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUnit>
          }
          groupBy: {
            args: Prisma.UnitGroupByArgs<ExtArgs>
            result: $Utils.Optional<UnitGroupByOutputType>[]
          }
          count: {
            args: Prisma.UnitCountArgs<ExtArgs>
            result: $Utils.Optional<UnitCountAggregateOutputType> | number
          }
        }
      }
      CrewRole: {
        payload: Prisma.$CrewRolePayload<ExtArgs>
        fields: Prisma.CrewRoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CrewRoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CrewRoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>
          }
          findFirst: {
            args: Prisma.CrewRoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CrewRoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>
          }
          findMany: {
            args: Prisma.CrewRoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>[]
          }
          create: {
            args: Prisma.CrewRoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>
          }
          createMany: {
            args: Prisma.CrewRoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CrewRoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>[]
          }
          delete: {
            args: Prisma.CrewRoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>
          }
          update: {
            args: Prisma.CrewRoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>
          }
          deleteMany: {
            args: Prisma.CrewRoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CrewRoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CrewRoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrewRolePayload>
          }
          aggregate: {
            args: Prisma.CrewRoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCrewRole>
          }
          groupBy: {
            args: Prisma.CrewRoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<CrewRoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.CrewRoleCountArgs<ExtArgs>
            result: $Utils.Optional<CrewRoleCountAggregateOutputType> | number
          }
        }
      }
      TransportRequest: {
        payload: Prisma.$TransportRequestPayload<ExtArgs>
        fields: Prisma.TransportRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransportRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransportRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          findFirst: {
            args: Prisma.TransportRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransportRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          findMany: {
            args: Prisma.TransportRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>[]
          }
          create: {
            args: Prisma.TransportRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          createMany: {
            args: Prisma.TransportRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransportRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>[]
          }
          delete: {
            args: Prisma.TransportRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          update: {
            args: Prisma.TransportRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          deleteMany: {
            args: Prisma.TransportRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransportRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransportRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          aggregate: {
            args: Prisma.TransportRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransportRequest>
          }
          groupBy: {
            args: Prisma.TransportRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransportRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransportRequestCountArgs<ExtArgs>
            result: $Utils.Optional<TransportRequestCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EMSUserCountOutputType
   */

  export type EMSUserCountOutputType = {
    transportRequests: number
  }

  export type EMSUserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transportRequests?: boolean | EMSUserCountOutputTypeCountTransportRequestsArgs
  }

  // Custom InputTypes
  /**
   * EMSUserCountOutputType without action
   */
  export type EMSUserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUserCountOutputType
     */
    select?: EMSUserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EMSUserCountOutputType without action
   */
  export type EMSUserCountOutputTypeCountTransportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransportRequestWhereInput
  }


  /**
   * Count Type EMSAgencyCountOutputType
   */

  export type EMSAgencyCountOutputType = {
    users: number
    units: number
  }

  export type EMSAgencyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | EMSAgencyCountOutputTypeCountUsersArgs
    units?: boolean | EMSAgencyCountOutputTypeCountUnitsArgs
  }

  // Custom InputTypes
  /**
   * EMSAgencyCountOutputType without action
   */
  export type EMSAgencyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgencyCountOutputType
     */
    select?: EMSAgencyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EMSAgencyCountOutputType without action
   */
  export type EMSAgencyCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EMSUserWhereInput
  }

  /**
   * EMSAgencyCountOutputType without action
   */
  export type EMSAgencyCountOutputTypeCountUnitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UnitWhereInput
  }


  /**
   * Models
   */

  /**
   * Model EMSUser
   */

  export type AggregateEMSUser = {
    _count: EMSUserCountAggregateOutputType | null
    _min: EMSUserMinAggregateOutputType | null
    _max: EMSUserMaxAggregateOutputType | null
  }

  export type EMSUserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    agencyName: string | null
    agencyId: string | null
    emailNotifications: boolean | null
    smsNotifications: boolean | null
    isActive: boolean | null
    userType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EMSUserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    agencyName: string | null
    agencyId: string | null
    emailNotifications: boolean | null
    smsNotifications: boolean | null
    isActive: boolean | null
    userType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EMSUserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    phone: number
    agencyName: number
    agencyId: number
    emailNotifications: number
    smsNotifications: number
    isActive: number
    userType: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EMSUserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    agencyName?: true
    agencyId?: true
    emailNotifications?: true
    smsNotifications?: true
    isActive?: true
    userType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EMSUserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    agencyName?: true
    agencyId?: true
    emailNotifications?: true
    smsNotifications?: true
    isActive?: true
    userType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EMSUserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    agencyName?: true
    agencyId?: true
    emailNotifications?: true
    smsNotifications?: true
    isActive?: true
    userType?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EMSUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EMSUser to aggregate.
     */
    where?: EMSUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSUsers to fetch.
     */
    orderBy?: EMSUserOrderByWithRelationInput | EMSUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EMSUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EMSUsers
    **/
    _count?: true | EMSUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EMSUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EMSUserMaxAggregateInputType
  }

  export type GetEMSUserAggregateType<T extends EMSUserAggregateArgs> = {
        [P in keyof T & keyof AggregateEMSUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEMSUser[P]>
      : GetScalarType<T[P], AggregateEMSUser[P]>
  }




  export type EMSUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EMSUserWhereInput
    orderBy?: EMSUserOrderByWithAggregationInput | EMSUserOrderByWithAggregationInput[]
    by: EMSUserScalarFieldEnum[] | EMSUserScalarFieldEnum
    having?: EMSUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EMSUserCountAggregateInputType | true
    _min?: EMSUserMinAggregateInputType
    _max?: EMSUserMaxAggregateInputType
  }

  export type EMSUserGroupByOutputType = {
    id: string
    email: string
    password: string
    name: string
    phone: string | null
    agencyName: string
    agencyId: string | null
    emailNotifications: boolean
    smsNotifications: boolean
    isActive: boolean
    userType: string
    createdAt: Date
    updatedAt: Date
    _count: EMSUserCountAggregateOutputType | null
    _min: EMSUserMinAggregateOutputType | null
    _max: EMSUserMaxAggregateOutputType | null
  }

  type GetEMSUserGroupByPayload<T extends EMSUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EMSUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EMSUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EMSUserGroupByOutputType[P]>
            : GetScalarType<T[P], EMSUserGroupByOutputType[P]>
        }
      >
    >


  export type EMSUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    agencyName?: boolean
    agencyId?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | EMSUser$agencyArgs<ExtArgs>
    transportRequests?: boolean | EMSUser$transportRequestsArgs<ExtArgs>
    _count?: boolean | EMSUserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eMSUser"]>

  export type EMSUserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    agencyName?: boolean
    agencyId?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | EMSUser$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["eMSUser"]>

  export type EMSUserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    agencyName?: boolean
    agencyId?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EMSUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | EMSUser$agencyArgs<ExtArgs>
    transportRequests?: boolean | EMSUser$transportRequestsArgs<ExtArgs>
    _count?: boolean | EMSUserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EMSUserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | EMSUser$agencyArgs<ExtArgs>
  }

  export type $EMSUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EMSUser"
    objects: {
      agency: Prisma.$EMSAgencyPayload<ExtArgs> | null
      transportRequests: Prisma.$TransportRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      name: string
      phone: string | null
      agencyName: string
      agencyId: string | null
      emailNotifications: boolean
      smsNotifications: boolean
      isActive: boolean
      userType: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["eMSUser"]>
    composites: {}
  }

  type EMSUserGetPayload<S extends boolean | null | undefined | EMSUserDefaultArgs> = $Result.GetResult<Prisma.$EMSUserPayload, S>

  type EMSUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EMSUserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EMSUserCountAggregateInputType | true
    }

  export interface EMSUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EMSUser'], meta: { name: 'EMSUser' } }
    /**
     * Find zero or one EMSUser that matches the filter.
     * @param {EMSUserFindUniqueArgs} args - Arguments to find a EMSUser
     * @example
     * // Get one EMSUser
     * const eMSUser = await prisma.eMSUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EMSUserFindUniqueArgs>(args: SelectSubset<T, EMSUserFindUniqueArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EMSUser that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EMSUserFindUniqueOrThrowArgs} args - Arguments to find a EMSUser
     * @example
     * // Get one EMSUser
     * const eMSUser = await prisma.eMSUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EMSUserFindUniqueOrThrowArgs>(args: SelectSubset<T, EMSUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EMSUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSUserFindFirstArgs} args - Arguments to find a EMSUser
     * @example
     * // Get one EMSUser
     * const eMSUser = await prisma.eMSUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EMSUserFindFirstArgs>(args?: SelectSubset<T, EMSUserFindFirstArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EMSUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSUserFindFirstOrThrowArgs} args - Arguments to find a EMSUser
     * @example
     * // Get one EMSUser
     * const eMSUser = await prisma.eMSUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EMSUserFindFirstOrThrowArgs>(args?: SelectSubset<T, EMSUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EMSUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EMSUsers
     * const eMSUsers = await prisma.eMSUser.findMany()
     * 
     * // Get first 10 EMSUsers
     * const eMSUsers = await prisma.eMSUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eMSUserWithIdOnly = await prisma.eMSUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EMSUserFindManyArgs>(args?: SelectSubset<T, EMSUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EMSUser.
     * @param {EMSUserCreateArgs} args - Arguments to create a EMSUser.
     * @example
     * // Create one EMSUser
     * const EMSUser = await prisma.eMSUser.create({
     *   data: {
     *     // ... data to create a EMSUser
     *   }
     * })
     * 
     */
    create<T extends EMSUserCreateArgs>(args: SelectSubset<T, EMSUserCreateArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EMSUsers.
     * @param {EMSUserCreateManyArgs} args - Arguments to create many EMSUsers.
     * @example
     * // Create many EMSUsers
     * const eMSUser = await prisma.eMSUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EMSUserCreateManyArgs>(args?: SelectSubset<T, EMSUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EMSUsers and returns the data saved in the database.
     * @param {EMSUserCreateManyAndReturnArgs} args - Arguments to create many EMSUsers.
     * @example
     * // Create many EMSUsers
     * const eMSUser = await prisma.eMSUser.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EMSUsers and only return the `id`
     * const eMSUserWithIdOnly = await prisma.eMSUser.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EMSUserCreateManyAndReturnArgs>(args?: SelectSubset<T, EMSUserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EMSUser.
     * @param {EMSUserDeleteArgs} args - Arguments to delete one EMSUser.
     * @example
     * // Delete one EMSUser
     * const EMSUser = await prisma.eMSUser.delete({
     *   where: {
     *     // ... filter to delete one EMSUser
     *   }
     * })
     * 
     */
    delete<T extends EMSUserDeleteArgs>(args: SelectSubset<T, EMSUserDeleteArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EMSUser.
     * @param {EMSUserUpdateArgs} args - Arguments to update one EMSUser.
     * @example
     * // Update one EMSUser
     * const eMSUser = await prisma.eMSUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EMSUserUpdateArgs>(args: SelectSubset<T, EMSUserUpdateArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EMSUsers.
     * @param {EMSUserDeleteManyArgs} args - Arguments to filter EMSUsers to delete.
     * @example
     * // Delete a few EMSUsers
     * const { count } = await prisma.eMSUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EMSUserDeleteManyArgs>(args?: SelectSubset<T, EMSUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EMSUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EMSUsers
     * const eMSUser = await prisma.eMSUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EMSUserUpdateManyArgs>(args: SelectSubset<T, EMSUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EMSUser.
     * @param {EMSUserUpsertArgs} args - Arguments to update or create a EMSUser.
     * @example
     * // Update or create a EMSUser
     * const eMSUser = await prisma.eMSUser.upsert({
     *   create: {
     *     // ... data to create a EMSUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EMSUser we want to update
     *   }
     * })
     */
    upsert<T extends EMSUserUpsertArgs>(args: SelectSubset<T, EMSUserUpsertArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EMSUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSUserCountArgs} args - Arguments to filter EMSUsers to count.
     * @example
     * // Count the number of EMSUsers
     * const count = await prisma.eMSUser.count({
     *   where: {
     *     // ... the filter for the EMSUsers we want to count
     *   }
     * })
    **/
    count<T extends EMSUserCountArgs>(
      args?: Subset<T, EMSUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EMSUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EMSUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EMSUserAggregateArgs>(args: Subset<T, EMSUserAggregateArgs>): Prisma.PrismaPromise<GetEMSUserAggregateType<T>>

    /**
     * Group by EMSUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EMSUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EMSUserGroupByArgs['orderBy'] }
        : { orderBy?: EMSUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EMSUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEMSUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EMSUser model
   */
  readonly fields: EMSUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EMSUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EMSUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends EMSUser$agencyArgs<ExtArgs> = {}>(args?: Subset<T, EMSUser$agencyArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    transportRequests<T extends EMSUser$transportRequestsArgs<ExtArgs> = {}>(args?: Subset<T, EMSUser$transportRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EMSUser model
   */ 
  interface EMSUserFieldRefs {
    readonly id: FieldRef<"EMSUser", 'String'>
    readonly email: FieldRef<"EMSUser", 'String'>
    readonly password: FieldRef<"EMSUser", 'String'>
    readonly name: FieldRef<"EMSUser", 'String'>
    readonly phone: FieldRef<"EMSUser", 'String'>
    readonly agencyName: FieldRef<"EMSUser", 'String'>
    readonly agencyId: FieldRef<"EMSUser", 'String'>
    readonly emailNotifications: FieldRef<"EMSUser", 'Boolean'>
    readonly smsNotifications: FieldRef<"EMSUser", 'Boolean'>
    readonly isActive: FieldRef<"EMSUser", 'Boolean'>
    readonly userType: FieldRef<"EMSUser", 'String'>
    readonly createdAt: FieldRef<"EMSUser", 'DateTime'>
    readonly updatedAt: FieldRef<"EMSUser", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EMSUser findUnique
   */
  export type EMSUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * Filter, which EMSUser to fetch.
     */
    where: EMSUserWhereUniqueInput
  }

  /**
   * EMSUser findUniqueOrThrow
   */
  export type EMSUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * Filter, which EMSUser to fetch.
     */
    where: EMSUserWhereUniqueInput
  }

  /**
   * EMSUser findFirst
   */
  export type EMSUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * Filter, which EMSUser to fetch.
     */
    where?: EMSUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSUsers to fetch.
     */
    orderBy?: EMSUserOrderByWithRelationInput | EMSUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EMSUsers.
     */
    cursor?: EMSUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EMSUsers.
     */
    distinct?: EMSUserScalarFieldEnum | EMSUserScalarFieldEnum[]
  }

  /**
   * EMSUser findFirstOrThrow
   */
  export type EMSUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * Filter, which EMSUser to fetch.
     */
    where?: EMSUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSUsers to fetch.
     */
    orderBy?: EMSUserOrderByWithRelationInput | EMSUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EMSUsers.
     */
    cursor?: EMSUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EMSUsers.
     */
    distinct?: EMSUserScalarFieldEnum | EMSUserScalarFieldEnum[]
  }

  /**
   * EMSUser findMany
   */
  export type EMSUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * Filter, which EMSUsers to fetch.
     */
    where?: EMSUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSUsers to fetch.
     */
    orderBy?: EMSUserOrderByWithRelationInput | EMSUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EMSUsers.
     */
    cursor?: EMSUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSUsers.
     */
    skip?: number
    distinct?: EMSUserScalarFieldEnum | EMSUserScalarFieldEnum[]
  }

  /**
   * EMSUser create
   */
  export type EMSUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * The data needed to create a EMSUser.
     */
    data: XOR<EMSUserCreateInput, EMSUserUncheckedCreateInput>
  }

  /**
   * EMSUser createMany
   */
  export type EMSUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EMSUsers.
     */
    data: EMSUserCreateManyInput | EMSUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EMSUser createManyAndReturn
   */
  export type EMSUserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EMSUsers.
     */
    data: EMSUserCreateManyInput | EMSUserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EMSUser update
   */
  export type EMSUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * The data needed to update a EMSUser.
     */
    data: XOR<EMSUserUpdateInput, EMSUserUncheckedUpdateInput>
    /**
     * Choose, which EMSUser to update.
     */
    where: EMSUserWhereUniqueInput
  }

  /**
   * EMSUser updateMany
   */
  export type EMSUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EMSUsers.
     */
    data: XOR<EMSUserUpdateManyMutationInput, EMSUserUncheckedUpdateManyInput>
    /**
     * Filter which EMSUsers to update
     */
    where?: EMSUserWhereInput
  }

  /**
   * EMSUser upsert
   */
  export type EMSUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * The filter to search for the EMSUser to update in case it exists.
     */
    where: EMSUserWhereUniqueInput
    /**
     * In case the EMSUser found by the `where` argument doesn't exist, create a new EMSUser with this data.
     */
    create: XOR<EMSUserCreateInput, EMSUserUncheckedCreateInput>
    /**
     * In case the EMSUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EMSUserUpdateInput, EMSUserUncheckedUpdateInput>
  }

  /**
   * EMSUser delete
   */
  export type EMSUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    /**
     * Filter which EMSUser to delete.
     */
    where: EMSUserWhereUniqueInput
  }

  /**
   * EMSUser deleteMany
   */
  export type EMSUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EMSUsers to delete
     */
    where?: EMSUserWhereInput
  }

  /**
   * EMSUser.agency
   */
  export type EMSUser$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    where?: EMSAgencyWhereInput
  }

  /**
   * EMSUser.transportRequests
   */
  export type EMSUser$transportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    where?: TransportRequestWhereInput
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    cursor?: TransportRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * EMSUser without action
   */
  export type EMSUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
  }


  /**
   * Model EMSAgency
   */

  export type AggregateEMSAgency = {
    _count: EMSAgencyCountAggregateOutputType | null
    _min: EMSAgencyMinAggregateOutputType | null
    _max: EMSAgencyMaxAggregateOutputType | null
  }

  export type EMSAgencyMinAggregateOutputType = {
    id: string | null
    name: string | null
    contactName: string | null
    phone: string | null
    email: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    isActive: boolean | null
    status: string | null
    addedBy: string | null
    addedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EMSAgencyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    contactName: string | null
    phone: string | null
    email: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    isActive: boolean | null
    status: string | null
    addedBy: string | null
    addedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EMSAgencyCountAggregateOutputType = {
    id: number
    name: number
    contactName: number
    phone: number
    email: number
    address: number
    city: number
    state: number
    zipCode: number
    serviceArea: number
    operatingHours: number
    capabilities: number
    pricingStructure: number
    isActive: number
    status: number
    addedBy: number
    addedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EMSAgencyMinAggregateInputType = {
    id?: true
    name?: true
    contactName?: true
    phone?: true
    email?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    isActive?: true
    status?: true
    addedBy?: true
    addedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EMSAgencyMaxAggregateInputType = {
    id?: true
    name?: true
    contactName?: true
    phone?: true
    email?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    isActive?: true
    status?: true
    addedBy?: true
    addedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EMSAgencyCountAggregateInputType = {
    id?: true
    name?: true
    contactName?: true
    phone?: true
    email?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    serviceArea?: true
    operatingHours?: true
    capabilities?: true
    pricingStructure?: true
    isActive?: true
    status?: true
    addedBy?: true
    addedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EMSAgencyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EMSAgency to aggregate.
     */
    where?: EMSAgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSAgencies to fetch.
     */
    orderBy?: EMSAgencyOrderByWithRelationInput | EMSAgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EMSAgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSAgencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSAgencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EMSAgencies
    **/
    _count?: true | EMSAgencyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EMSAgencyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EMSAgencyMaxAggregateInputType
  }

  export type GetEMSAgencyAggregateType<T extends EMSAgencyAggregateArgs> = {
        [P in keyof T & keyof AggregateEMSAgency]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEMSAgency[P]>
      : GetScalarType<T[P], AggregateEMSAgency[P]>
  }




  export type EMSAgencyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EMSAgencyWhereInput
    orderBy?: EMSAgencyOrderByWithAggregationInput | EMSAgencyOrderByWithAggregationInput[]
    by: EMSAgencyScalarFieldEnum[] | EMSAgencyScalarFieldEnum
    having?: EMSAgencyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EMSAgencyCountAggregateInputType | true
    _min?: EMSAgencyMinAggregateInputType
    _max?: EMSAgencyMaxAggregateInputType
  }

  export type EMSAgencyGroupByOutputType = {
    id: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea: string[]
    operatingHours: JsonValue | null
    capabilities: string[]
    pricingStructure: JsonValue | null
    isActive: boolean
    status: string
    addedBy: string | null
    addedAt: Date
    createdAt: Date
    updatedAt: Date
    _count: EMSAgencyCountAggregateOutputType | null
    _min: EMSAgencyMinAggregateOutputType | null
    _max: EMSAgencyMaxAggregateOutputType | null
  }

  type GetEMSAgencyGroupByPayload<T extends EMSAgencyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EMSAgencyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EMSAgencyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EMSAgencyGroupByOutputType[P]>
            : GetScalarType<T[P], EMSAgencyGroupByOutputType[P]>
        }
      >
    >


  export type EMSAgencySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    contactName?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    serviceArea?: boolean
    operatingHours?: boolean
    capabilities?: boolean
    pricingStructure?: boolean
    isActive?: boolean
    status?: boolean
    addedBy?: boolean
    addedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | EMSAgency$usersArgs<ExtArgs>
    units?: boolean | EMSAgency$unitsArgs<ExtArgs>
    _count?: boolean | EMSAgencyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eMSAgency"]>

  export type EMSAgencySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    contactName?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    serviceArea?: boolean
    operatingHours?: boolean
    capabilities?: boolean
    pricingStructure?: boolean
    isActive?: boolean
    status?: boolean
    addedBy?: boolean
    addedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["eMSAgency"]>

  export type EMSAgencySelectScalar = {
    id?: boolean
    name?: boolean
    contactName?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    serviceArea?: boolean
    operatingHours?: boolean
    capabilities?: boolean
    pricingStructure?: boolean
    isActive?: boolean
    status?: boolean
    addedBy?: boolean
    addedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EMSAgencyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | EMSAgency$usersArgs<ExtArgs>
    units?: boolean | EMSAgency$unitsArgs<ExtArgs>
    _count?: boolean | EMSAgencyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EMSAgencyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EMSAgencyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EMSAgency"
    objects: {
      users: Prisma.$EMSUserPayload<ExtArgs>[]
      units: Prisma.$UnitPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      contactName: string
      phone: string
      email: string
      address: string
      city: string
      state: string
      zipCode: string
      serviceArea: string[]
      operatingHours: Prisma.JsonValue | null
      capabilities: string[]
      pricingStructure: Prisma.JsonValue | null
      isActive: boolean
      status: string
      addedBy: string | null
      addedAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["eMSAgency"]>
    composites: {}
  }

  type EMSAgencyGetPayload<S extends boolean | null | undefined | EMSAgencyDefaultArgs> = $Result.GetResult<Prisma.$EMSAgencyPayload, S>

  type EMSAgencyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EMSAgencyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EMSAgencyCountAggregateInputType | true
    }

  export interface EMSAgencyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EMSAgency'], meta: { name: 'EMSAgency' } }
    /**
     * Find zero or one EMSAgency that matches the filter.
     * @param {EMSAgencyFindUniqueArgs} args - Arguments to find a EMSAgency
     * @example
     * // Get one EMSAgency
     * const eMSAgency = await prisma.eMSAgency.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EMSAgencyFindUniqueArgs>(args: SelectSubset<T, EMSAgencyFindUniqueArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EMSAgency that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EMSAgencyFindUniqueOrThrowArgs} args - Arguments to find a EMSAgency
     * @example
     * // Get one EMSAgency
     * const eMSAgency = await prisma.eMSAgency.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EMSAgencyFindUniqueOrThrowArgs>(args: SelectSubset<T, EMSAgencyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EMSAgency that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSAgencyFindFirstArgs} args - Arguments to find a EMSAgency
     * @example
     * // Get one EMSAgency
     * const eMSAgency = await prisma.eMSAgency.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EMSAgencyFindFirstArgs>(args?: SelectSubset<T, EMSAgencyFindFirstArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EMSAgency that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSAgencyFindFirstOrThrowArgs} args - Arguments to find a EMSAgency
     * @example
     * // Get one EMSAgency
     * const eMSAgency = await prisma.eMSAgency.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EMSAgencyFindFirstOrThrowArgs>(args?: SelectSubset<T, EMSAgencyFindFirstOrThrowArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EMSAgencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSAgencyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EMSAgencies
     * const eMSAgencies = await prisma.eMSAgency.findMany()
     * 
     * // Get first 10 EMSAgencies
     * const eMSAgencies = await prisma.eMSAgency.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eMSAgencyWithIdOnly = await prisma.eMSAgency.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EMSAgencyFindManyArgs>(args?: SelectSubset<T, EMSAgencyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EMSAgency.
     * @param {EMSAgencyCreateArgs} args - Arguments to create a EMSAgency.
     * @example
     * // Create one EMSAgency
     * const EMSAgency = await prisma.eMSAgency.create({
     *   data: {
     *     // ... data to create a EMSAgency
     *   }
     * })
     * 
     */
    create<T extends EMSAgencyCreateArgs>(args: SelectSubset<T, EMSAgencyCreateArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EMSAgencies.
     * @param {EMSAgencyCreateManyArgs} args - Arguments to create many EMSAgencies.
     * @example
     * // Create many EMSAgencies
     * const eMSAgency = await prisma.eMSAgency.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EMSAgencyCreateManyArgs>(args?: SelectSubset<T, EMSAgencyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EMSAgencies and returns the data saved in the database.
     * @param {EMSAgencyCreateManyAndReturnArgs} args - Arguments to create many EMSAgencies.
     * @example
     * // Create many EMSAgencies
     * const eMSAgency = await prisma.eMSAgency.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EMSAgencies and only return the `id`
     * const eMSAgencyWithIdOnly = await prisma.eMSAgency.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EMSAgencyCreateManyAndReturnArgs>(args?: SelectSubset<T, EMSAgencyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EMSAgency.
     * @param {EMSAgencyDeleteArgs} args - Arguments to delete one EMSAgency.
     * @example
     * // Delete one EMSAgency
     * const EMSAgency = await prisma.eMSAgency.delete({
     *   where: {
     *     // ... filter to delete one EMSAgency
     *   }
     * })
     * 
     */
    delete<T extends EMSAgencyDeleteArgs>(args: SelectSubset<T, EMSAgencyDeleteArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EMSAgency.
     * @param {EMSAgencyUpdateArgs} args - Arguments to update one EMSAgency.
     * @example
     * // Update one EMSAgency
     * const eMSAgency = await prisma.eMSAgency.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EMSAgencyUpdateArgs>(args: SelectSubset<T, EMSAgencyUpdateArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EMSAgencies.
     * @param {EMSAgencyDeleteManyArgs} args - Arguments to filter EMSAgencies to delete.
     * @example
     * // Delete a few EMSAgencies
     * const { count } = await prisma.eMSAgency.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EMSAgencyDeleteManyArgs>(args?: SelectSubset<T, EMSAgencyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EMSAgencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSAgencyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EMSAgencies
     * const eMSAgency = await prisma.eMSAgency.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EMSAgencyUpdateManyArgs>(args: SelectSubset<T, EMSAgencyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EMSAgency.
     * @param {EMSAgencyUpsertArgs} args - Arguments to update or create a EMSAgency.
     * @example
     * // Update or create a EMSAgency
     * const eMSAgency = await prisma.eMSAgency.upsert({
     *   create: {
     *     // ... data to create a EMSAgency
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EMSAgency we want to update
     *   }
     * })
     */
    upsert<T extends EMSAgencyUpsertArgs>(args: SelectSubset<T, EMSAgencyUpsertArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EMSAgencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSAgencyCountArgs} args - Arguments to filter EMSAgencies to count.
     * @example
     * // Count the number of EMSAgencies
     * const count = await prisma.eMSAgency.count({
     *   where: {
     *     // ... the filter for the EMSAgencies we want to count
     *   }
     * })
    **/
    count<T extends EMSAgencyCountArgs>(
      args?: Subset<T, EMSAgencyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EMSAgencyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EMSAgency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSAgencyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EMSAgencyAggregateArgs>(args: Subset<T, EMSAgencyAggregateArgs>): Prisma.PrismaPromise<GetEMSAgencyAggregateType<T>>

    /**
     * Group by EMSAgency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EMSAgencyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EMSAgencyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EMSAgencyGroupByArgs['orderBy'] }
        : { orderBy?: EMSAgencyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EMSAgencyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEMSAgencyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EMSAgency model
   */
  readonly fields: EMSAgencyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EMSAgency.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EMSAgencyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends EMSAgency$usersArgs<ExtArgs> = {}>(args?: Subset<T, EMSAgency$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "findMany"> | Null>
    units<T extends EMSAgency$unitsArgs<ExtArgs> = {}>(args?: Subset<T, EMSAgency$unitsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EMSAgency model
   */ 
  interface EMSAgencyFieldRefs {
    readonly id: FieldRef<"EMSAgency", 'String'>
    readonly name: FieldRef<"EMSAgency", 'String'>
    readonly contactName: FieldRef<"EMSAgency", 'String'>
    readonly phone: FieldRef<"EMSAgency", 'String'>
    readonly email: FieldRef<"EMSAgency", 'String'>
    readonly address: FieldRef<"EMSAgency", 'String'>
    readonly city: FieldRef<"EMSAgency", 'String'>
    readonly state: FieldRef<"EMSAgency", 'String'>
    readonly zipCode: FieldRef<"EMSAgency", 'String'>
    readonly serviceArea: FieldRef<"EMSAgency", 'String[]'>
    readonly operatingHours: FieldRef<"EMSAgency", 'Json'>
    readonly capabilities: FieldRef<"EMSAgency", 'String[]'>
    readonly pricingStructure: FieldRef<"EMSAgency", 'Json'>
    readonly isActive: FieldRef<"EMSAgency", 'Boolean'>
    readonly status: FieldRef<"EMSAgency", 'String'>
    readonly addedBy: FieldRef<"EMSAgency", 'String'>
    readonly addedAt: FieldRef<"EMSAgency", 'DateTime'>
    readonly createdAt: FieldRef<"EMSAgency", 'DateTime'>
    readonly updatedAt: FieldRef<"EMSAgency", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EMSAgency findUnique
   */
  export type EMSAgencyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * Filter, which EMSAgency to fetch.
     */
    where: EMSAgencyWhereUniqueInput
  }

  /**
   * EMSAgency findUniqueOrThrow
   */
  export type EMSAgencyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * Filter, which EMSAgency to fetch.
     */
    where: EMSAgencyWhereUniqueInput
  }

  /**
   * EMSAgency findFirst
   */
  export type EMSAgencyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * Filter, which EMSAgency to fetch.
     */
    where?: EMSAgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSAgencies to fetch.
     */
    orderBy?: EMSAgencyOrderByWithRelationInput | EMSAgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EMSAgencies.
     */
    cursor?: EMSAgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSAgencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSAgencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EMSAgencies.
     */
    distinct?: EMSAgencyScalarFieldEnum | EMSAgencyScalarFieldEnum[]
  }

  /**
   * EMSAgency findFirstOrThrow
   */
  export type EMSAgencyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * Filter, which EMSAgency to fetch.
     */
    where?: EMSAgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSAgencies to fetch.
     */
    orderBy?: EMSAgencyOrderByWithRelationInput | EMSAgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EMSAgencies.
     */
    cursor?: EMSAgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSAgencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSAgencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EMSAgencies.
     */
    distinct?: EMSAgencyScalarFieldEnum | EMSAgencyScalarFieldEnum[]
  }

  /**
   * EMSAgency findMany
   */
  export type EMSAgencyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * Filter, which EMSAgencies to fetch.
     */
    where?: EMSAgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EMSAgencies to fetch.
     */
    orderBy?: EMSAgencyOrderByWithRelationInput | EMSAgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EMSAgencies.
     */
    cursor?: EMSAgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EMSAgencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EMSAgencies.
     */
    skip?: number
    distinct?: EMSAgencyScalarFieldEnum | EMSAgencyScalarFieldEnum[]
  }

  /**
   * EMSAgency create
   */
  export type EMSAgencyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * The data needed to create a EMSAgency.
     */
    data: XOR<EMSAgencyCreateInput, EMSAgencyUncheckedCreateInput>
  }

  /**
   * EMSAgency createMany
   */
  export type EMSAgencyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EMSAgencies.
     */
    data: EMSAgencyCreateManyInput | EMSAgencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EMSAgency createManyAndReturn
   */
  export type EMSAgencyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EMSAgencies.
     */
    data: EMSAgencyCreateManyInput | EMSAgencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EMSAgency update
   */
  export type EMSAgencyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * The data needed to update a EMSAgency.
     */
    data: XOR<EMSAgencyUpdateInput, EMSAgencyUncheckedUpdateInput>
    /**
     * Choose, which EMSAgency to update.
     */
    where: EMSAgencyWhereUniqueInput
  }

  /**
   * EMSAgency updateMany
   */
  export type EMSAgencyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EMSAgencies.
     */
    data: XOR<EMSAgencyUpdateManyMutationInput, EMSAgencyUncheckedUpdateManyInput>
    /**
     * Filter which EMSAgencies to update
     */
    where?: EMSAgencyWhereInput
  }

  /**
   * EMSAgency upsert
   */
  export type EMSAgencyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * The filter to search for the EMSAgency to update in case it exists.
     */
    where: EMSAgencyWhereUniqueInput
    /**
     * In case the EMSAgency found by the `where` argument doesn't exist, create a new EMSAgency with this data.
     */
    create: XOR<EMSAgencyCreateInput, EMSAgencyUncheckedCreateInput>
    /**
     * In case the EMSAgency was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EMSAgencyUpdateInput, EMSAgencyUncheckedUpdateInput>
  }

  /**
   * EMSAgency delete
   */
  export type EMSAgencyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    /**
     * Filter which EMSAgency to delete.
     */
    where: EMSAgencyWhereUniqueInput
  }

  /**
   * EMSAgency deleteMany
   */
  export type EMSAgencyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EMSAgencies to delete
     */
    where?: EMSAgencyWhereInput
  }

  /**
   * EMSAgency.users
   */
  export type EMSAgency$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    where?: EMSUserWhereInput
    orderBy?: EMSUserOrderByWithRelationInput | EMSUserOrderByWithRelationInput[]
    cursor?: EMSUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EMSUserScalarFieldEnum | EMSUserScalarFieldEnum[]
  }

  /**
   * EMSAgency.units
   */
  export type EMSAgency$unitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    where?: UnitWhereInput
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    cursor?: UnitWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * EMSAgency without action
   */
  export type EMSAgencyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
  }


  /**
   * Model Unit
   */

  export type AggregateUnit = {
    _count: UnitCountAggregateOutputType | null
    _avg: UnitAvgAggregateOutputType | null
    _sum: UnitSumAggregateOutputType | null
    _min: UnitMinAggregateOutputType | null
    _max: UnitMaxAggregateOutputType | null
  }

  export type UnitAvgAggregateOutputType = {
    totalTripsCompleted: number | null
    averageResponseTime: number | null
    performanceScore: Decimal | null
    crewSize: number | null
    baseHourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
    shiftLengthHours: Decimal | null
    maxOvertimeHours: Decimal | null
    vehicleCostPerMile: Decimal | null
    fuelCostPerMile: Decimal | null
    maintenanceCostPerMile: Decimal | null
    maxServiceRadius: Decimal | null
  }

  export type UnitSumAggregateOutputType = {
    totalTripsCompleted: number | null
    averageResponseTime: number | null
    performanceScore: Decimal | null
    crewSize: number | null
    baseHourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
    shiftLengthHours: Decimal | null
    maxOvertimeHours: Decimal | null
    vehicleCostPerMile: Decimal | null
    fuelCostPerMile: Decimal | null
    maintenanceCostPerMile: Decimal | null
    maxServiceRadius: Decimal | null
  }

  export type UnitMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    unitNumber: string | null
    type: string | null
    currentStatus: string | null
    isActive: boolean | null
    assignedTripId: string | null
    lastStatusUpdate: Date | null
    locationUpdatedAt: Date | null
    totalTripsCompleted: number | null
    averageResponseTime: number | null
    lastMaintenanceDate: Date | null
    maintenanceStatus: string | null
    locationUpdateTimestamp: Date | null
    performanceScore: Decimal | null
    crewSize: number | null
    baseHourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
    shiftLengthHours: Decimal | null
    maxOvertimeHours: Decimal | null
    vehicleCostPerMile: Decimal | null
    fuelCostPerMile: Decimal | null
    maintenanceCostPerMile: Decimal | null
    maxServiceRadius: Decimal | null
    interceptCapability: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UnitMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    unitNumber: string | null
    type: string | null
    currentStatus: string | null
    isActive: boolean | null
    assignedTripId: string | null
    lastStatusUpdate: Date | null
    locationUpdatedAt: Date | null
    totalTripsCompleted: number | null
    averageResponseTime: number | null
    lastMaintenanceDate: Date | null
    maintenanceStatus: string | null
    locationUpdateTimestamp: Date | null
    performanceScore: Decimal | null
    crewSize: number | null
    baseHourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
    shiftLengthHours: Decimal | null
    maxOvertimeHours: Decimal | null
    vehicleCostPerMile: Decimal | null
    fuelCostPerMile: Decimal | null
    maintenanceCostPerMile: Decimal | null
    maxServiceRadius: Decimal | null
    interceptCapability: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UnitCountAggregateOutputType = {
    id: number
    agencyId: number
    unitNumber: number
    type: number
    capabilities: number
    currentStatus: number
    currentLocation: number
    isActive: number
    assignedTripId: number
    lastStatusUpdate: number
    statusHistory: number
    currentTripDetails: number
    lastKnownLocation: number
    locationUpdatedAt: number
    totalTripsCompleted: number
    averageResponseTime: number
    lastMaintenanceDate: number
    maintenanceStatus: number
    locationUpdateTimestamp: number
    performanceScore: number
    crewSize: number
    crewComposition: number
    baseHourlyRate: number
    overtimeMultiplier: number
    shiftLengthHours: number
    maxOvertimeHours: number
    vehicleCostPerMile: number
    fuelCostPerMile: number
    maintenanceCostPerMile: number
    homeBaseLocation: number
    stagingLocations: number
    maxServiceRadius: number
    interceptCapability: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UnitAvgAggregateInputType = {
    totalTripsCompleted?: true
    averageResponseTime?: true
    performanceScore?: true
    crewSize?: true
    baseHourlyRate?: true
    overtimeMultiplier?: true
    shiftLengthHours?: true
    maxOvertimeHours?: true
    vehicleCostPerMile?: true
    fuelCostPerMile?: true
    maintenanceCostPerMile?: true
    maxServiceRadius?: true
  }

  export type UnitSumAggregateInputType = {
    totalTripsCompleted?: true
    averageResponseTime?: true
    performanceScore?: true
    crewSize?: true
    baseHourlyRate?: true
    overtimeMultiplier?: true
    shiftLengthHours?: true
    maxOvertimeHours?: true
    vehicleCostPerMile?: true
    fuelCostPerMile?: true
    maintenanceCostPerMile?: true
    maxServiceRadius?: true
  }

  export type UnitMinAggregateInputType = {
    id?: true
    agencyId?: true
    unitNumber?: true
    type?: true
    currentStatus?: true
    isActive?: true
    assignedTripId?: true
    lastStatusUpdate?: true
    locationUpdatedAt?: true
    totalTripsCompleted?: true
    averageResponseTime?: true
    lastMaintenanceDate?: true
    maintenanceStatus?: true
    locationUpdateTimestamp?: true
    performanceScore?: true
    crewSize?: true
    baseHourlyRate?: true
    overtimeMultiplier?: true
    shiftLengthHours?: true
    maxOvertimeHours?: true
    vehicleCostPerMile?: true
    fuelCostPerMile?: true
    maintenanceCostPerMile?: true
    maxServiceRadius?: true
    interceptCapability?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UnitMaxAggregateInputType = {
    id?: true
    agencyId?: true
    unitNumber?: true
    type?: true
    currentStatus?: true
    isActive?: true
    assignedTripId?: true
    lastStatusUpdate?: true
    locationUpdatedAt?: true
    totalTripsCompleted?: true
    averageResponseTime?: true
    lastMaintenanceDate?: true
    maintenanceStatus?: true
    locationUpdateTimestamp?: true
    performanceScore?: true
    crewSize?: true
    baseHourlyRate?: true
    overtimeMultiplier?: true
    shiftLengthHours?: true
    maxOvertimeHours?: true
    vehicleCostPerMile?: true
    fuelCostPerMile?: true
    maintenanceCostPerMile?: true
    maxServiceRadius?: true
    interceptCapability?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UnitCountAggregateInputType = {
    id?: true
    agencyId?: true
    unitNumber?: true
    type?: true
    capabilities?: true
    currentStatus?: true
    currentLocation?: true
    isActive?: true
    assignedTripId?: true
    lastStatusUpdate?: true
    statusHistory?: true
    currentTripDetails?: true
    lastKnownLocation?: true
    locationUpdatedAt?: true
    totalTripsCompleted?: true
    averageResponseTime?: true
    lastMaintenanceDate?: true
    maintenanceStatus?: true
    locationUpdateTimestamp?: true
    performanceScore?: true
    crewSize?: true
    crewComposition?: true
    baseHourlyRate?: true
    overtimeMultiplier?: true
    shiftLengthHours?: true
    maxOvertimeHours?: true
    vehicleCostPerMile?: true
    fuelCostPerMile?: true
    maintenanceCostPerMile?: true
    homeBaseLocation?: true
    stagingLocations?: true
    maxServiceRadius?: true
    interceptCapability?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UnitAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Unit to aggregate.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Units
    **/
    _count?: true | UnitCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UnitAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UnitSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UnitMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UnitMaxAggregateInputType
  }

  export type GetUnitAggregateType<T extends UnitAggregateArgs> = {
        [P in keyof T & keyof AggregateUnit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUnit[P]>
      : GetScalarType<T[P], AggregateUnit[P]>
  }




  export type UnitGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UnitWhereInput
    orderBy?: UnitOrderByWithAggregationInput | UnitOrderByWithAggregationInput[]
    by: UnitScalarFieldEnum[] | UnitScalarFieldEnum
    having?: UnitScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UnitCountAggregateInputType | true
    _avg?: UnitAvgAggregateInputType
    _sum?: UnitSumAggregateInputType
    _min?: UnitMinAggregateInputType
    _max?: UnitMaxAggregateInputType
  }

  export type UnitGroupByOutputType = {
    id: string
    agencyId: string | null
    unitNumber: string
    type: string
    capabilities: string[]
    currentStatus: string
    currentLocation: JsonValue | null
    isActive: boolean
    assignedTripId: string | null
    lastStatusUpdate: Date
    statusHistory: JsonValue | null
    currentTripDetails: JsonValue | null
    lastKnownLocation: JsonValue | null
    locationUpdatedAt: Date | null
    totalTripsCompleted: number
    averageResponseTime: number | null
    lastMaintenanceDate: Date | null
    maintenanceStatus: string | null
    locationUpdateTimestamp: Date | null
    performanceScore: Decimal | null
    crewSize: number | null
    crewComposition: JsonValue | null
    baseHourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
    shiftLengthHours: Decimal | null
    maxOvertimeHours: Decimal | null
    vehicleCostPerMile: Decimal | null
    fuelCostPerMile: Decimal | null
    maintenanceCostPerMile: Decimal | null
    homeBaseLocation: JsonValue | null
    stagingLocations: JsonValue | null
    maxServiceRadius: Decimal | null
    interceptCapability: boolean
    createdAt: Date
    updatedAt: Date
    _count: UnitCountAggregateOutputType | null
    _avg: UnitAvgAggregateOutputType | null
    _sum: UnitSumAggregateOutputType | null
    _min: UnitMinAggregateOutputType | null
    _max: UnitMaxAggregateOutputType | null
  }

  type GetUnitGroupByPayload<T extends UnitGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UnitGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UnitGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UnitGroupByOutputType[P]>
            : GetScalarType<T[P], UnitGroupByOutputType[P]>
        }
      >
    >


  export type UnitSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    unitNumber?: boolean
    type?: boolean
    capabilities?: boolean
    currentStatus?: boolean
    currentLocation?: boolean
    isActive?: boolean
    assignedTripId?: boolean
    lastStatusUpdate?: boolean
    statusHistory?: boolean
    currentTripDetails?: boolean
    lastKnownLocation?: boolean
    locationUpdatedAt?: boolean
    totalTripsCompleted?: boolean
    averageResponseTime?: boolean
    lastMaintenanceDate?: boolean
    maintenanceStatus?: boolean
    locationUpdateTimestamp?: boolean
    performanceScore?: boolean
    crewSize?: boolean
    crewComposition?: boolean
    baseHourlyRate?: boolean
    overtimeMultiplier?: boolean
    shiftLengthHours?: boolean
    maxOvertimeHours?: boolean
    vehicleCostPerMile?: boolean
    fuelCostPerMile?: boolean
    maintenanceCostPerMile?: boolean
    homeBaseLocation?: boolean
    stagingLocations?: boolean
    maxServiceRadius?: boolean
    interceptCapability?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | Unit$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["unit"]>

  export type UnitSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    unitNumber?: boolean
    type?: boolean
    capabilities?: boolean
    currentStatus?: boolean
    currentLocation?: boolean
    isActive?: boolean
    assignedTripId?: boolean
    lastStatusUpdate?: boolean
    statusHistory?: boolean
    currentTripDetails?: boolean
    lastKnownLocation?: boolean
    locationUpdatedAt?: boolean
    totalTripsCompleted?: boolean
    averageResponseTime?: boolean
    lastMaintenanceDate?: boolean
    maintenanceStatus?: boolean
    locationUpdateTimestamp?: boolean
    performanceScore?: boolean
    crewSize?: boolean
    crewComposition?: boolean
    baseHourlyRate?: boolean
    overtimeMultiplier?: boolean
    shiftLengthHours?: boolean
    maxOvertimeHours?: boolean
    vehicleCostPerMile?: boolean
    fuelCostPerMile?: boolean
    maintenanceCostPerMile?: boolean
    homeBaseLocation?: boolean
    stagingLocations?: boolean
    maxServiceRadius?: boolean
    interceptCapability?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | Unit$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["unit"]>

  export type UnitSelectScalar = {
    id?: boolean
    agencyId?: boolean
    unitNumber?: boolean
    type?: boolean
    capabilities?: boolean
    currentStatus?: boolean
    currentLocation?: boolean
    isActive?: boolean
    assignedTripId?: boolean
    lastStatusUpdate?: boolean
    statusHistory?: boolean
    currentTripDetails?: boolean
    lastKnownLocation?: boolean
    locationUpdatedAt?: boolean
    totalTripsCompleted?: boolean
    averageResponseTime?: boolean
    lastMaintenanceDate?: boolean
    maintenanceStatus?: boolean
    locationUpdateTimestamp?: boolean
    performanceScore?: boolean
    crewSize?: boolean
    crewComposition?: boolean
    baseHourlyRate?: boolean
    overtimeMultiplier?: boolean
    shiftLengthHours?: boolean
    maxOvertimeHours?: boolean
    vehicleCostPerMile?: boolean
    fuelCostPerMile?: boolean
    maintenanceCostPerMile?: boolean
    homeBaseLocation?: boolean
    stagingLocations?: boolean
    maxServiceRadius?: boolean
    interceptCapability?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UnitInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | Unit$agencyArgs<ExtArgs>
  }
  export type UnitIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | Unit$agencyArgs<ExtArgs>
  }

  export type $UnitPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Unit"
    objects: {
      agency: Prisma.$EMSAgencyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string | null
      unitNumber: string
      type: string
      capabilities: string[]
      currentStatus: string
      currentLocation: Prisma.JsonValue | null
      isActive: boolean
      assignedTripId: string | null
      lastStatusUpdate: Date
      statusHistory: Prisma.JsonValue | null
      currentTripDetails: Prisma.JsonValue | null
      lastKnownLocation: Prisma.JsonValue | null
      locationUpdatedAt: Date | null
      totalTripsCompleted: number
      averageResponseTime: number | null
      lastMaintenanceDate: Date | null
      maintenanceStatus: string | null
      locationUpdateTimestamp: Date | null
      performanceScore: Prisma.Decimal | null
      crewSize: number | null
      crewComposition: Prisma.JsonValue | null
      baseHourlyRate: Prisma.Decimal | null
      overtimeMultiplier: Prisma.Decimal | null
      shiftLengthHours: Prisma.Decimal | null
      maxOvertimeHours: Prisma.Decimal | null
      vehicleCostPerMile: Prisma.Decimal | null
      fuelCostPerMile: Prisma.Decimal | null
      maintenanceCostPerMile: Prisma.Decimal | null
      homeBaseLocation: Prisma.JsonValue | null
      stagingLocations: Prisma.JsonValue | null
      maxServiceRadius: Prisma.Decimal | null
      interceptCapability: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["unit"]>
    composites: {}
  }

  type UnitGetPayload<S extends boolean | null | undefined | UnitDefaultArgs> = $Result.GetResult<Prisma.$UnitPayload, S>

  type UnitCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UnitFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UnitCountAggregateInputType | true
    }

  export interface UnitDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Unit'], meta: { name: 'Unit' } }
    /**
     * Find zero or one Unit that matches the filter.
     * @param {UnitFindUniqueArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UnitFindUniqueArgs>(args: SelectSubset<T, UnitFindUniqueArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Unit that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UnitFindUniqueOrThrowArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UnitFindUniqueOrThrowArgs>(args: SelectSubset<T, UnitFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Unit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitFindFirstArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UnitFindFirstArgs>(args?: SelectSubset<T, UnitFindFirstArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Unit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitFindFirstOrThrowArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UnitFindFirstOrThrowArgs>(args?: SelectSubset<T, UnitFindFirstOrThrowArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Units
     * const units = await prisma.unit.findMany()
     * 
     * // Get first 10 Units
     * const units = await prisma.unit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const unitWithIdOnly = await prisma.unit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UnitFindManyArgs>(args?: SelectSubset<T, UnitFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Unit.
     * @param {UnitCreateArgs} args - Arguments to create a Unit.
     * @example
     * // Create one Unit
     * const Unit = await prisma.unit.create({
     *   data: {
     *     // ... data to create a Unit
     *   }
     * })
     * 
     */
    create<T extends UnitCreateArgs>(args: SelectSubset<T, UnitCreateArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Units.
     * @param {UnitCreateManyArgs} args - Arguments to create many Units.
     * @example
     * // Create many Units
     * const unit = await prisma.unit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UnitCreateManyArgs>(args?: SelectSubset<T, UnitCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Units and returns the data saved in the database.
     * @param {UnitCreateManyAndReturnArgs} args - Arguments to create many Units.
     * @example
     * // Create many Units
     * const unit = await prisma.unit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Units and only return the `id`
     * const unitWithIdOnly = await prisma.unit.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UnitCreateManyAndReturnArgs>(args?: SelectSubset<T, UnitCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Unit.
     * @param {UnitDeleteArgs} args - Arguments to delete one Unit.
     * @example
     * // Delete one Unit
     * const Unit = await prisma.unit.delete({
     *   where: {
     *     // ... filter to delete one Unit
     *   }
     * })
     * 
     */
    delete<T extends UnitDeleteArgs>(args: SelectSubset<T, UnitDeleteArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Unit.
     * @param {UnitUpdateArgs} args - Arguments to update one Unit.
     * @example
     * // Update one Unit
     * const unit = await prisma.unit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UnitUpdateArgs>(args: SelectSubset<T, UnitUpdateArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Units.
     * @param {UnitDeleteManyArgs} args - Arguments to filter Units to delete.
     * @example
     * // Delete a few Units
     * const { count } = await prisma.unit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UnitDeleteManyArgs>(args?: SelectSubset<T, UnitDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Units
     * const unit = await prisma.unit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UnitUpdateManyArgs>(args: SelectSubset<T, UnitUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Unit.
     * @param {UnitUpsertArgs} args - Arguments to update or create a Unit.
     * @example
     * // Update or create a Unit
     * const unit = await prisma.unit.upsert({
     *   create: {
     *     // ... data to create a Unit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Unit we want to update
     *   }
     * })
     */
    upsert<T extends UnitUpsertArgs>(args: SelectSubset<T, UnitUpsertArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitCountArgs} args - Arguments to filter Units to count.
     * @example
     * // Count the number of Units
     * const count = await prisma.unit.count({
     *   where: {
     *     // ... the filter for the Units we want to count
     *   }
     * })
    **/
    count<T extends UnitCountArgs>(
      args?: Subset<T, UnitCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UnitCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Unit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UnitAggregateArgs>(args: Subset<T, UnitAggregateArgs>): Prisma.PrismaPromise<GetUnitAggregateType<T>>

    /**
     * Group by Unit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UnitGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UnitGroupByArgs['orderBy'] }
        : { orderBy?: UnitGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UnitGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUnitGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Unit model
   */
  readonly fields: UnitFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Unit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UnitClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends Unit$agencyArgs<ExtArgs> = {}>(args?: Subset<T, Unit$agencyArgs<ExtArgs>>): Prisma__EMSAgencyClient<$Result.GetResult<Prisma.$EMSAgencyPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Unit model
   */ 
  interface UnitFieldRefs {
    readonly id: FieldRef<"Unit", 'String'>
    readonly agencyId: FieldRef<"Unit", 'String'>
    readonly unitNumber: FieldRef<"Unit", 'String'>
    readonly type: FieldRef<"Unit", 'String'>
    readonly capabilities: FieldRef<"Unit", 'String[]'>
    readonly currentStatus: FieldRef<"Unit", 'String'>
    readonly currentLocation: FieldRef<"Unit", 'Json'>
    readonly isActive: FieldRef<"Unit", 'Boolean'>
    readonly assignedTripId: FieldRef<"Unit", 'String'>
    readonly lastStatusUpdate: FieldRef<"Unit", 'DateTime'>
    readonly statusHistory: FieldRef<"Unit", 'Json'>
    readonly currentTripDetails: FieldRef<"Unit", 'Json'>
    readonly lastKnownLocation: FieldRef<"Unit", 'Json'>
    readonly locationUpdatedAt: FieldRef<"Unit", 'DateTime'>
    readonly totalTripsCompleted: FieldRef<"Unit", 'Int'>
    readonly averageResponseTime: FieldRef<"Unit", 'Float'>
    readonly lastMaintenanceDate: FieldRef<"Unit", 'DateTime'>
    readonly maintenanceStatus: FieldRef<"Unit", 'String'>
    readonly locationUpdateTimestamp: FieldRef<"Unit", 'DateTime'>
    readonly performanceScore: FieldRef<"Unit", 'Decimal'>
    readonly crewSize: FieldRef<"Unit", 'Int'>
    readonly crewComposition: FieldRef<"Unit", 'Json'>
    readonly baseHourlyRate: FieldRef<"Unit", 'Decimal'>
    readonly overtimeMultiplier: FieldRef<"Unit", 'Decimal'>
    readonly shiftLengthHours: FieldRef<"Unit", 'Decimal'>
    readonly maxOvertimeHours: FieldRef<"Unit", 'Decimal'>
    readonly vehicleCostPerMile: FieldRef<"Unit", 'Decimal'>
    readonly fuelCostPerMile: FieldRef<"Unit", 'Decimal'>
    readonly maintenanceCostPerMile: FieldRef<"Unit", 'Decimal'>
    readonly homeBaseLocation: FieldRef<"Unit", 'Json'>
    readonly stagingLocations: FieldRef<"Unit", 'Json'>
    readonly maxServiceRadius: FieldRef<"Unit", 'Decimal'>
    readonly interceptCapability: FieldRef<"Unit", 'Boolean'>
    readonly createdAt: FieldRef<"Unit", 'DateTime'>
    readonly updatedAt: FieldRef<"Unit", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Unit findUnique
   */
  export type UnitFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit findUniqueOrThrow
   */
  export type UnitFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit findFirst
   */
  export type UnitFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     */
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * Unit findFirstOrThrow
   */
  export type UnitFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     */
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * Unit findMany
   */
  export type UnitFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Units to fetch.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Units.
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * Unit create
   */
  export type UnitCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * The data needed to create a Unit.
     */
    data: XOR<UnitCreateInput, UnitUncheckedCreateInput>
  }

  /**
   * Unit createMany
   */
  export type UnitCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Units.
     */
    data: UnitCreateManyInput | UnitCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Unit createManyAndReturn
   */
  export type UnitCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Units.
     */
    data: UnitCreateManyInput | UnitCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Unit update
   */
  export type UnitUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * The data needed to update a Unit.
     */
    data: XOR<UnitUpdateInput, UnitUncheckedUpdateInput>
    /**
     * Choose, which Unit to update.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit updateMany
   */
  export type UnitUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Units.
     */
    data: XOR<UnitUpdateManyMutationInput, UnitUncheckedUpdateManyInput>
    /**
     * Filter which Units to update
     */
    where?: UnitWhereInput
  }

  /**
   * Unit upsert
   */
  export type UnitUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * The filter to search for the Unit to update in case it exists.
     */
    where: UnitWhereUniqueInput
    /**
     * In case the Unit found by the `where` argument doesn't exist, create a new Unit with this data.
     */
    create: XOR<UnitCreateInput, UnitUncheckedCreateInput>
    /**
     * In case the Unit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UnitUpdateInput, UnitUncheckedUpdateInput>
  }

  /**
   * Unit delete
   */
  export type UnitDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter which Unit to delete.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit deleteMany
   */
  export type UnitDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Units to delete
     */
    where?: UnitWhereInput
  }

  /**
   * Unit.agency
   */
  export type Unit$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSAgency
     */
    select?: EMSAgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSAgencyInclude<ExtArgs> | null
    where?: EMSAgencyWhereInput
  }

  /**
   * Unit without action
   */
  export type UnitDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
  }


  /**
   * Model CrewRole
   */

  export type AggregateCrewRole = {
    _count: CrewRoleCountAggregateOutputType | null
    _avg: CrewRoleAvgAggregateOutputType | null
    _sum: CrewRoleSumAggregateOutputType | null
    _min: CrewRoleMinAggregateOutputType | null
    _max: CrewRoleMaxAggregateOutputType | null
  }

  export type CrewRoleAvgAggregateOutputType = {
    hourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
  }

  export type CrewRoleSumAggregateOutputType = {
    hourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
  }

  export type CrewRoleMinAggregateOutputType = {
    id: string | null
    roleName: string | null
    certificationLevel: string | null
    hourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CrewRoleMaxAggregateOutputType = {
    id: string | null
    roleName: string | null
    certificationLevel: string | null
    hourlyRate: Decimal | null
    overtimeMultiplier: Decimal | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CrewRoleCountAggregateOutputType = {
    id: number
    roleName: number
    certificationLevel: number
    hourlyRate: number
    overtimeMultiplier: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CrewRoleAvgAggregateInputType = {
    hourlyRate?: true
    overtimeMultiplier?: true
  }

  export type CrewRoleSumAggregateInputType = {
    hourlyRate?: true
    overtimeMultiplier?: true
  }

  export type CrewRoleMinAggregateInputType = {
    id?: true
    roleName?: true
    certificationLevel?: true
    hourlyRate?: true
    overtimeMultiplier?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CrewRoleMaxAggregateInputType = {
    id?: true
    roleName?: true
    certificationLevel?: true
    hourlyRate?: true
    overtimeMultiplier?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CrewRoleCountAggregateInputType = {
    id?: true
    roleName?: true
    certificationLevel?: true
    hourlyRate?: true
    overtimeMultiplier?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CrewRoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CrewRole to aggregate.
     */
    where?: CrewRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrewRoles to fetch.
     */
    orderBy?: CrewRoleOrderByWithRelationInput | CrewRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CrewRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrewRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrewRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CrewRoles
    **/
    _count?: true | CrewRoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CrewRoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CrewRoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CrewRoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CrewRoleMaxAggregateInputType
  }

  export type GetCrewRoleAggregateType<T extends CrewRoleAggregateArgs> = {
        [P in keyof T & keyof AggregateCrewRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCrewRole[P]>
      : GetScalarType<T[P], AggregateCrewRole[P]>
  }




  export type CrewRoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CrewRoleWhereInput
    orderBy?: CrewRoleOrderByWithAggregationInput | CrewRoleOrderByWithAggregationInput[]
    by: CrewRoleScalarFieldEnum[] | CrewRoleScalarFieldEnum
    having?: CrewRoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CrewRoleCountAggregateInputType | true
    _avg?: CrewRoleAvgAggregateInputType
    _sum?: CrewRoleSumAggregateInputType
    _min?: CrewRoleMinAggregateInputType
    _max?: CrewRoleMaxAggregateInputType
  }

  export type CrewRoleGroupByOutputType = {
    id: string
    roleName: string
    certificationLevel: string
    hourlyRate: Decimal
    overtimeMultiplier: Decimal
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: CrewRoleCountAggregateOutputType | null
    _avg: CrewRoleAvgAggregateOutputType | null
    _sum: CrewRoleSumAggregateOutputType | null
    _min: CrewRoleMinAggregateOutputType | null
    _max: CrewRoleMaxAggregateOutputType | null
  }

  type GetCrewRoleGroupByPayload<T extends CrewRoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CrewRoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CrewRoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CrewRoleGroupByOutputType[P]>
            : GetScalarType<T[P], CrewRoleGroupByOutputType[P]>
        }
      >
    >


  export type CrewRoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleName?: boolean
    certificationLevel?: boolean
    hourlyRate?: boolean
    overtimeMultiplier?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["crewRole"]>

  export type CrewRoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleName?: boolean
    certificationLevel?: boolean
    hourlyRate?: boolean
    overtimeMultiplier?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["crewRole"]>

  export type CrewRoleSelectScalar = {
    id?: boolean
    roleName?: boolean
    certificationLevel?: boolean
    hourlyRate?: boolean
    overtimeMultiplier?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $CrewRolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CrewRole"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      roleName: string
      certificationLevel: string
      hourlyRate: Prisma.Decimal
      overtimeMultiplier: Prisma.Decimal
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["crewRole"]>
    composites: {}
  }

  type CrewRoleGetPayload<S extends boolean | null | undefined | CrewRoleDefaultArgs> = $Result.GetResult<Prisma.$CrewRolePayload, S>

  type CrewRoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CrewRoleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CrewRoleCountAggregateInputType | true
    }

  export interface CrewRoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CrewRole'], meta: { name: 'CrewRole' } }
    /**
     * Find zero or one CrewRole that matches the filter.
     * @param {CrewRoleFindUniqueArgs} args - Arguments to find a CrewRole
     * @example
     * // Get one CrewRole
     * const crewRole = await prisma.crewRole.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CrewRoleFindUniqueArgs>(args: SelectSubset<T, CrewRoleFindUniqueArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CrewRole that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CrewRoleFindUniqueOrThrowArgs} args - Arguments to find a CrewRole
     * @example
     * // Get one CrewRole
     * const crewRole = await prisma.crewRole.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CrewRoleFindUniqueOrThrowArgs>(args: SelectSubset<T, CrewRoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CrewRole that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrewRoleFindFirstArgs} args - Arguments to find a CrewRole
     * @example
     * // Get one CrewRole
     * const crewRole = await prisma.crewRole.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CrewRoleFindFirstArgs>(args?: SelectSubset<T, CrewRoleFindFirstArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CrewRole that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrewRoleFindFirstOrThrowArgs} args - Arguments to find a CrewRole
     * @example
     * // Get one CrewRole
     * const crewRole = await prisma.crewRole.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CrewRoleFindFirstOrThrowArgs>(args?: SelectSubset<T, CrewRoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CrewRoles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrewRoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CrewRoles
     * const crewRoles = await prisma.crewRole.findMany()
     * 
     * // Get first 10 CrewRoles
     * const crewRoles = await prisma.crewRole.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const crewRoleWithIdOnly = await prisma.crewRole.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CrewRoleFindManyArgs>(args?: SelectSubset<T, CrewRoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CrewRole.
     * @param {CrewRoleCreateArgs} args - Arguments to create a CrewRole.
     * @example
     * // Create one CrewRole
     * const CrewRole = await prisma.crewRole.create({
     *   data: {
     *     // ... data to create a CrewRole
     *   }
     * })
     * 
     */
    create<T extends CrewRoleCreateArgs>(args: SelectSubset<T, CrewRoleCreateArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CrewRoles.
     * @param {CrewRoleCreateManyArgs} args - Arguments to create many CrewRoles.
     * @example
     * // Create many CrewRoles
     * const crewRole = await prisma.crewRole.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CrewRoleCreateManyArgs>(args?: SelectSubset<T, CrewRoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CrewRoles and returns the data saved in the database.
     * @param {CrewRoleCreateManyAndReturnArgs} args - Arguments to create many CrewRoles.
     * @example
     * // Create many CrewRoles
     * const crewRole = await prisma.crewRole.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CrewRoles and only return the `id`
     * const crewRoleWithIdOnly = await prisma.crewRole.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CrewRoleCreateManyAndReturnArgs>(args?: SelectSubset<T, CrewRoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CrewRole.
     * @param {CrewRoleDeleteArgs} args - Arguments to delete one CrewRole.
     * @example
     * // Delete one CrewRole
     * const CrewRole = await prisma.crewRole.delete({
     *   where: {
     *     // ... filter to delete one CrewRole
     *   }
     * })
     * 
     */
    delete<T extends CrewRoleDeleteArgs>(args: SelectSubset<T, CrewRoleDeleteArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CrewRole.
     * @param {CrewRoleUpdateArgs} args - Arguments to update one CrewRole.
     * @example
     * // Update one CrewRole
     * const crewRole = await prisma.crewRole.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CrewRoleUpdateArgs>(args: SelectSubset<T, CrewRoleUpdateArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CrewRoles.
     * @param {CrewRoleDeleteManyArgs} args - Arguments to filter CrewRoles to delete.
     * @example
     * // Delete a few CrewRoles
     * const { count } = await prisma.crewRole.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CrewRoleDeleteManyArgs>(args?: SelectSubset<T, CrewRoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CrewRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrewRoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CrewRoles
     * const crewRole = await prisma.crewRole.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CrewRoleUpdateManyArgs>(args: SelectSubset<T, CrewRoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CrewRole.
     * @param {CrewRoleUpsertArgs} args - Arguments to update or create a CrewRole.
     * @example
     * // Update or create a CrewRole
     * const crewRole = await prisma.crewRole.upsert({
     *   create: {
     *     // ... data to create a CrewRole
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CrewRole we want to update
     *   }
     * })
     */
    upsert<T extends CrewRoleUpsertArgs>(args: SelectSubset<T, CrewRoleUpsertArgs<ExtArgs>>): Prisma__CrewRoleClient<$Result.GetResult<Prisma.$CrewRolePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CrewRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrewRoleCountArgs} args - Arguments to filter CrewRoles to count.
     * @example
     * // Count the number of CrewRoles
     * const count = await prisma.crewRole.count({
     *   where: {
     *     // ... the filter for the CrewRoles we want to count
     *   }
     * })
    **/
    count<T extends CrewRoleCountArgs>(
      args?: Subset<T, CrewRoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CrewRoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CrewRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrewRoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CrewRoleAggregateArgs>(args: Subset<T, CrewRoleAggregateArgs>): Prisma.PrismaPromise<GetCrewRoleAggregateType<T>>

    /**
     * Group by CrewRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrewRoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CrewRoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CrewRoleGroupByArgs['orderBy'] }
        : { orderBy?: CrewRoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CrewRoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCrewRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CrewRole model
   */
  readonly fields: CrewRoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CrewRole.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CrewRoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CrewRole model
   */ 
  interface CrewRoleFieldRefs {
    readonly id: FieldRef<"CrewRole", 'String'>
    readonly roleName: FieldRef<"CrewRole", 'String'>
    readonly certificationLevel: FieldRef<"CrewRole", 'String'>
    readonly hourlyRate: FieldRef<"CrewRole", 'Decimal'>
    readonly overtimeMultiplier: FieldRef<"CrewRole", 'Decimal'>
    readonly isActive: FieldRef<"CrewRole", 'Boolean'>
    readonly createdAt: FieldRef<"CrewRole", 'DateTime'>
    readonly updatedAt: FieldRef<"CrewRole", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CrewRole findUnique
   */
  export type CrewRoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * Filter, which CrewRole to fetch.
     */
    where: CrewRoleWhereUniqueInput
  }

  /**
   * CrewRole findUniqueOrThrow
   */
  export type CrewRoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * Filter, which CrewRole to fetch.
     */
    where: CrewRoleWhereUniqueInput
  }

  /**
   * CrewRole findFirst
   */
  export type CrewRoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * Filter, which CrewRole to fetch.
     */
    where?: CrewRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrewRoles to fetch.
     */
    orderBy?: CrewRoleOrderByWithRelationInput | CrewRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CrewRoles.
     */
    cursor?: CrewRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrewRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrewRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CrewRoles.
     */
    distinct?: CrewRoleScalarFieldEnum | CrewRoleScalarFieldEnum[]
  }

  /**
   * CrewRole findFirstOrThrow
   */
  export type CrewRoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * Filter, which CrewRole to fetch.
     */
    where?: CrewRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrewRoles to fetch.
     */
    orderBy?: CrewRoleOrderByWithRelationInput | CrewRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CrewRoles.
     */
    cursor?: CrewRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrewRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrewRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CrewRoles.
     */
    distinct?: CrewRoleScalarFieldEnum | CrewRoleScalarFieldEnum[]
  }

  /**
   * CrewRole findMany
   */
  export type CrewRoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * Filter, which CrewRoles to fetch.
     */
    where?: CrewRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrewRoles to fetch.
     */
    orderBy?: CrewRoleOrderByWithRelationInput | CrewRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CrewRoles.
     */
    cursor?: CrewRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrewRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrewRoles.
     */
    skip?: number
    distinct?: CrewRoleScalarFieldEnum | CrewRoleScalarFieldEnum[]
  }

  /**
   * CrewRole create
   */
  export type CrewRoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * The data needed to create a CrewRole.
     */
    data: XOR<CrewRoleCreateInput, CrewRoleUncheckedCreateInput>
  }

  /**
   * CrewRole createMany
   */
  export type CrewRoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CrewRoles.
     */
    data: CrewRoleCreateManyInput | CrewRoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CrewRole createManyAndReturn
   */
  export type CrewRoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CrewRoles.
     */
    data: CrewRoleCreateManyInput | CrewRoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CrewRole update
   */
  export type CrewRoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * The data needed to update a CrewRole.
     */
    data: XOR<CrewRoleUpdateInput, CrewRoleUncheckedUpdateInput>
    /**
     * Choose, which CrewRole to update.
     */
    where: CrewRoleWhereUniqueInput
  }

  /**
   * CrewRole updateMany
   */
  export type CrewRoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CrewRoles.
     */
    data: XOR<CrewRoleUpdateManyMutationInput, CrewRoleUncheckedUpdateManyInput>
    /**
     * Filter which CrewRoles to update
     */
    where?: CrewRoleWhereInput
  }

  /**
   * CrewRole upsert
   */
  export type CrewRoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * The filter to search for the CrewRole to update in case it exists.
     */
    where: CrewRoleWhereUniqueInput
    /**
     * In case the CrewRole found by the `where` argument doesn't exist, create a new CrewRole with this data.
     */
    create: XOR<CrewRoleCreateInput, CrewRoleUncheckedCreateInput>
    /**
     * In case the CrewRole was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CrewRoleUpdateInput, CrewRoleUncheckedUpdateInput>
  }

  /**
   * CrewRole delete
   */
  export type CrewRoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
    /**
     * Filter which CrewRole to delete.
     */
    where: CrewRoleWhereUniqueInput
  }

  /**
   * CrewRole deleteMany
   */
  export type CrewRoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CrewRoles to delete
     */
    where?: CrewRoleWhereInput
  }

  /**
   * CrewRole without action
   */
  export type CrewRoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrewRole
     */
    select?: CrewRoleSelect<ExtArgs> | null
  }


  /**
   * Model TransportRequest
   */

  export type AggregateTransportRequest = {
    _count: TransportRequestCountAggregateOutputType | null
    _avg: TransportRequestAvgAggregateOutputType | null
    _sum: TransportRequestSumAggregateOutputType | null
    _min: TransportRequestMinAggregateOutputType | null
    _max: TransportRequestMaxAggregateOutputType | null
  }

  export type TransportRequestAvgAggregateOutputType = {
    notificationRadius: number | null
  }

  export type TransportRequestSumAggregateOutputType = {
    notificationRadius: number | null
  }

  export type TransportRequestMinAggregateOutputType = {
    id: string | null
    tripNumber: string | null
    patientId: string | null
    patientWeight: string | null
    specialNeeds: string | null
    originFacilityId: string | null
    destinationFacilityId: string | null
    fromLocation: string | null
    toLocation: string | null
    scheduledTime: Date | null
    transportLevel: string | null
    urgencyLevel: string | null
    priority: string | null
    status: string | null
    specialRequirements: string | null
    diagnosis: string | null
    mobilityLevel: string | null
    oxygenRequired: boolean | null
    monitoringRequired: boolean | null
    generateQRCode: boolean | null
    qrCodeData: string | null
    notificationRadius: number | null
    transferRequestTime: Date | null
    transferAcceptedTime: Date | null
    emsArrivalTime: Date | null
    emsDepartureTime: Date | null
    requestTimestamp: Date | null
    acceptedTimestamp: Date | null
    pickupTimestamp: Date | null
    completionTimestamp: Date | null
    assignedAgencyId: string | null
    assignedUnitId: string | null
    createdById: string | null
    readyStart: Date | null
    readyEnd: Date | null
    isolation: boolean | null
    bariatric: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransportRequestMaxAggregateOutputType = {
    id: string | null
    tripNumber: string | null
    patientId: string | null
    patientWeight: string | null
    specialNeeds: string | null
    originFacilityId: string | null
    destinationFacilityId: string | null
    fromLocation: string | null
    toLocation: string | null
    scheduledTime: Date | null
    transportLevel: string | null
    urgencyLevel: string | null
    priority: string | null
    status: string | null
    specialRequirements: string | null
    diagnosis: string | null
    mobilityLevel: string | null
    oxygenRequired: boolean | null
    monitoringRequired: boolean | null
    generateQRCode: boolean | null
    qrCodeData: string | null
    notificationRadius: number | null
    transferRequestTime: Date | null
    transferAcceptedTime: Date | null
    emsArrivalTime: Date | null
    emsDepartureTime: Date | null
    requestTimestamp: Date | null
    acceptedTimestamp: Date | null
    pickupTimestamp: Date | null
    completionTimestamp: Date | null
    assignedAgencyId: string | null
    assignedUnitId: string | null
    createdById: string | null
    readyStart: Date | null
    readyEnd: Date | null
    isolation: boolean | null
    bariatric: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransportRequestCountAggregateOutputType = {
    id: number
    tripNumber: number
    patientId: number
    patientWeight: number
    specialNeeds: number
    originFacilityId: number
    destinationFacilityId: number
    fromLocation: number
    toLocation: number
    scheduledTime: number
    transportLevel: number
    urgencyLevel: number
    priority: number
    status: number
    specialRequirements: number
    diagnosis: number
    mobilityLevel: number
    oxygenRequired: number
    monitoringRequired: number
    generateQRCode: number
    qrCodeData: number
    selectedAgencies: number
    notificationRadius: number
    transferRequestTime: number
    transferAcceptedTime: number
    emsArrivalTime: number
    emsDepartureTime: number
    requestTimestamp: number
    acceptedTimestamp: number
    pickupTimestamp: number
    completionTimestamp: number
    assignedAgencyId: number
    assignedUnitId: number
    createdById: number
    readyStart: number
    readyEnd: number
    isolation: number
    bariatric: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TransportRequestAvgAggregateInputType = {
    notificationRadius?: true
  }

  export type TransportRequestSumAggregateInputType = {
    notificationRadius?: true
  }

  export type TransportRequestMinAggregateInputType = {
    id?: true
    tripNumber?: true
    patientId?: true
    patientWeight?: true
    specialNeeds?: true
    originFacilityId?: true
    destinationFacilityId?: true
    fromLocation?: true
    toLocation?: true
    scheduledTime?: true
    transportLevel?: true
    urgencyLevel?: true
    priority?: true
    status?: true
    specialRequirements?: true
    diagnosis?: true
    mobilityLevel?: true
    oxygenRequired?: true
    monitoringRequired?: true
    generateQRCode?: true
    qrCodeData?: true
    notificationRadius?: true
    transferRequestTime?: true
    transferAcceptedTime?: true
    emsArrivalTime?: true
    emsDepartureTime?: true
    requestTimestamp?: true
    acceptedTimestamp?: true
    pickupTimestamp?: true
    completionTimestamp?: true
    assignedAgencyId?: true
    assignedUnitId?: true
    createdById?: true
    readyStart?: true
    readyEnd?: true
    isolation?: true
    bariatric?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransportRequestMaxAggregateInputType = {
    id?: true
    tripNumber?: true
    patientId?: true
    patientWeight?: true
    specialNeeds?: true
    originFacilityId?: true
    destinationFacilityId?: true
    fromLocation?: true
    toLocation?: true
    scheduledTime?: true
    transportLevel?: true
    urgencyLevel?: true
    priority?: true
    status?: true
    specialRequirements?: true
    diagnosis?: true
    mobilityLevel?: true
    oxygenRequired?: true
    monitoringRequired?: true
    generateQRCode?: true
    qrCodeData?: true
    notificationRadius?: true
    transferRequestTime?: true
    transferAcceptedTime?: true
    emsArrivalTime?: true
    emsDepartureTime?: true
    requestTimestamp?: true
    acceptedTimestamp?: true
    pickupTimestamp?: true
    completionTimestamp?: true
    assignedAgencyId?: true
    assignedUnitId?: true
    createdById?: true
    readyStart?: true
    readyEnd?: true
    isolation?: true
    bariatric?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransportRequestCountAggregateInputType = {
    id?: true
    tripNumber?: true
    patientId?: true
    patientWeight?: true
    specialNeeds?: true
    originFacilityId?: true
    destinationFacilityId?: true
    fromLocation?: true
    toLocation?: true
    scheduledTime?: true
    transportLevel?: true
    urgencyLevel?: true
    priority?: true
    status?: true
    specialRequirements?: true
    diagnosis?: true
    mobilityLevel?: true
    oxygenRequired?: true
    monitoringRequired?: true
    generateQRCode?: true
    qrCodeData?: true
    selectedAgencies?: true
    notificationRadius?: true
    transferRequestTime?: true
    transferAcceptedTime?: true
    emsArrivalTime?: true
    emsDepartureTime?: true
    requestTimestamp?: true
    acceptedTimestamp?: true
    pickupTimestamp?: true
    completionTimestamp?: true
    assignedAgencyId?: true
    assignedUnitId?: true
    createdById?: true
    readyStart?: true
    readyEnd?: true
    isolation?: true
    bariatric?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TransportRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransportRequest to aggregate.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransportRequests
    **/
    _count?: true | TransportRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransportRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransportRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransportRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransportRequestMaxAggregateInputType
  }

  export type GetTransportRequestAggregateType<T extends TransportRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateTransportRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransportRequest[P]>
      : GetScalarType<T[P], AggregateTransportRequest[P]>
  }




  export type TransportRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransportRequestWhereInput
    orderBy?: TransportRequestOrderByWithAggregationInput | TransportRequestOrderByWithAggregationInput[]
    by: TransportRequestScalarFieldEnum[] | TransportRequestScalarFieldEnum
    having?: TransportRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransportRequestCountAggregateInputType | true
    _avg?: TransportRequestAvgAggregateInputType
    _sum?: TransportRequestSumAggregateInputType
    _min?: TransportRequestMinAggregateInputType
    _max?: TransportRequestMaxAggregateInputType
  }

  export type TransportRequestGroupByOutputType = {
    id: string
    tripNumber: string | null
    patientId: string
    patientWeight: string | null
    specialNeeds: string | null
    originFacilityId: string | null
    destinationFacilityId: string | null
    fromLocation: string | null
    toLocation: string | null
    scheduledTime: Date | null
    transportLevel: string
    urgencyLevel: string | null
    priority: string
    status: string
    specialRequirements: string | null
    diagnosis: string | null
    mobilityLevel: string | null
    oxygenRequired: boolean
    monitoringRequired: boolean
    generateQRCode: boolean
    qrCodeData: string | null
    selectedAgencies: string[]
    notificationRadius: number | null
    transferRequestTime: Date | null
    transferAcceptedTime: Date | null
    emsArrivalTime: Date | null
    emsDepartureTime: Date | null
    requestTimestamp: Date
    acceptedTimestamp: Date | null
    pickupTimestamp: Date | null
    completionTimestamp: Date | null
    assignedAgencyId: string | null
    assignedUnitId: string | null
    createdById: string | null
    readyStart: Date | null
    readyEnd: Date | null
    isolation: boolean
    bariatric: boolean
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: TransportRequestCountAggregateOutputType | null
    _avg: TransportRequestAvgAggregateOutputType | null
    _sum: TransportRequestSumAggregateOutputType | null
    _min: TransportRequestMinAggregateOutputType | null
    _max: TransportRequestMaxAggregateOutputType | null
  }

  type GetTransportRequestGroupByPayload<T extends TransportRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransportRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransportRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransportRequestGroupByOutputType[P]>
            : GetScalarType<T[P], TransportRequestGroupByOutputType[P]>
        }
      >
    >


  export type TransportRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tripNumber?: boolean
    patientId?: boolean
    patientWeight?: boolean
    specialNeeds?: boolean
    originFacilityId?: boolean
    destinationFacilityId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    scheduledTime?: boolean
    transportLevel?: boolean
    urgencyLevel?: boolean
    priority?: boolean
    status?: boolean
    specialRequirements?: boolean
    diagnosis?: boolean
    mobilityLevel?: boolean
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: boolean
    selectedAgencies?: boolean
    notificationRadius?: boolean
    transferRequestTime?: boolean
    transferAcceptedTime?: boolean
    emsArrivalTime?: boolean
    emsDepartureTime?: boolean
    requestTimestamp?: boolean
    acceptedTimestamp?: boolean
    pickupTimestamp?: boolean
    completionTimestamp?: boolean
    assignedAgencyId?: boolean
    assignedUnitId?: boolean
    createdById?: boolean
    readyStart?: boolean
    readyEnd?: boolean
    isolation?: boolean
    bariatric?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
  }, ExtArgs["result"]["transportRequest"]>

  export type TransportRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tripNumber?: boolean
    patientId?: boolean
    patientWeight?: boolean
    specialNeeds?: boolean
    originFacilityId?: boolean
    destinationFacilityId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    scheduledTime?: boolean
    transportLevel?: boolean
    urgencyLevel?: boolean
    priority?: boolean
    status?: boolean
    specialRequirements?: boolean
    diagnosis?: boolean
    mobilityLevel?: boolean
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: boolean
    selectedAgencies?: boolean
    notificationRadius?: boolean
    transferRequestTime?: boolean
    transferAcceptedTime?: boolean
    emsArrivalTime?: boolean
    emsDepartureTime?: boolean
    requestTimestamp?: boolean
    acceptedTimestamp?: boolean
    pickupTimestamp?: boolean
    completionTimestamp?: boolean
    assignedAgencyId?: boolean
    assignedUnitId?: boolean
    createdById?: boolean
    readyStart?: boolean
    readyEnd?: boolean
    isolation?: boolean
    bariatric?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
  }, ExtArgs["result"]["transportRequest"]>

  export type TransportRequestSelectScalar = {
    id?: boolean
    tripNumber?: boolean
    patientId?: boolean
    patientWeight?: boolean
    specialNeeds?: boolean
    originFacilityId?: boolean
    destinationFacilityId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    scheduledTime?: boolean
    transportLevel?: boolean
    urgencyLevel?: boolean
    priority?: boolean
    status?: boolean
    specialRequirements?: boolean
    diagnosis?: boolean
    mobilityLevel?: boolean
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: boolean
    selectedAgencies?: boolean
    notificationRadius?: boolean
    transferRequestTime?: boolean
    transferAcceptedTime?: boolean
    emsArrivalTime?: boolean
    emsDepartureTime?: boolean
    requestTimestamp?: boolean
    acceptedTimestamp?: boolean
    pickupTimestamp?: boolean
    completionTimestamp?: boolean
    assignedAgencyId?: boolean
    assignedUnitId?: boolean
    createdById?: boolean
    readyStart?: boolean
    readyEnd?: boolean
    isolation?: boolean
    bariatric?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TransportRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
  }
  export type TransportRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
  }

  export type $TransportRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransportRequest"
    objects: {
      createdBy: Prisma.$EMSUserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tripNumber: string | null
      patientId: string
      patientWeight: string | null
      specialNeeds: string | null
      originFacilityId: string | null
      destinationFacilityId: string | null
      fromLocation: string | null
      toLocation: string | null
      scheduledTime: Date | null
      transportLevel: string
      urgencyLevel: string | null
      priority: string
      status: string
      specialRequirements: string | null
      diagnosis: string | null
      mobilityLevel: string | null
      oxygenRequired: boolean
      monitoringRequired: boolean
      generateQRCode: boolean
      qrCodeData: string | null
      selectedAgencies: string[]
      notificationRadius: number | null
      transferRequestTime: Date | null
      transferAcceptedTime: Date | null
      emsArrivalTime: Date | null
      emsDepartureTime: Date | null
      requestTimestamp: Date
      acceptedTimestamp: Date | null
      pickupTimestamp: Date | null
      completionTimestamp: Date | null
      assignedAgencyId: string | null
      assignedUnitId: string | null
      createdById: string | null
      readyStart: Date | null
      readyEnd: Date | null
      isolation: boolean
      bariatric: boolean
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["transportRequest"]>
    composites: {}
  }

  type TransportRequestGetPayload<S extends boolean | null | undefined | TransportRequestDefaultArgs> = $Result.GetResult<Prisma.$TransportRequestPayload, S>

  type TransportRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TransportRequestFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TransportRequestCountAggregateInputType | true
    }

  export interface TransportRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransportRequest'], meta: { name: 'TransportRequest' } }
    /**
     * Find zero or one TransportRequest that matches the filter.
     * @param {TransportRequestFindUniqueArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransportRequestFindUniqueArgs>(args: SelectSubset<T, TransportRequestFindUniqueArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TransportRequest that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TransportRequestFindUniqueOrThrowArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransportRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, TransportRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TransportRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestFindFirstArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransportRequestFindFirstArgs>(args?: SelectSubset<T, TransportRequestFindFirstArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TransportRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestFindFirstOrThrowArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransportRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, TransportRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TransportRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransportRequests
     * const transportRequests = await prisma.transportRequest.findMany()
     * 
     * // Get first 10 TransportRequests
     * const transportRequests = await prisma.transportRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transportRequestWithIdOnly = await prisma.transportRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransportRequestFindManyArgs>(args?: SelectSubset<T, TransportRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TransportRequest.
     * @param {TransportRequestCreateArgs} args - Arguments to create a TransportRequest.
     * @example
     * // Create one TransportRequest
     * const TransportRequest = await prisma.transportRequest.create({
     *   data: {
     *     // ... data to create a TransportRequest
     *   }
     * })
     * 
     */
    create<T extends TransportRequestCreateArgs>(args: SelectSubset<T, TransportRequestCreateArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TransportRequests.
     * @param {TransportRequestCreateManyArgs} args - Arguments to create many TransportRequests.
     * @example
     * // Create many TransportRequests
     * const transportRequest = await prisma.transportRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransportRequestCreateManyArgs>(args?: SelectSubset<T, TransportRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TransportRequests and returns the data saved in the database.
     * @param {TransportRequestCreateManyAndReturnArgs} args - Arguments to create many TransportRequests.
     * @example
     * // Create many TransportRequests
     * const transportRequest = await prisma.transportRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TransportRequests and only return the `id`
     * const transportRequestWithIdOnly = await prisma.transportRequest.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransportRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, TransportRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TransportRequest.
     * @param {TransportRequestDeleteArgs} args - Arguments to delete one TransportRequest.
     * @example
     * // Delete one TransportRequest
     * const TransportRequest = await prisma.transportRequest.delete({
     *   where: {
     *     // ... filter to delete one TransportRequest
     *   }
     * })
     * 
     */
    delete<T extends TransportRequestDeleteArgs>(args: SelectSubset<T, TransportRequestDeleteArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TransportRequest.
     * @param {TransportRequestUpdateArgs} args - Arguments to update one TransportRequest.
     * @example
     * // Update one TransportRequest
     * const transportRequest = await prisma.transportRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransportRequestUpdateArgs>(args: SelectSubset<T, TransportRequestUpdateArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TransportRequests.
     * @param {TransportRequestDeleteManyArgs} args - Arguments to filter TransportRequests to delete.
     * @example
     * // Delete a few TransportRequests
     * const { count } = await prisma.transportRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransportRequestDeleteManyArgs>(args?: SelectSubset<T, TransportRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransportRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransportRequests
     * const transportRequest = await prisma.transportRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransportRequestUpdateManyArgs>(args: SelectSubset<T, TransportRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TransportRequest.
     * @param {TransportRequestUpsertArgs} args - Arguments to update or create a TransportRequest.
     * @example
     * // Update or create a TransportRequest
     * const transportRequest = await prisma.transportRequest.upsert({
     *   create: {
     *     // ... data to create a TransportRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransportRequest we want to update
     *   }
     * })
     */
    upsert<T extends TransportRequestUpsertArgs>(args: SelectSubset<T, TransportRequestUpsertArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TransportRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestCountArgs} args - Arguments to filter TransportRequests to count.
     * @example
     * // Count the number of TransportRequests
     * const count = await prisma.transportRequest.count({
     *   where: {
     *     // ... the filter for the TransportRequests we want to count
     *   }
     * })
    **/
    count<T extends TransportRequestCountArgs>(
      args?: Subset<T, TransportRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransportRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransportRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransportRequestAggregateArgs>(args: Subset<T, TransportRequestAggregateArgs>): Prisma.PrismaPromise<GetTransportRequestAggregateType<T>>

    /**
     * Group by TransportRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransportRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransportRequestGroupByArgs['orderBy'] }
        : { orderBy?: TransportRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransportRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransportRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransportRequest model
   */
  readonly fields: TransportRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransportRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransportRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends TransportRequest$createdByArgs<ExtArgs> = {}>(args?: Subset<T, TransportRequest$createdByArgs<ExtArgs>>): Prisma__EMSUserClient<$Result.GetResult<Prisma.$EMSUserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransportRequest model
   */ 
  interface TransportRequestFieldRefs {
    readonly id: FieldRef<"TransportRequest", 'String'>
    readonly tripNumber: FieldRef<"TransportRequest", 'String'>
    readonly patientId: FieldRef<"TransportRequest", 'String'>
    readonly patientWeight: FieldRef<"TransportRequest", 'String'>
    readonly specialNeeds: FieldRef<"TransportRequest", 'String'>
    readonly originFacilityId: FieldRef<"TransportRequest", 'String'>
    readonly destinationFacilityId: FieldRef<"TransportRequest", 'String'>
    readonly fromLocation: FieldRef<"TransportRequest", 'String'>
    readonly toLocation: FieldRef<"TransportRequest", 'String'>
    readonly scheduledTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly transportLevel: FieldRef<"TransportRequest", 'String'>
    readonly urgencyLevel: FieldRef<"TransportRequest", 'String'>
    readonly priority: FieldRef<"TransportRequest", 'String'>
    readonly status: FieldRef<"TransportRequest", 'String'>
    readonly specialRequirements: FieldRef<"TransportRequest", 'String'>
    readonly diagnosis: FieldRef<"TransportRequest", 'String'>
    readonly mobilityLevel: FieldRef<"TransportRequest", 'String'>
    readonly oxygenRequired: FieldRef<"TransportRequest", 'Boolean'>
    readonly monitoringRequired: FieldRef<"TransportRequest", 'Boolean'>
    readonly generateQRCode: FieldRef<"TransportRequest", 'Boolean'>
    readonly qrCodeData: FieldRef<"TransportRequest", 'String'>
    readonly selectedAgencies: FieldRef<"TransportRequest", 'String[]'>
    readonly notificationRadius: FieldRef<"TransportRequest", 'Int'>
    readonly transferRequestTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly transferAcceptedTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly emsArrivalTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly emsDepartureTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly requestTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly acceptedTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly pickupTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly completionTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly assignedAgencyId: FieldRef<"TransportRequest", 'String'>
    readonly assignedUnitId: FieldRef<"TransportRequest", 'String'>
    readonly createdById: FieldRef<"TransportRequest", 'String'>
    readonly readyStart: FieldRef<"TransportRequest", 'DateTime'>
    readonly readyEnd: FieldRef<"TransportRequest", 'DateTime'>
    readonly isolation: FieldRef<"TransportRequest", 'Boolean'>
    readonly bariatric: FieldRef<"TransportRequest", 'Boolean'>
    readonly notes: FieldRef<"TransportRequest", 'String'>
    readonly createdAt: FieldRef<"TransportRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"TransportRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TransportRequest findUnique
   */
  export type TransportRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest findUniqueOrThrow
   */
  export type TransportRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest findFirst
   */
  export type TransportRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransportRequests.
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransportRequests.
     */
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * TransportRequest findFirstOrThrow
   */
  export type TransportRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransportRequests.
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransportRequests.
     */
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * TransportRequest findMany
   */
  export type TransportRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequests to fetch.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransportRequests.
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * TransportRequest create
   */
  export type TransportRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a TransportRequest.
     */
    data: XOR<TransportRequestCreateInput, TransportRequestUncheckedCreateInput>
  }

  /**
   * TransportRequest createMany
   */
  export type TransportRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransportRequests.
     */
    data: TransportRequestCreateManyInput | TransportRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransportRequest createManyAndReturn
   */
  export type TransportRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TransportRequests.
     */
    data: TransportRequestCreateManyInput | TransportRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TransportRequest update
   */
  export type TransportRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a TransportRequest.
     */
    data: XOR<TransportRequestUpdateInput, TransportRequestUncheckedUpdateInput>
    /**
     * Choose, which TransportRequest to update.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest updateMany
   */
  export type TransportRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransportRequests.
     */
    data: XOR<TransportRequestUpdateManyMutationInput, TransportRequestUncheckedUpdateManyInput>
    /**
     * Filter which TransportRequests to update
     */
    where?: TransportRequestWhereInput
  }

  /**
   * TransportRequest upsert
   */
  export type TransportRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the TransportRequest to update in case it exists.
     */
    where: TransportRequestWhereUniqueInput
    /**
     * In case the TransportRequest found by the `where` argument doesn't exist, create a new TransportRequest with this data.
     */
    create: XOR<TransportRequestCreateInput, TransportRequestUncheckedCreateInput>
    /**
     * In case the TransportRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransportRequestUpdateInput, TransportRequestUncheckedUpdateInput>
  }

  /**
   * TransportRequest delete
   */
  export type TransportRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter which TransportRequest to delete.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest deleteMany
   */
  export type TransportRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransportRequests to delete
     */
    where?: TransportRequestWhereInput
  }

  /**
   * TransportRequest.createdBy
   */
  export type TransportRequest$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EMSUser
     */
    select?: EMSUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EMSUserInclude<ExtArgs> | null
    where?: EMSUserWhereInput
  }

  /**
   * TransportRequest without action
   */
  export type TransportRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const EMSUserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    phone: 'phone',
    agencyName: 'agencyName',
    agencyId: 'agencyId',
    emailNotifications: 'emailNotifications',
    smsNotifications: 'smsNotifications',
    isActive: 'isActive',
    userType: 'userType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EMSUserScalarFieldEnum = (typeof EMSUserScalarFieldEnum)[keyof typeof EMSUserScalarFieldEnum]


  export const EMSAgencyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    contactName: 'contactName',
    phone: 'phone',
    email: 'email',
    address: 'address',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    serviceArea: 'serviceArea',
    operatingHours: 'operatingHours',
    capabilities: 'capabilities',
    pricingStructure: 'pricingStructure',
    isActive: 'isActive',
    status: 'status',
    addedBy: 'addedBy',
    addedAt: 'addedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EMSAgencyScalarFieldEnum = (typeof EMSAgencyScalarFieldEnum)[keyof typeof EMSAgencyScalarFieldEnum]


  export const UnitScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    unitNumber: 'unitNumber',
    type: 'type',
    capabilities: 'capabilities',
    currentStatus: 'currentStatus',
    currentLocation: 'currentLocation',
    isActive: 'isActive',
    assignedTripId: 'assignedTripId',
    lastStatusUpdate: 'lastStatusUpdate',
    statusHistory: 'statusHistory',
    currentTripDetails: 'currentTripDetails',
    lastKnownLocation: 'lastKnownLocation',
    locationUpdatedAt: 'locationUpdatedAt',
    totalTripsCompleted: 'totalTripsCompleted',
    averageResponseTime: 'averageResponseTime',
    lastMaintenanceDate: 'lastMaintenanceDate',
    maintenanceStatus: 'maintenanceStatus',
    locationUpdateTimestamp: 'locationUpdateTimestamp',
    performanceScore: 'performanceScore',
    crewSize: 'crewSize',
    crewComposition: 'crewComposition',
    baseHourlyRate: 'baseHourlyRate',
    overtimeMultiplier: 'overtimeMultiplier',
    shiftLengthHours: 'shiftLengthHours',
    maxOvertimeHours: 'maxOvertimeHours',
    vehicleCostPerMile: 'vehicleCostPerMile',
    fuelCostPerMile: 'fuelCostPerMile',
    maintenanceCostPerMile: 'maintenanceCostPerMile',
    homeBaseLocation: 'homeBaseLocation',
    stagingLocations: 'stagingLocations',
    maxServiceRadius: 'maxServiceRadius',
    interceptCapability: 'interceptCapability',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UnitScalarFieldEnum = (typeof UnitScalarFieldEnum)[keyof typeof UnitScalarFieldEnum]


  export const CrewRoleScalarFieldEnum: {
    id: 'id',
    roleName: 'roleName',
    certificationLevel: 'certificationLevel',
    hourlyRate: 'hourlyRate',
    overtimeMultiplier: 'overtimeMultiplier',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CrewRoleScalarFieldEnum = (typeof CrewRoleScalarFieldEnum)[keyof typeof CrewRoleScalarFieldEnum]


  export const TransportRequestScalarFieldEnum: {
    id: 'id',
    tripNumber: 'tripNumber',
    patientId: 'patientId',
    patientWeight: 'patientWeight',
    specialNeeds: 'specialNeeds',
    originFacilityId: 'originFacilityId',
    destinationFacilityId: 'destinationFacilityId',
    fromLocation: 'fromLocation',
    toLocation: 'toLocation',
    scheduledTime: 'scheduledTime',
    transportLevel: 'transportLevel',
    urgencyLevel: 'urgencyLevel',
    priority: 'priority',
    status: 'status',
    specialRequirements: 'specialRequirements',
    diagnosis: 'diagnosis',
    mobilityLevel: 'mobilityLevel',
    oxygenRequired: 'oxygenRequired',
    monitoringRequired: 'monitoringRequired',
    generateQRCode: 'generateQRCode',
    qrCodeData: 'qrCodeData',
    selectedAgencies: 'selectedAgencies',
    notificationRadius: 'notificationRadius',
    transferRequestTime: 'transferRequestTime',
    transferAcceptedTime: 'transferAcceptedTime',
    emsArrivalTime: 'emsArrivalTime',
    emsDepartureTime: 'emsDepartureTime',
    requestTimestamp: 'requestTimestamp',
    acceptedTimestamp: 'acceptedTimestamp',
    pickupTimestamp: 'pickupTimestamp',
    completionTimestamp: 'completionTimestamp',
    assignedAgencyId: 'assignedAgencyId',
    assignedUnitId: 'assignedUnitId',
    createdById: 'createdById',
    readyStart: 'readyStart',
    readyEnd: 'readyEnd',
    isolation: 'isolation',
    bariatric: 'bariatric',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TransportRequestScalarFieldEnum = (typeof TransportRequestScalarFieldEnum)[keyof typeof TransportRequestScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    
  /**
   * Deep Input Types
   */


  export type EMSUserWhereInput = {
    AND?: EMSUserWhereInput | EMSUserWhereInput[]
    OR?: EMSUserWhereInput[]
    NOT?: EMSUserWhereInput | EMSUserWhereInput[]
    id?: StringFilter<"EMSUser"> | string
    email?: StringFilter<"EMSUser"> | string
    password?: StringFilter<"EMSUser"> | string
    name?: StringFilter<"EMSUser"> | string
    phone?: StringNullableFilter<"EMSUser"> | string | null
    agencyName?: StringFilter<"EMSUser"> | string
    agencyId?: StringNullableFilter<"EMSUser"> | string | null
    emailNotifications?: BoolFilter<"EMSUser"> | boolean
    smsNotifications?: BoolFilter<"EMSUser"> | boolean
    isActive?: BoolFilter<"EMSUser"> | boolean
    userType?: StringFilter<"EMSUser"> | string
    createdAt?: DateTimeFilter<"EMSUser"> | Date | string
    updatedAt?: DateTimeFilter<"EMSUser"> | Date | string
    agency?: XOR<EMSAgencyNullableRelationFilter, EMSAgencyWhereInput> | null
    transportRequests?: TransportRequestListRelationFilter
  }

  export type EMSUserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    agencyName?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agency?: EMSAgencyOrderByWithRelationInput
    transportRequests?: TransportRequestOrderByRelationAggregateInput
  }

  export type EMSUserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: EMSUserWhereInput | EMSUserWhereInput[]
    OR?: EMSUserWhereInput[]
    NOT?: EMSUserWhereInput | EMSUserWhereInput[]
    password?: StringFilter<"EMSUser"> | string
    name?: StringFilter<"EMSUser"> | string
    phone?: StringNullableFilter<"EMSUser"> | string | null
    agencyName?: StringFilter<"EMSUser"> | string
    agencyId?: StringNullableFilter<"EMSUser"> | string | null
    emailNotifications?: BoolFilter<"EMSUser"> | boolean
    smsNotifications?: BoolFilter<"EMSUser"> | boolean
    isActive?: BoolFilter<"EMSUser"> | boolean
    userType?: StringFilter<"EMSUser"> | string
    createdAt?: DateTimeFilter<"EMSUser"> | Date | string
    updatedAt?: DateTimeFilter<"EMSUser"> | Date | string
    agency?: XOR<EMSAgencyNullableRelationFilter, EMSAgencyWhereInput> | null
    transportRequests?: TransportRequestListRelationFilter
  }, "id" | "email">

  export type EMSUserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    agencyName?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EMSUserCountOrderByAggregateInput
    _max?: EMSUserMaxOrderByAggregateInput
    _min?: EMSUserMinOrderByAggregateInput
  }

  export type EMSUserScalarWhereWithAggregatesInput = {
    AND?: EMSUserScalarWhereWithAggregatesInput | EMSUserScalarWhereWithAggregatesInput[]
    OR?: EMSUserScalarWhereWithAggregatesInput[]
    NOT?: EMSUserScalarWhereWithAggregatesInput | EMSUserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EMSUser"> | string
    email?: StringWithAggregatesFilter<"EMSUser"> | string
    password?: StringWithAggregatesFilter<"EMSUser"> | string
    name?: StringWithAggregatesFilter<"EMSUser"> | string
    phone?: StringNullableWithAggregatesFilter<"EMSUser"> | string | null
    agencyName?: StringWithAggregatesFilter<"EMSUser"> | string
    agencyId?: StringNullableWithAggregatesFilter<"EMSUser"> | string | null
    emailNotifications?: BoolWithAggregatesFilter<"EMSUser"> | boolean
    smsNotifications?: BoolWithAggregatesFilter<"EMSUser"> | boolean
    isActive?: BoolWithAggregatesFilter<"EMSUser"> | boolean
    userType?: StringWithAggregatesFilter<"EMSUser"> | string
    createdAt?: DateTimeWithAggregatesFilter<"EMSUser"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EMSUser"> | Date | string
  }

  export type EMSAgencyWhereInput = {
    AND?: EMSAgencyWhereInput | EMSAgencyWhereInput[]
    OR?: EMSAgencyWhereInput[]
    NOT?: EMSAgencyWhereInput | EMSAgencyWhereInput[]
    id?: StringFilter<"EMSAgency"> | string
    name?: StringFilter<"EMSAgency"> | string
    contactName?: StringFilter<"EMSAgency"> | string
    phone?: StringFilter<"EMSAgency"> | string
    email?: StringFilter<"EMSAgency"> | string
    address?: StringFilter<"EMSAgency"> | string
    city?: StringFilter<"EMSAgency"> | string
    state?: StringFilter<"EMSAgency"> | string
    zipCode?: StringFilter<"EMSAgency"> | string
    serviceArea?: StringNullableListFilter<"EMSAgency">
    operatingHours?: JsonNullableFilter<"EMSAgency">
    capabilities?: StringNullableListFilter<"EMSAgency">
    pricingStructure?: JsonNullableFilter<"EMSAgency">
    isActive?: BoolFilter<"EMSAgency"> | boolean
    status?: StringFilter<"EMSAgency"> | string
    addedBy?: StringNullableFilter<"EMSAgency"> | string | null
    addedAt?: DateTimeFilter<"EMSAgency"> | Date | string
    createdAt?: DateTimeFilter<"EMSAgency"> | Date | string
    updatedAt?: DateTimeFilter<"EMSAgency"> | Date | string
    users?: EMSUserListRelationFilter
    units?: UnitListRelationFilter
  }

  export type EMSAgencyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    contactName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    serviceArea?: SortOrder
    operatingHours?: SortOrderInput | SortOrder
    capabilities?: SortOrder
    pricingStructure?: SortOrderInput | SortOrder
    isActive?: SortOrder
    status?: SortOrder
    addedBy?: SortOrderInput | SortOrder
    addedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    users?: EMSUserOrderByRelationAggregateInput
    units?: UnitOrderByRelationAggregateInput
  }

  export type EMSAgencyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EMSAgencyWhereInput | EMSAgencyWhereInput[]
    OR?: EMSAgencyWhereInput[]
    NOT?: EMSAgencyWhereInput | EMSAgencyWhereInput[]
    name?: StringFilter<"EMSAgency"> | string
    contactName?: StringFilter<"EMSAgency"> | string
    phone?: StringFilter<"EMSAgency"> | string
    email?: StringFilter<"EMSAgency"> | string
    address?: StringFilter<"EMSAgency"> | string
    city?: StringFilter<"EMSAgency"> | string
    state?: StringFilter<"EMSAgency"> | string
    zipCode?: StringFilter<"EMSAgency"> | string
    serviceArea?: StringNullableListFilter<"EMSAgency">
    operatingHours?: JsonNullableFilter<"EMSAgency">
    capabilities?: StringNullableListFilter<"EMSAgency">
    pricingStructure?: JsonNullableFilter<"EMSAgency">
    isActive?: BoolFilter<"EMSAgency"> | boolean
    status?: StringFilter<"EMSAgency"> | string
    addedBy?: StringNullableFilter<"EMSAgency"> | string | null
    addedAt?: DateTimeFilter<"EMSAgency"> | Date | string
    createdAt?: DateTimeFilter<"EMSAgency"> | Date | string
    updatedAt?: DateTimeFilter<"EMSAgency"> | Date | string
    users?: EMSUserListRelationFilter
    units?: UnitListRelationFilter
  }, "id">

  export type EMSAgencyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    contactName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    serviceArea?: SortOrder
    operatingHours?: SortOrderInput | SortOrder
    capabilities?: SortOrder
    pricingStructure?: SortOrderInput | SortOrder
    isActive?: SortOrder
    status?: SortOrder
    addedBy?: SortOrderInput | SortOrder
    addedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EMSAgencyCountOrderByAggregateInput
    _max?: EMSAgencyMaxOrderByAggregateInput
    _min?: EMSAgencyMinOrderByAggregateInput
  }

  export type EMSAgencyScalarWhereWithAggregatesInput = {
    AND?: EMSAgencyScalarWhereWithAggregatesInput | EMSAgencyScalarWhereWithAggregatesInput[]
    OR?: EMSAgencyScalarWhereWithAggregatesInput[]
    NOT?: EMSAgencyScalarWhereWithAggregatesInput | EMSAgencyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EMSAgency"> | string
    name?: StringWithAggregatesFilter<"EMSAgency"> | string
    contactName?: StringWithAggregatesFilter<"EMSAgency"> | string
    phone?: StringWithAggregatesFilter<"EMSAgency"> | string
    email?: StringWithAggregatesFilter<"EMSAgency"> | string
    address?: StringWithAggregatesFilter<"EMSAgency"> | string
    city?: StringWithAggregatesFilter<"EMSAgency"> | string
    state?: StringWithAggregatesFilter<"EMSAgency"> | string
    zipCode?: StringWithAggregatesFilter<"EMSAgency"> | string
    serviceArea?: StringNullableListFilter<"EMSAgency">
    operatingHours?: JsonNullableWithAggregatesFilter<"EMSAgency">
    capabilities?: StringNullableListFilter<"EMSAgency">
    pricingStructure?: JsonNullableWithAggregatesFilter<"EMSAgency">
    isActive?: BoolWithAggregatesFilter<"EMSAgency"> | boolean
    status?: StringWithAggregatesFilter<"EMSAgency"> | string
    addedBy?: StringNullableWithAggregatesFilter<"EMSAgency"> | string | null
    addedAt?: DateTimeWithAggregatesFilter<"EMSAgency"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"EMSAgency"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EMSAgency"> | Date | string
  }

  export type UnitWhereInput = {
    AND?: UnitWhereInput | UnitWhereInput[]
    OR?: UnitWhereInput[]
    NOT?: UnitWhereInput | UnitWhereInput[]
    id?: StringFilter<"Unit"> | string
    agencyId?: StringNullableFilter<"Unit"> | string | null
    unitNumber?: StringFilter<"Unit"> | string
    type?: StringFilter<"Unit"> | string
    capabilities?: StringNullableListFilter<"Unit">
    currentStatus?: StringFilter<"Unit"> | string
    currentLocation?: JsonNullableFilter<"Unit">
    isActive?: BoolFilter<"Unit"> | boolean
    assignedTripId?: StringNullableFilter<"Unit"> | string | null
    lastStatusUpdate?: DateTimeFilter<"Unit"> | Date | string
    statusHistory?: JsonNullableFilter<"Unit">
    currentTripDetails?: JsonNullableFilter<"Unit">
    lastKnownLocation?: JsonNullableFilter<"Unit">
    locationUpdatedAt?: DateTimeNullableFilter<"Unit"> | Date | string | null
    totalTripsCompleted?: IntFilter<"Unit"> | number
    averageResponseTime?: FloatNullableFilter<"Unit"> | number | null
    lastMaintenanceDate?: DateTimeNullableFilter<"Unit"> | Date | string | null
    maintenanceStatus?: StringNullableFilter<"Unit"> | string | null
    locationUpdateTimestamp?: DateTimeNullableFilter<"Unit"> | Date | string | null
    performanceScore?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    crewSize?: IntNullableFilter<"Unit"> | number | null
    crewComposition?: JsonNullableFilter<"Unit">
    baseHourlyRate?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: JsonNullableFilter<"Unit">
    stagingLocations?: JsonNullableFilter<"Unit">
    maxServiceRadius?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFilter<"Unit"> | boolean
    createdAt?: DateTimeFilter<"Unit"> | Date | string
    updatedAt?: DateTimeFilter<"Unit"> | Date | string
    agency?: XOR<EMSAgencyNullableRelationFilter, EMSAgencyWhereInput> | null
  }

  export type UnitOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    type?: SortOrder
    capabilities?: SortOrder
    currentStatus?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    isActive?: SortOrder
    assignedTripId?: SortOrderInput | SortOrder
    lastStatusUpdate?: SortOrder
    statusHistory?: SortOrderInput | SortOrder
    currentTripDetails?: SortOrderInput | SortOrder
    lastKnownLocation?: SortOrderInput | SortOrder
    locationUpdatedAt?: SortOrderInput | SortOrder
    totalTripsCompleted?: SortOrder
    averageResponseTime?: SortOrderInput | SortOrder
    lastMaintenanceDate?: SortOrderInput | SortOrder
    maintenanceStatus?: SortOrderInput | SortOrder
    locationUpdateTimestamp?: SortOrderInput | SortOrder
    performanceScore?: SortOrderInput | SortOrder
    crewSize?: SortOrderInput | SortOrder
    crewComposition?: SortOrderInput | SortOrder
    baseHourlyRate?: SortOrderInput | SortOrder
    overtimeMultiplier?: SortOrderInput | SortOrder
    shiftLengthHours?: SortOrderInput | SortOrder
    maxOvertimeHours?: SortOrderInput | SortOrder
    vehicleCostPerMile?: SortOrderInput | SortOrder
    fuelCostPerMile?: SortOrderInput | SortOrder
    maintenanceCostPerMile?: SortOrderInput | SortOrder
    homeBaseLocation?: SortOrderInput | SortOrder
    stagingLocations?: SortOrderInput | SortOrder
    maxServiceRadius?: SortOrderInput | SortOrder
    interceptCapability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agency?: EMSAgencyOrderByWithRelationInput
  }

  export type UnitWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UnitWhereInput | UnitWhereInput[]
    OR?: UnitWhereInput[]
    NOT?: UnitWhereInput | UnitWhereInput[]
    agencyId?: StringNullableFilter<"Unit"> | string | null
    unitNumber?: StringFilter<"Unit"> | string
    type?: StringFilter<"Unit"> | string
    capabilities?: StringNullableListFilter<"Unit">
    currentStatus?: StringFilter<"Unit"> | string
    currentLocation?: JsonNullableFilter<"Unit">
    isActive?: BoolFilter<"Unit"> | boolean
    assignedTripId?: StringNullableFilter<"Unit"> | string | null
    lastStatusUpdate?: DateTimeFilter<"Unit"> | Date | string
    statusHistory?: JsonNullableFilter<"Unit">
    currentTripDetails?: JsonNullableFilter<"Unit">
    lastKnownLocation?: JsonNullableFilter<"Unit">
    locationUpdatedAt?: DateTimeNullableFilter<"Unit"> | Date | string | null
    totalTripsCompleted?: IntFilter<"Unit"> | number
    averageResponseTime?: FloatNullableFilter<"Unit"> | number | null
    lastMaintenanceDate?: DateTimeNullableFilter<"Unit"> | Date | string | null
    maintenanceStatus?: StringNullableFilter<"Unit"> | string | null
    locationUpdateTimestamp?: DateTimeNullableFilter<"Unit"> | Date | string | null
    performanceScore?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    crewSize?: IntNullableFilter<"Unit"> | number | null
    crewComposition?: JsonNullableFilter<"Unit">
    baseHourlyRate?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: JsonNullableFilter<"Unit">
    stagingLocations?: JsonNullableFilter<"Unit">
    maxServiceRadius?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFilter<"Unit"> | boolean
    createdAt?: DateTimeFilter<"Unit"> | Date | string
    updatedAt?: DateTimeFilter<"Unit"> | Date | string
    agency?: XOR<EMSAgencyNullableRelationFilter, EMSAgencyWhereInput> | null
  }, "id">

  export type UnitOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    type?: SortOrder
    capabilities?: SortOrder
    currentStatus?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    isActive?: SortOrder
    assignedTripId?: SortOrderInput | SortOrder
    lastStatusUpdate?: SortOrder
    statusHistory?: SortOrderInput | SortOrder
    currentTripDetails?: SortOrderInput | SortOrder
    lastKnownLocation?: SortOrderInput | SortOrder
    locationUpdatedAt?: SortOrderInput | SortOrder
    totalTripsCompleted?: SortOrder
    averageResponseTime?: SortOrderInput | SortOrder
    lastMaintenanceDate?: SortOrderInput | SortOrder
    maintenanceStatus?: SortOrderInput | SortOrder
    locationUpdateTimestamp?: SortOrderInput | SortOrder
    performanceScore?: SortOrderInput | SortOrder
    crewSize?: SortOrderInput | SortOrder
    crewComposition?: SortOrderInput | SortOrder
    baseHourlyRate?: SortOrderInput | SortOrder
    overtimeMultiplier?: SortOrderInput | SortOrder
    shiftLengthHours?: SortOrderInput | SortOrder
    maxOvertimeHours?: SortOrderInput | SortOrder
    vehicleCostPerMile?: SortOrderInput | SortOrder
    fuelCostPerMile?: SortOrderInput | SortOrder
    maintenanceCostPerMile?: SortOrderInput | SortOrder
    homeBaseLocation?: SortOrderInput | SortOrder
    stagingLocations?: SortOrderInput | SortOrder
    maxServiceRadius?: SortOrderInput | SortOrder
    interceptCapability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UnitCountOrderByAggregateInput
    _avg?: UnitAvgOrderByAggregateInput
    _max?: UnitMaxOrderByAggregateInput
    _min?: UnitMinOrderByAggregateInput
    _sum?: UnitSumOrderByAggregateInput
  }

  export type UnitScalarWhereWithAggregatesInput = {
    AND?: UnitScalarWhereWithAggregatesInput | UnitScalarWhereWithAggregatesInput[]
    OR?: UnitScalarWhereWithAggregatesInput[]
    NOT?: UnitScalarWhereWithAggregatesInput | UnitScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Unit"> | string
    agencyId?: StringNullableWithAggregatesFilter<"Unit"> | string | null
    unitNumber?: StringWithAggregatesFilter<"Unit"> | string
    type?: StringWithAggregatesFilter<"Unit"> | string
    capabilities?: StringNullableListFilter<"Unit">
    currentStatus?: StringWithAggregatesFilter<"Unit"> | string
    currentLocation?: JsonNullableWithAggregatesFilter<"Unit">
    isActive?: BoolWithAggregatesFilter<"Unit"> | boolean
    assignedTripId?: StringNullableWithAggregatesFilter<"Unit"> | string | null
    lastStatusUpdate?: DateTimeWithAggregatesFilter<"Unit"> | Date | string
    statusHistory?: JsonNullableWithAggregatesFilter<"Unit">
    currentTripDetails?: JsonNullableWithAggregatesFilter<"Unit">
    lastKnownLocation?: JsonNullableWithAggregatesFilter<"Unit">
    locationUpdatedAt?: DateTimeNullableWithAggregatesFilter<"Unit"> | Date | string | null
    totalTripsCompleted?: IntWithAggregatesFilter<"Unit"> | number
    averageResponseTime?: FloatNullableWithAggregatesFilter<"Unit"> | number | null
    lastMaintenanceDate?: DateTimeNullableWithAggregatesFilter<"Unit"> | Date | string | null
    maintenanceStatus?: StringNullableWithAggregatesFilter<"Unit"> | string | null
    locationUpdateTimestamp?: DateTimeNullableWithAggregatesFilter<"Unit"> | Date | string | null
    performanceScore?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    crewSize?: IntNullableWithAggregatesFilter<"Unit"> | number | null
    crewComposition?: JsonNullableWithAggregatesFilter<"Unit">
    baseHourlyRate?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: JsonNullableWithAggregatesFilter<"Unit">
    stagingLocations?: JsonNullableWithAggregatesFilter<"Unit">
    maxServiceRadius?: DecimalNullableWithAggregatesFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolWithAggregatesFilter<"Unit"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Unit"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Unit"> | Date | string
  }

  export type CrewRoleWhereInput = {
    AND?: CrewRoleWhereInput | CrewRoleWhereInput[]
    OR?: CrewRoleWhereInput[]
    NOT?: CrewRoleWhereInput | CrewRoleWhereInput[]
    id?: StringFilter<"CrewRole"> | string
    roleName?: StringFilter<"CrewRole"> | string
    certificationLevel?: StringFilter<"CrewRole"> | string
    hourlyRate?: DecimalFilter<"CrewRole"> | Decimal | DecimalJsLike | number | string
    overtimeMultiplier?: DecimalFilter<"CrewRole"> | Decimal | DecimalJsLike | number | string
    isActive?: BoolFilter<"CrewRole"> | boolean
    createdAt?: DateTimeFilter<"CrewRole"> | Date | string
    updatedAt?: DateTimeFilter<"CrewRole"> | Date | string
  }

  export type CrewRoleOrderByWithRelationInput = {
    id?: SortOrder
    roleName?: SortOrder
    certificationLevel?: SortOrder
    hourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CrewRoleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CrewRoleWhereInput | CrewRoleWhereInput[]
    OR?: CrewRoleWhereInput[]
    NOT?: CrewRoleWhereInput | CrewRoleWhereInput[]
    roleName?: StringFilter<"CrewRole"> | string
    certificationLevel?: StringFilter<"CrewRole"> | string
    hourlyRate?: DecimalFilter<"CrewRole"> | Decimal | DecimalJsLike | number | string
    overtimeMultiplier?: DecimalFilter<"CrewRole"> | Decimal | DecimalJsLike | number | string
    isActive?: BoolFilter<"CrewRole"> | boolean
    createdAt?: DateTimeFilter<"CrewRole"> | Date | string
    updatedAt?: DateTimeFilter<"CrewRole"> | Date | string
  }, "id">

  export type CrewRoleOrderByWithAggregationInput = {
    id?: SortOrder
    roleName?: SortOrder
    certificationLevel?: SortOrder
    hourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CrewRoleCountOrderByAggregateInput
    _avg?: CrewRoleAvgOrderByAggregateInput
    _max?: CrewRoleMaxOrderByAggregateInput
    _min?: CrewRoleMinOrderByAggregateInput
    _sum?: CrewRoleSumOrderByAggregateInput
  }

  export type CrewRoleScalarWhereWithAggregatesInput = {
    AND?: CrewRoleScalarWhereWithAggregatesInput | CrewRoleScalarWhereWithAggregatesInput[]
    OR?: CrewRoleScalarWhereWithAggregatesInput[]
    NOT?: CrewRoleScalarWhereWithAggregatesInput | CrewRoleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CrewRole"> | string
    roleName?: StringWithAggregatesFilter<"CrewRole"> | string
    certificationLevel?: StringWithAggregatesFilter<"CrewRole"> | string
    hourlyRate?: DecimalWithAggregatesFilter<"CrewRole"> | Decimal | DecimalJsLike | number | string
    overtimeMultiplier?: DecimalWithAggregatesFilter<"CrewRole"> | Decimal | DecimalJsLike | number | string
    isActive?: BoolWithAggregatesFilter<"CrewRole"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"CrewRole"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CrewRole"> | Date | string
  }

  export type TransportRequestWhereInput = {
    AND?: TransportRequestWhereInput | TransportRequestWhereInput[]
    OR?: TransportRequestWhereInput[]
    NOT?: TransportRequestWhereInput | TransportRequestWhereInput[]
    id?: StringFilter<"TransportRequest"> | string
    tripNumber?: StringNullableFilter<"TransportRequest"> | string | null
    patientId?: StringFilter<"TransportRequest"> | string
    patientWeight?: StringNullableFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableFilter<"TransportRequest"> | string | null
    priority?: StringFilter<"TransportRequest"> | string
    status?: StringFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableFilter<"TransportRequest"> | string | null
    createdById?: StringNullableFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolFilter<"TransportRequest"> | boolean
    bariatric?: BoolFilter<"TransportRequest"> | boolean
    notes?: StringNullableFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeFilter<"TransportRequest"> | Date | string
    createdBy?: XOR<EMSUserNullableRelationFilter, EMSUserWhereInput> | null
  }

  export type TransportRequestOrderByWithRelationInput = {
    id?: SortOrder
    tripNumber?: SortOrderInput | SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrderInput | SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    originFacilityId?: SortOrderInput | SortOrder
    destinationFacilityId?: SortOrderInput | SortOrder
    fromLocation?: SortOrderInput | SortOrder
    toLocation?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrderInput | SortOrder
    diagnosis?: SortOrderInput | SortOrder
    mobilityLevel?: SortOrderInput | SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrderInput | SortOrder
    selectedAgencies?: SortOrder
    notificationRadius?: SortOrderInput | SortOrder
    transferRequestTime?: SortOrderInput | SortOrder
    transferAcceptedTime?: SortOrderInput | SortOrder
    emsArrivalTime?: SortOrderInput | SortOrder
    emsDepartureTime?: SortOrderInput | SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrderInput | SortOrder
    pickupTimestamp?: SortOrderInput | SortOrder
    completionTimestamp?: SortOrderInput | SortOrder
    assignedAgencyId?: SortOrderInput | SortOrder
    assignedUnitId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    readyStart?: SortOrderInput | SortOrder
    readyEnd?: SortOrderInput | SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: EMSUserOrderByWithRelationInput
  }

  export type TransportRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    tripNumber?: string
    AND?: TransportRequestWhereInput | TransportRequestWhereInput[]
    OR?: TransportRequestWhereInput[]
    NOT?: TransportRequestWhereInput | TransportRequestWhereInput[]
    patientId?: StringFilter<"TransportRequest"> | string
    patientWeight?: StringNullableFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableFilter<"TransportRequest"> | string | null
    priority?: StringFilter<"TransportRequest"> | string
    status?: StringFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableFilter<"TransportRequest"> | string | null
    createdById?: StringNullableFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolFilter<"TransportRequest"> | boolean
    bariatric?: BoolFilter<"TransportRequest"> | boolean
    notes?: StringNullableFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeFilter<"TransportRequest"> | Date | string
    createdBy?: XOR<EMSUserNullableRelationFilter, EMSUserWhereInput> | null
  }, "id" | "tripNumber">

  export type TransportRequestOrderByWithAggregationInput = {
    id?: SortOrder
    tripNumber?: SortOrderInput | SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrderInput | SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    originFacilityId?: SortOrderInput | SortOrder
    destinationFacilityId?: SortOrderInput | SortOrder
    fromLocation?: SortOrderInput | SortOrder
    toLocation?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrderInput | SortOrder
    diagnosis?: SortOrderInput | SortOrder
    mobilityLevel?: SortOrderInput | SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrderInput | SortOrder
    selectedAgencies?: SortOrder
    notificationRadius?: SortOrderInput | SortOrder
    transferRequestTime?: SortOrderInput | SortOrder
    transferAcceptedTime?: SortOrderInput | SortOrder
    emsArrivalTime?: SortOrderInput | SortOrder
    emsDepartureTime?: SortOrderInput | SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrderInput | SortOrder
    pickupTimestamp?: SortOrderInput | SortOrder
    completionTimestamp?: SortOrderInput | SortOrder
    assignedAgencyId?: SortOrderInput | SortOrder
    assignedUnitId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    readyStart?: SortOrderInput | SortOrder
    readyEnd?: SortOrderInput | SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TransportRequestCountOrderByAggregateInput
    _avg?: TransportRequestAvgOrderByAggregateInput
    _max?: TransportRequestMaxOrderByAggregateInput
    _min?: TransportRequestMinOrderByAggregateInput
    _sum?: TransportRequestSumOrderByAggregateInput
  }

  export type TransportRequestScalarWhereWithAggregatesInput = {
    AND?: TransportRequestScalarWhereWithAggregatesInput | TransportRequestScalarWhereWithAggregatesInput[]
    OR?: TransportRequestScalarWhereWithAggregatesInput[]
    NOT?: TransportRequestScalarWhereWithAggregatesInput | TransportRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TransportRequest"> | string
    tripNumber?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    patientId?: StringWithAggregatesFilter<"TransportRequest"> | string
    patientWeight?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringWithAggregatesFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    priority?: StringWithAggregatesFilter<"TransportRequest"> | string
    status?: StringWithAggregatesFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableWithAggregatesFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeWithAggregatesFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    bariatric?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    notes?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TransportRequest"> | Date | string
  }

  export type EMSUserCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    agency?: EMSAgencyCreateNestedOneWithoutUsersInput
    transportRequests?: TransportRequestCreateNestedManyWithoutCreatedByInput
  }

  export type EMSUserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    agencyId?: string | null
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    transportRequests?: TransportRequestUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type EMSUserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: EMSAgencyUpdateOneWithoutUsersNestedInput
    transportRequests?: TransportRequestUpdateManyWithoutCreatedByNestedInput
  }

  export type EMSUserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportRequests?: TransportRequestUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type EMSUserCreateManyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    agencyId?: string | null
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EMSUserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EMSUserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EMSAgencyCreateInput = {
    id?: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea?: EMSAgencyCreateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyCreatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    status?: string
    addedBy?: string | null
    addedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: EMSUserCreateNestedManyWithoutAgencyInput
    units?: UnitCreateNestedManyWithoutAgencyInput
  }

  export type EMSAgencyUncheckedCreateInput = {
    id?: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea?: EMSAgencyCreateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyCreatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    status?: string
    addedBy?: string | null
    addedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: EMSUserUncheckedCreateNestedManyWithoutAgencyInput
    units?: UnitUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type EMSAgencyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: EMSUserUpdateManyWithoutAgencyNestedInput
    units?: UnitUpdateManyWithoutAgencyNestedInput
  }

  export type EMSAgencyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: EMSUserUncheckedUpdateManyWithoutAgencyNestedInput
    units?: UnitUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type EMSAgencyCreateManyInput = {
    id?: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea?: EMSAgencyCreateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyCreatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    status?: string
    addedBy?: string | null
    addedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EMSAgencyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EMSAgencyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitCreateInput = {
    id?: string
    unitNumber: string
    type: string
    capabilities?: UnitCreatecapabilitiesInput | string[]
    currentStatus?: string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    assignedTripId?: string | null
    lastStatusUpdate?: Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: Date | string | null
    totalTripsCompleted?: number
    averageResponseTime?: number | null
    lastMaintenanceDate?: Date | string | null
    maintenanceStatus?: string | null
    locationUpdateTimestamp?: Date | string | null
    performanceScore?: Decimal | DecimalJsLike | number | string | null
    crewSize?: number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: Decimal | DecimalJsLike | number | string | null
    interceptCapability?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    agency?: EMSAgencyCreateNestedOneWithoutUnitsInput
  }

  export type UnitUncheckedCreateInput = {
    id?: string
    agencyId?: string | null
    unitNumber: string
    type: string
    capabilities?: UnitCreatecapabilitiesInput | string[]
    currentStatus?: string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    assignedTripId?: string | null
    lastStatusUpdate?: Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: Date | string | null
    totalTripsCompleted?: number
    averageResponseTime?: number | null
    lastMaintenanceDate?: Date | string | null
    maintenanceStatus?: string | null
    locationUpdateTimestamp?: Date | string | null
    performanceScore?: Decimal | DecimalJsLike | number | string | null
    crewSize?: number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: Decimal | DecimalJsLike | number | string | null
    interceptCapability?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UnitUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    unitNumber?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    capabilities?: UnitUpdatecapabilitiesInput | string[]
    currentStatus?: StringFieldUpdateOperationsInput | string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    assignedTripId?: NullableStringFieldUpdateOperationsInput | string | null
    lastStatusUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalTripsCompleted?: IntFieldUpdateOperationsInput | number
    averageResponseTime?: NullableFloatFieldUpdateOperationsInput | number | null
    lastMaintenanceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceStatus?: NullableStringFieldUpdateOperationsInput | string | null
    locationUpdateTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    performanceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    crewSize?: NullableIntFieldUpdateOperationsInput | number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: EMSAgencyUpdateOneWithoutUnitsNestedInput
  }

  export type UnitUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    capabilities?: UnitUpdatecapabilitiesInput | string[]
    currentStatus?: StringFieldUpdateOperationsInput | string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    assignedTripId?: NullableStringFieldUpdateOperationsInput | string | null
    lastStatusUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalTripsCompleted?: IntFieldUpdateOperationsInput | number
    averageResponseTime?: NullableFloatFieldUpdateOperationsInput | number | null
    lastMaintenanceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceStatus?: NullableStringFieldUpdateOperationsInput | string | null
    locationUpdateTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    performanceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    crewSize?: NullableIntFieldUpdateOperationsInput | number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitCreateManyInput = {
    id?: string
    agencyId?: string | null
    unitNumber: string
    type: string
    capabilities?: UnitCreatecapabilitiesInput | string[]
    currentStatus?: string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    assignedTripId?: string | null
    lastStatusUpdate?: Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: Date | string | null
    totalTripsCompleted?: number
    averageResponseTime?: number | null
    lastMaintenanceDate?: Date | string | null
    maintenanceStatus?: string | null
    locationUpdateTimestamp?: Date | string | null
    performanceScore?: Decimal | DecimalJsLike | number | string | null
    crewSize?: number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: Decimal | DecimalJsLike | number | string | null
    interceptCapability?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UnitUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    unitNumber?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    capabilities?: UnitUpdatecapabilitiesInput | string[]
    currentStatus?: StringFieldUpdateOperationsInput | string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    assignedTripId?: NullableStringFieldUpdateOperationsInput | string | null
    lastStatusUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalTripsCompleted?: IntFieldUpdateOperationsInput | number
    averageResponseTime?: NullableFloatFieldUpdateOperationsInput | number | null
    lastMaintenanceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceStatus?: NullableStringFieldUpdateOperationsInput | string | null
    locationUpdateTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    performanceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    crewSize?: NullableIntFieldUpdateOperationsInput | number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    capabilities?: UnitUpdatecapabilitiesInput | string[]
    currentStatus?: StringFieldUpdateOperationsInput | string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    assignedTripId?: NullableStringFieldUpdateOperationsInput | string | null
    lastStatusUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalTripsCompleted?: IntFieldUpdateOperationsInput | number
    averageResponseTime?: NullableFloatFieldUpdateOperationsInput | number | null
    lastMaintenanceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceStatus?: NullableStringFieldUpdateOperationsInput | string | null
    locationUpdateTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    performanceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    crewSize?: NullableIntFieldUpdateOperationsInput | number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrewRoleCreateInput = {
    id?: string
    roleName: string
    certificationLevel: string
    hourlyRate: Decimal | DecimalJsLike | number | string
    overtimeMultiplier: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrewRoleUncheckedCreateInput = {
    id?: string
    roleName: string
    certificationLevel: string
    hourlyRate: Decimal | DecimalJsLike | number | string
    overtimeMultiplier: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrewRoleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleName?: StringFieldUpdateOperationsInput | string
    certificationLevel?: StringFieldUpdateOperationsInput | string
    hourlyRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    overtimeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrewRoleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleName?: StringFieldUpdateOperationsInput | string
    certificationLevel?: StringFieldUpdateOperationsInput | string
    hourlyRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    overtimeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrewRoleCreateManyInput = {
    id?: string
    roleName: string
    certificationLevel: string
    hourlyRate: Decimal | DecimalJsLike | number | string
    overtimeMultiplier: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrewRoleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleName?: StringFieldUpdateOperationsInput | string
    certificationLevel?: StringFieldUpdateOperationsInput | string
    hourlyRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    overtimeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrewRoleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleName?: StringFieldUpdateOperationsInput | string
    certificationLevel?: StringFieldUpdateOperationsInput | string
    hourlyRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    overtimeMultiplier?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: EMSUserCreateNestedOneWithoutTransportRequestsInput
  }

  export type TransportRequestUncheckedCreateInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: EMSUserUpdateOneWithoutTransportRequestsNestedInput
  }

  export type TransportRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateManyInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EMSAgencyNullableRelationFilter = {
    is?: EMSAgencyWhereInput | null
    isNot?: EMSAgencyWhereInput | null
  }

  export type TransportRequestListRelationFilter = {
    every?: TransportRequestWhereInput
    some?: TransportRequestWhereInput
    none?: TransportRequestWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type TransportRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EMSUserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    agencyName?: SortOrder
    agencyId?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EMSUserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    agencyName?: SortOrder
    agencyId?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EMSUserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    agencyName?: SortOrder
    agencyId?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EMSUserListRelationFilter = {
    every?: EMSUserWhereInput
    some?: EMSUserWhereInput
    none?: EMSUserWhereInput
  }

  export type UnitListRelationFilter = {
    every?: UnitWhereInput
    some?: UnitWhereInput
    none?: UnitWhereInput
  }

  export type EMSUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UnitOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EMSAgencyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contactName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    serviceArea?: SortOrder
    operatingHours?: SortOrder
    capabilities?: SortOrder
    pricingStructure?: SortOrder
    isActive?: SortOrder
    status?: SortOrder
    addedBy?: SortOrder
    addedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EMSAgencyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contactName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    isActive?: SortOrder
    status?: SortOrder
    addedBy?: SortOrder
    addedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EMSAgencyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contactName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    isActive?: SortOrder
    status?: SortOrder
    addedBy?: SortOrder
    addedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UnitCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    unitNumber?: SortOrder
    type?: SortOrder
    capabilities?: SortOrder
    currentStatus?: SortOrder
    currentLocation?: SortOrder
    isActive?: SortOrder
    assignedTripId?: SortOrder
    lastStatusUpdate?: SortOrder
    statusHistory?: SortOrder
    currentTripDetails?: SortOrder
    lastKnownLocation?: SortOrder
    locationUpdatedAt?: SortOrder
    totalTripsCompleted?: SortOrder
    averageResponseTime?: SortOrder
    lastMaintenanceDate?: SortOrder
    maintenanceStatus?: SortOrder
    locationUpdateTimestamp?: SortOrder
    performanceScore?: SortOrder
    crewSize?: SortOrder
    crewComposition?: SortOrder
    baseHourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    shiftLengthHours?: SortOrder
    maxOvertimeHours?: SortOrder
    vehicleCostPerMile?: SortOrder
    fuelCostPerMile?: SortOrder
    maintenanceCostPerMile?: SortOrder
    homeBaseLocation?: SortOrder
    stagingLocations?: SortOrder
    maxServiceRadius?: SortOrder
    interceptCapability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UnitAvgOrderByAggregateInput = {
    totalTripsCompleted?: SortOrder
    averageResponseTime?: SortOrder
    performanceScore?: SortOrder
    crewSize?: SortOrder
    baseHourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    shiftLengthHours?: SortOrder
    maxOvertimeHours?: SortOrder
    vehicleCostPerMile?: SortOrder
    fuelCostPerMile?: SortOrder
    maintenanceCostPerMile?: SortOrder
    maxServiceRadius?: SortOrder
  }

  export type UnitMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    unitNumber?: SortOrder
    type?: SortOrder
    currentStatus?: SortOrder
    isActive?: SortOrder
    assignedTripId?: SortOrder
    lastStatusUpdate?: SortOrder
    locationUpdatedAt?: SortOrder
    totalTripsCompleted?: SortOrder
    averageResponseTime?: SortOrder
    lastMaintenanceDate?: SortOrder
    maintenanceStatus?: SortOrder
    locationUpdateTimestamp?: SortOrder
    performanceScore?: SortOrder
    crewSize?: SortOrder
    baseHourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    shiftLengthHours?: SortOrder
    maxOvertimeHours?: SortOrder
    vehicleCostPerMile?: SortOrder
    fuelCostPerMile?: SortOrder
    maintenanceCostPerMile?: SortOrder
    maxServiceRadius?: SortOrder
    interceptCapability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UnitMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    unitNumber?: SortOrder
    type?: SortOrder
    currentStatus?: SortOrder
    isActive?: SortOrder
    assignedTripId?: SortOrder
    lastStatusUpdate?: SortOrder
    locationUpdatedAt?: SortOrder
    totalTripsCompleted?: SortOrder
    averageResponseTime?: SortOrder
    lastMaintenanceDate?: SortOrder
    maintenanceStatus?: SortOrder
    locationUpdateTimestamp?: SortOrder
    performanceScore?: SortOrder
    crewSize?: SortOrder
    baseHourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    shiftLengthHours?: SortOrder
    maxOvertimeHours?: SortOrder
    vehicleCostPerMile?: SortOrder
    fuelCostPerMile?: SortOrder
    maintenanceCostPerMile?: SortOrder
    maxServiceRadius?: SortOrder
    interceptCapability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UnitSumOrderByAggregateInput = {
    totalTripsCompleted?: SortOrder
    averageResponseTime?: SortOrder
    performanceScore?: SortOrder
    crewSize?: SortOrder
    baseHourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    shiftLengthHours?: SortOrder
    maxOvertimeHours?: SortOrder
    vehicleCostPerMile?: SortOrder
    fuelCostPerMile?: SortOrder
    maintenanceCostPerMile?: SortOrder
    maxServiceRadius?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type CrewRoleCountOrderByAggregateInput = {
    id?: SortOrder
    roleName?: SortOrder
    certificationLevel?: SortOrder
    hourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CrewRoleAvgOrderByAggregateInput = {
    hourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
  }

  export type CrewRoleMaxOrderByAggregateInput = {
    id?: SortOrder
    roleName?: SortOrder
    certificationLevel?: SortOrder
    hourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CrewRoleMinOrderByAggregateInput = {
    id?: SortOrder
    roleName?: SortOrder
    certificationLevel?: SortOrder
    hourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CrewRoleSumOrderByAggregateInput = {
    hourlyRate?: SortOrder
    overtimeMultiplier?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EMSUserNullableRelationFilter = {
    is?: EMSUserWhereInput | null
    isNot?: EMSUserWhereInput | null
  }

  export type TransportRequestCountOrderByAggregateInput = {
    id?: SortOrder
    tripNumber?: SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrder
    specialNeeds?: SortOrder
    originFacilityId?: SortOrder
    destinationFacilityId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    scheduledTime?: SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrder
    diagnosis?: SortOrder
    mobilityLevel?: SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrder
    selectedAgencies?: SortOrder
    notificationRadius?: SortOrder
    transferRequestTime?: SortOrder
    transferAcceptedTime?: SortOrder
    emsArrivalTime?: SortOrder
    emsDepartureTime?: SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrder
    pickupTimestamp?: SortOrder
    completionTimestamp?: SortOrder
    assignedAgencyId?: SortOrder
    assignedUnitId?: SortOrder
    createdById?: SortOrder
    readyStart?: SortOrder
    readyEnd?: SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransportRequestAvgOrderByAggregateInput = {
    notificationRadius?: SortOrder
  }

  export type TransportRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    tripNumber?: SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrder
    specialNeeds?: SortOrder
    originFacilityId?: SortOrder
    destinationFacilityId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    scheduledTime?: SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrder
    diagnosis?: SortOrder
    mobilityLevel?: SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrder
    notificationRadius?: SortOrder
    transferRequestTime?: SortOrder
    transferAcceptedTime?: SortOrder
    emsArrivalTime?: SortOrder
    emsDepartureTime?: SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrder
    pickupTimestamp?: SortOrder
    completionTimestamp?: SortOrder
    assignedAgencyId?: SortOrder
    assignedUnitId?: SortOrder
    createdById?: SortOrder
    readyStart?: SortOrder
    readyEnd?: SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransportRequestMinOrderByAggregateInput = {
    id?: SortOrder
    tripNumber?: SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrder
    specialNeeds?: SortOrder
    originFacilityId?: SortOrder
    destinationFacilityId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    scheduledTime?: SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrder
    diagnosis?: SortOrder
    mobilityLevel?: SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrder
    notificationRadius?: SortOrder
    transferRequestTime?: SortOrder
    transferAcceptedTime?: SortOrder
    emsArrivalTime?: SortOrder
    emsDepartureTime?: SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrder
    pickupTimestamp?: SortOrder
    completionTimestamp?: SortOrder
    assignedAgencyId?: SortOrder
    assignedUnitId?: SortOrder
    createdById?: SortOrder
    readyStart?: SortOrder
    readyEnd?: SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransportRequestSumOrderByAggregateInput = {
    notificationRadius?: SortOrder
  }

  export type EMSAgencyCreateNestedOneWithoutUsersInput = {
    create?: XOR<EMSAgencyCreateWithoutUsersInput, EMSAgencyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: EMSAgencyCreateOrConnectWithoutUsersInput
    connect?: EMSAgencyWhereUniqueInput
  }

  export type TransportRequestCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type TransportRequestUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EMSAgencyUpdateOneWithoutUsersNestedInput = {
    create?: XOR<EMSAgencyCreateWithoutUsersInput, EMSAgencyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: EMSAgencyCreateOrConnectWithoutUsersInput
    upsert?: EMSAgencyUpsertWithoutUsersInput
    disconnect?: EMSAgencyWhereInput | boolean
    delete?: EMSAgencyWhereInput | boolean
    connect?: EMSAgencyWhereUniqueInput
    update?: XOR<XOR<EMSAgencyUpdateToOneWithWhereWithoutUsersInput, EMSAgencyUpdateWithoutUsersInput>, EMSAgencyUncheckedUpdateWithoutUsersInput>
  }

  export type TransportRequestUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput | TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput | TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutCreatedByInput | TransportRequestUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput | TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput | TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutCreatedByInput | TransportRequestUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type EMSAgencyCreateserviceAreaInput = {
    set: string[]
  }

  export type EMSAgencyCreatecapabilitiesInput = {
    set: string[]
  }

  export type EMSUserCreateNestedManyWithoutAgencyInput = {
    create?: XOR<EMSUserCreateWithoutAgencyInput, EMSUserUncheckedCreateWithoutAgencyInput> | EMSUserCreateWithoutAgencyInput[] | EMSUserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EMSUserCreateOrConnectWithoutAgencyInput | EMSUserCreateOrConnectWithoutAgencyInput[]
    createMany?: EMSUserCreateManyAgencyInputEnvelope
    connect?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
  }

  export type UnitCreateNestedManyWithoutAgencyInput = {
    create?: XOR<UnitCreateWithoutAgencyInput, UnitUncheckedCreateWithoutAgencyInput> | UnitCreateWithoutAgencyInput[] | UnitUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutAgencyInput | UnitCreateOrConnectWithoutAgencyInput[]
    createMany?: UnitCreateManyAgencyInputEnvelope
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
  }

  export type EMSUserUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<EMSUserCreateWithoutAgencyInput, EMSUserUncheckedCreateWithoutAgencyInput> | EMSUserCreateWithoutAgencyInput[] | EMSUserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EMSUserCreateOrConnectWithoutAgencyInput | EMSUserCreateOrConnectWithoutAgencyInput[]
    createMany?: EMSUserCreateManyAgencyInputEnvelope
    connect?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
  }

  export type UnitUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<UnitCreateWithoutAgencyInput, UnitUncheckedCreateWithoutAgencyInput> | UnitCreateWithoutAgencyInput[] | UnitUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutAgencyInput | UnitCreateOrConnectWithoutAgencyInput[]
    createMany?: UnitCreateManyAgencyInputEnvelope
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
  }

  export type EMSAgencyUpdateserviceAreaInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EMSAgencyUpdatecapabilitiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EMSUserUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<EMSUserCreateWithoutAgencyInput, EMSUserUncheckedCreateWithoutAgencyInput> | EMSUserCreateWithoutAgencyInput[] | EMSUserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EMSUserCreateOrConnectWithoutAgencyInput | EMSUserCreateOrConnectWithoutAgencyInput[]
    upsert?: EMSUserUpsertWithWhereUniqueWithoutAgencyInput | EMSUserUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: EMSUserCreateManyAgencyInputEnvelope
    set?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    disconnect?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    delete?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    connect?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    update?: EMSUserUpdateWithWhereUniqueWithoutAgencyInput | EMSUserUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: EMSUserUpdateManyWithWhereWithoutAgencyInput | EMSUserUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: EMSUserScalarWhereInput | EMSUserScalarWhereInput[]
  }

  export type UnitUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<UnitCreateWithoutAgencyInput, UnitUncheckedCreateWithoutAgencyInput> | UnitCreateWithoutAgencyInput[] | UnitUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutAgencyInput | UnitCreateOrConnectWithoutAgencyInput[]
    upsert?: UnitUpsertWithWhereUniqueWithoutAgencyInput | UnitUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: UnitCreateManyAgencyInputEnvelope
    set?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    disconnect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    delete?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    update?: UnitUpdateWithWhereUniqueWithoutAgencyInput | UnitUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: UnitUpdateManyWithWhereWithoutAgencyInput | UnitUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: UnitScalarWhereInput | UnitScalarWhereInput[]
  }

  export type EMSUserUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<EMSUserCreateWithoutAgencyInput, EMSUserUncheckedCreateWithoutAgencyInput> | EMSUserCreateWithoutAgencyInput[] | EMSUserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EMSUserCreateOrConnectWithoutAgencyInput | EMSUserCreateOrConnectWithoutAgencyInput[]
    upsert?: EMSUserUpsertWithWhereUniqueWithoutAgencyInput | EMSUserUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: EMSUserCreateManyAgencyInputEnvelope
    set?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    disconnect?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    delete?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    connect?: EMSUserWhereUniqueInput | EMSUserWhereUniqueInput[]
    update?: EMSUserUpdateWithWhereUniqueWithoutAgencyInput | EMSUserUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: EMSUserUpdateManyWithWhereWithoutAgencyInput | EMSUserUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: EMSUserScalarWhereInput | EMSUserScalarWhereInput[]
  }

  export type UnitUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<UnitCreateWithoutAgencyInput, UnitUncheckedCreateWithoutAgencyInput> | UnitCreateWithoutAgencyInput[] | UnitUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutAgencyInput | UnitCreateOrConnectWithoutAgencyInput[]
    upsert?: UnitUpsertWithWhereUniqueWithoutAgencyInput | UnitUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: UnitCreateManyAgencyInputEnvelope
    set?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    disconnect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    delete?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    update?: UnitUpdateWithWhereUniqueWithoutAgencyInput | UnitUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: UnitUpdateManyWithWhereWithoutAgencyInput | UnitUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: UnitScalarWhereInput | UnitScalarWhereInput[]
  }

  export type UnitCreatecapabilitiesInput = {
    set: string[]
  }

  export type EMSAgencyCreateNestedOneWithoutUnitsInput = {
    create?: XOR<EMSAgencyCreateWithoutUnitsInput, EMSAgencyUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: EMSAgencyCreateOrConnectWithoutUnitsInput
    connect?: EMSAgencyWhereUniqueInput
  }

  export type UnitUpdatecapabilitiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EMSAgencyUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<EMSAgencyCreateWithoutUnitsInput, EMSAgencyUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: EMSAgencyCreateOrConnectWithoutUnitsInput
    upsert?: EMSAgencyUpsertWithoutUnitsInput
    disconnect?: EMSAgencyWhereInput | boolean
    delete?: EMSAgencyWhereInput | boolean
    connect?: EMSAgencyWhereUniqueInput
    update?: XOR<XOR<EMSAgencyUpdateToOneWithWhereWithoutUnitsInput, EMSAgencyUpdateWithoutUnitsInput>, EMSAgencyUncheckedUpdateWithoutUnitsInput>
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type TransportRequestCreateselectedAgenciesInput = {
    set: string[]
  }

  export type EMSUserCreateNestedOneWithoutTransportRequestsInput = {
    create?: XOR<EMSUserCreateWithoutTransportRequestsInput, EMSUserUncheckedCreateWithoutTransportRequestsInput>
    connectOrCreate?: EMSUserCreateOrConnectWithoutTransportRequestsInput
    connect?: EMSUserWhereUniqueInput
  }

  export type TransportRequestUpdateselectedAgenciesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EMSUserUpdateOneWithoutTransportRequestsNestedInput = {
    create?: XOR<EMSUserCreateWithoutTransportRequestsInput, EMSUserUncheckedCreateWithoutTransportRequestsInput>
    connectOrCreate?: EMSUserCreateOrConnectWithoutTransportRequestsInput
    upsert?: EMSUserUpsertWithoutTransportRequestsInput
    disconnect?: EMSUserWhereInput | boolean
    delete?: EMSUserWhereInput | boolean
    connect?: EMSUserWhereUniqueInput
    update?: XOR<XOR<EMSUserUpdateToOneWithWhereWithoutTransportRequestsInput, EMSUserUpdateWithoutTransportRequestsInput>, EMSUserUncheckedUpdateWithoutTransportRequestsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EMSAgencyCreateWithoutUsersInput = {
    id?: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea?: EMSAgencyCreateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyCreatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    status?: string
    addedBy?: string | null
    addedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    units?: UnitCreateNestedManyWithoutAgencyInput
  }

  export type EMSAgencyUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea?: EMSAgencyCreateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyCreatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    status?: string
    addedBy?: string | null
    addedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    units?: UnitUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type EMSAgencyCreateOrConnectWithoutUsersInput = {
    where: EMSAgencyWhereUniqueInput
    create: XOR<EMSAgencyCreateWithoutUsersInput, EMSAgencyUncheckedCreateWithoutUsersInput>
  }

  export type TransportRequestCreateWithoutCreatedByInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUncheckedCreateWithoutCreatedByInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestCreateOrConnectWithoutCreatedByInput = {
    where: TransportRequestWhereUniqueInput
    create: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput>
  }

  export type TransportRequestCreateManyCreatedByInputEnvelope = {
    data: TransportRequestCreateManyCreatedByInput | TransportRequestCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type EMSAgencyUpsertWithoutUsersInput = {
    update: XOR<EMSAgencyUpdateWithoutUsersInput, EMSAgencyUncheckedUpdateWithoutUsersInput>
    create: XOR<EMSAgencyCreateWithoutUsersInput, EMSAgencyUncheckedCreateWithoutUsersInput>
    where?: EMSAgencyWhereInput
  }

  export type EMSAgencyUpdateToOneWithWhereWithoutUsersInput = {
    where?: EMSAgencyWhereInput
    data: XOR<EMSAgencyUpdateWithoutUsersInput, EMSAgencyUncheckedUpdateWithoutUsersInput>
  }

  export type EMSAgencyUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    units?: UnitUpdateManyWithoutAgencyNestedInput
  }

  export type EMSAgencyUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    units?: UnitUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: TransportRequestWhereUniqueInput
    update: XOR<TransportRequestUpdateWithoutCreatedByInput, TransportRequestUncheckedUpdateWithoutCreatedByInput>
    create: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput>
  }

  export type TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: TransportRequestWhereUniqueInput
    data: XOR<TransportRequestUpdateWithoutCreatedByInput, TransportRequestUncheckedUpdateWithoutCreatedByInput>
  }

  export type TransportRequestUpdateManyWithWhereWithoutCreatedByInput = {
    where: TransportRequestScalarWhereInput
    data: XOR<TransportRequestUpdateManyMutationInput, TransportRequestUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type TransportRequestScalarWhereInput = {
    AND?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
    OR?: TransportRequestScalarWhereInput[]
    NOT?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
    id?: StringFilter<"TransportRequest"> | string
    tripNumber?: StringNullableFilter<"TransportRequest"> | string | null
    patientId?: StringFilter<"TransportRequest"> | string
    patientWeight?: StringNullableFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableFilter<"TransportRequest"> | string | null
    priority?: StringFilter<"TransportRequest"> | string
    status?: StringFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableFilter<"TransportRequest"> | string | null
    createdById?: StringNullableFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolFilter<"TransportRequest"> | boolean
    bariatric?: BoolFilter<"TransportRequest"> | boolean
    notes?: StringNullableFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeFilter<"TransportRequest"> | Date | string
  }

  export type EMSUserCreateWithoutAgencyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    transportRequests?: TransportRequestCreateNestedManyWithoutCreatedByInput
  }

  export type EMSUserUncheckedCreateWithoutAgencyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    transportRequests?: TransportRequestUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type EMSUserCreateOrConnectWithoutAgencyInput = {
    where: EMSUserWhereUniqueInput
    create: XOR<EMSUserCreateWithoutAgencyInput, EMSUserUncheckedCreateWithoutAgencyInput>
  }

  export type EMSUserCreateManyAgencyInputEnvelope = {
    data: EMSUserCreateManyAgencyInput | EMSUserCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type UnitCreateWithoutAgencyInput = {
    id?: string
    unitNumber: string
    type: string
    capabilities?: UnitCreatecapabilitiesInput | string[]
    currentStatus?: string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    assignedTripId?: string | null
    lastStatusUpdate?: Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: Date | string | null
    totalTripsCompleted?: number
    averageResponseTime?: number | null
    lastMaintenanceDate?: Date | string | null
    maintenanceStatus?: string | null
    locationUpdateTimestamp?: Date | string | null
    performanceScore?: Decimal | DecimalJsLike | number | string | null
    crewSize?: number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: Decimal | DecimalJsLike | number | string | null
    interceptCapability?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UnitUncheckedCreateWithoutAgencyInput = {
    id?: string
    unitNumber: string
    type: string
    capabilities?: UnitCreatecapabilitiesInput | string[]
    currentStatus?: string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    assignedTripId?: string | null
    lastStatusUpdate?: Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: Date | string | null
    totalTripsCompleted?: number
    averageResponseTime?: number | null
    lastMaintenanceDate?: Date | string | null
    maintenanceStatus?: string | null
    locationUpdateTimestamp?: Date | string | null
    performanceScore?: Decimal | DecimalJsLike | number | string | null
    crewSize?: number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: Decimal | DecimalJsLike | number | string | null
    interceptCapability?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UnitCreateOrConnectWithoutAgencyInput = {
    where: UnitWhereUniqueInput
    create: XOR<UnitCreateWithoutAgencyInput, UnitUncheckedCreateWithoutAgencyInput>
  }

  export type UnitCreateManyAgencyInputEnvelope = {
    data: UnitCreateManyAgencyInput | UnitCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type EMSUserUpsertWithWhereUniqueWithoutAgencyInput = {
    where: EMSUserWhereUniqueInput
    update: XOR<EMSUserUpdateWithoutAgencyInput, EMSUserUncheckedUpdateWithoutAgencyInput>
    create: XOR<EMSUserCreateWithoutAgencyInput, EMSUserUncheckedCreateWithoutAgencyInput>
  }

  export type EMSUserUpdateWithWhereUniqueWithoutAgencyInput = {
    where: EMSUserWhereUniqueInput
    data: XOR<EMSUserUpdateWithoutAgencyInput, EMSUserUncheckedUpdateWithoutAgencyInput>
  }

  export type EMSUserUpdateManyWithWhereWithoutAgencyInput = {
    where: EMSUserScalarWhereInput
    data: XOR<EMSUserUpdateManyMutationInput, EMSUserUncheckedUpdateManyWithoutAgencyInput>
  }

  export type EMSUserScalarWhereInput = {
    AND?: EMSUserScalarWhereInput | EMSUserScalarWhereInput[]
    OR?: EMSUserScalarWhereInput[]
    NOT?: EMSUserScalarWhereInput | EMSUserScalarWhereInput[]
    id?: StringFilter<"EMSUser"> | string
    email?: StringFilter<"EMSUser"> | string
    password?: StringFilter<"EMSUser"> | string
    name?: StringFilter<"EMSUser"> | string
    phone?: StringNullableFilter<"EMSUser"> | string | null
    agencyName?: StringFilter<"EMSUser"> | string
    agencyId?: StringNullableFilter<"EMSUser"> | string | null
    emailNotifications?: BoolFilter<"EMSUser"> | boolean
    smsNotifications?: BoolFilter<"EMSUser"> | boolean
    isActive?: BoolFilter<"EMSUser"> | boolean
    userType?: StringFilter<"EMSUser"> | string
    createdAt?: DateTimeFilter<"EMSUser"> | Date | string
    updatedAt?: DateTimeFilter<"EMSUser"> | Date | string
  }

  export type UnitUpsertWithWhereUniqueWithoutAgencyInput = {
    where: UnitWhereUniqueInput
    update: XOR<UnitUpdateWithoutAgencyInput, UnitUncheckedUpdateWithoutAgencyInput>
    create: XOR<UnitCreateWithoutAgencyInput, UnitUncheckedCreateWithoutAgencyInput>
  }

  export type UnitUpdateWithWhereUniqueWithoutAgencyInput = {
    where: UnitWhereUniqueInput
    data: XOR<UnitUpdateWithoutAgencyInput, UnitUncheckedUpdateWithoutAgencyInput>
  }

  export type UnitUpdateManyWithWhereWithoutAgencyInput = {
    where: UnitScalarWhereInput
    data: XOR<UnitUpdateManyMutationInput, UnitUncheckedUpdateManyWithoutAgencyInput>
  }

  export type UnitScalarWhereInput = {
    AND?: UnitScalarWhereInput | UnitScalarWhereInput[]
    OR?: UnitScalarWhereInput[]
    NOT?: UnitScalarWhereInput | UnitScalarWhereInput[]
    id?: StringFilter<"Unit"> | string
    agencyId?: StringNullableFilter<"Unit"> | string | null
    unitNumber?: StringFilter<"Unit"> | string
    type?: StringFilter<"Unit"> | string
    capabilities?: StringNullableListFilter<"Unit">
    currentStatus?: StringFilter<"Unit"> | string
    currentLocation?: JsonNullableFilter<"Unit">
    isActive?: BoolFilter<"Unit"> | boolean
    assignedTripId?: StringNullableFilter<"Unit"> | string | null
    lastStatusUpdate?: DateTimeFilter<"Unit"> | Date | string
    statusHistory?: JsonNullableFilter<"Unit">
    currentTripDetails?: JsonNullableFilter<"Unit">
    lastKnownLocation?: JsonNullableFilter<"Unit">
    locationUpdatedAt?: DateTimeNullableFilter<"Unit"> | Date | string | null
    totalTripsCompleted?: IntFilter<"Unit"> | number
    averageResponseTime?: FloatNullableFilter<"Unit"> | number | null
    lastMaintenanceDate?: DateTimeNullableFilter<"Unit"> | Date | string | null
    maintenanceStatus?: StringNullableFilter<"Unit"> | string | null
    locationUpdateTimestamp?: DateTimeNullableFilter<"Unit"> | Date | string | null
    performanceScore?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    crewSize?: IntNullableFilter<"Unit"> | number | null
    crewComposition?: JsonNullableFilter<"Unit">
    baseHourlyRate?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: JsonNullableFilter<"Unit">
    stagingLocations?: JsonNullableFilter<"Unit">
    maxServiceRadius?: DecimalNullableFilter<"Unit"> | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFilter<"Unit"> | boolean
    createdAt?: DateTimeFilter<"Unit"> | Date | string
    updatedAt?: DateTimeFilter<"Unit"> | Date | string
  }

  export type EMSAgencyCreateWithoutUnitsInput = {
    id?: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea?: EMSAgencyCreateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyCreatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    status?: string
    addedBy?: string | null
    addedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: EMSUserCreateNestedManyWithoutAgencyInput
  }

  export type EMSAgencyUncheckedCreateWithoutUnitsInput = {
    id?: string
    name: string
    contactName: string
    phone: string
    email: string
    address: string
    city: string
    state: string
    zipCode: string
    serviceArea?: EMSAgencyCreateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyCreatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    status?: string
    addedBy?: string | null
    addedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: EMSUserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type EMSAgencyCreateOrConnectWithoutUnitsInput = {
    where: EMSAgencyWhereUniqueInput
    create: XOR<EMSAgencyCreateWithoutUnitsInput, EMSAgencyUncheckedCreateWithoutUnitsInput>
  }

  export type EMSAgencyUpsertWithoutUnitsInput = {
    update: XOR<EMSAgencyUpdateWithoutUnitsInput, EMSAgencyUncheckedUpdateWithoutUnitsInput>
    create: XOR<EMSAgencyCreateWithoutUnitsInput, EMSAgencyUncheckedCreateWithoutUnitsInput>
    where?: EMSAgencyWhereInput
  }

  export type EMSAgencyUpdateToOneWithWhereWithoutUnitsInput = {
    where?: EMSAgencyWhereInput
    data: XOR<EMSAgencyUpdateWithoutUnitsInput, EMSAgencyUncheckedUpdateWithoutUnitsInput>
  }

  export type EMSAgencyUpdateWithoutUnitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: EMSUserUpdateManyWithoutAgencyNestedInput
  }

  export type EMSAgencyUncheckedUpdateWithoutUnitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    serviceArea?: EMSAgencyUpdateserviceAreaInput | string[]
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    capabilities?: EMSAgencyUpdatecapabilitiesInput | string[]
    pricingStructure?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    addedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: EMSUserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type EMSUserCreateWithoutTransportRequestsInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    agency?: EMSAgencyCreateNestedOneWithoutUsersInput
  }

  export type EMSUserUncheckedCreateWithoutTransportRequestsInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    agencyId?: string | null
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EMSUserCreateOrConnectWithoutTransportRequestsInput = {
    where: EMSUserWhereUniqueInput
    create: XOR<EMSUserCreateWithoutTransportRequestsInput, EMSUserUncheckedCreateWithoutTransportRequestsInput>
  }

  export type EMSUserUpsertWithoutTransportRequestsInput = {
    update: XOR<EMSUserUpdateWithoutTransportRequestsInput, EMSUserUncheckedUpdateWithoutTransportRequestsInput>
    create: XOR<EMSUserCreateWithoutTransportRequestsInput, EMSUserUncheckedCreateWithoutTransportRequestsInput>
    where?: EMSUserWhereInput
  }

  export type EMSUserUpdateToOneWithWhereWithoutTransportRequestsInput = {
    where?: EMSUserWhereInput
    data: XOR<EMSUserUpdateWithoutTransportRequestsInput, EMSUserUncheckedUpdateWithoutTransportRequestsInput>
  }

  export type EMSUserUpdateWithoutTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: EMSAgencyUpdateOneWithoutUsersNestedInput
  }

  export type EMSUserUncheckedUpdateWithoutTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateManyCreatedByInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EMSUserCreateManyAgencyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    agencyName: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UnitCreateManyAgencyInput = {
    id?: string
    unitNumber: string
    type: string
    capabilities?: UnitCreatecapabilitiesInput | string[]
    currentStatus?: string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    assignedTripId?: string | null
    lastStatusUpdate?: Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: Date | string | null
    totalTripsCompleted?: number
    averageResponseTime?: number | null
    lastMaintenanceDate?: Date | string | null
    maintenanceStatus?: string | null
    locationUpdateTimestamp?: Date | string | null
    performanceScore?: Decimal | DecimalJsLike | number | string | null
    crewSize?: number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: Decimal | DecimalJsLike | number | string | null
    interceptCapability?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EMSUserUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportRequests?: TransportRequestUpdateManyWithoutCreatedByNestedInput
  }

  export type EMSUserUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportRequests?: TransportRequestUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type EMSUserUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    agencyName?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    unitNumber?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    capabilities?: UnitUpdatecapabilitiesInput | string[]
    currentStatus?: StringFieldUpdateOperationsInput | string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    assignedTripId?: NullableStringFieldUpdateOperationsInput | string | null
    lastStatusUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalTripsCompleted?: IntFieldUpdateOperationsInput | number
    averageResponseTime?: NullableFloatFieldUpdateOperationsInput | number | null
    lastMaintenanceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceStatus?: NullableStringFieldUpdateOperationsInput | string | null
    locationUpdateTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    performanceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    crewSize?: NullableIntFieldUpdateOperationsInput | number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    unitNumber?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    capabilities?: UnitUpdatecapabilitiesInput | string[]
    currentStatus?: StringFieldUpdateOperationsInput | string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    assignedTripId?: NullableStringFieldUpdateOperationsInput | string | null
    lastStatusUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalTripsCompleted?: IntFieldUpdateOperationsInput | number
    averageResponseTime?: NullableFloatFieldUpdateOperationsInput | number | null
    lastMaintenanceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceStatus?: NullableStringFieldUpdateOperationsInput | string | null
    locationUpdateTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    performanceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    crewSize?: NullableIntFieldUpdateOperationsInput | number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    unitNumber?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    capabilities?: UnitUpdatecapabilitiesInput | string[]
    currentStatus?: StringFieldUpdateOperationsInput | string
    currentLocation?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    assignedTripId?: NullableStringFieldUpdateOperationsInput | string | null
    lastStatusUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    statusHistory?: NullableJsonNullValueInput | InputJsonValue
    currentTripDetails?: NullableJsonNullValueInput | InputJsonValue
    lastKnownLocation?: NullableJsonNullValueInput | InputJsonValue
    locationUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalTripsCompleted?: IntFieldUpdateOperationsInput | number
    averageResponseTime?: NullableFloatFieldUpdateOperationsInput | number | null
    lastMaintenanceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceStatus?: NullableStringFieldUpdateOperationsInput | string | null
    locationUpdateTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    performanceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    crewSize?: NullableIntFieldUpdateOperationsInput | number | null
    crewComposition?: NullableJsonNullValueInput | InputJsonValue
    baseHourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overtimeMultiplier?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    shiftLengthHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxOvertimeHours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicleCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuelCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenanceCostPerMile?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    homeBaseLocation?: NullableJsonNullValueInput | InputJsonValue
    stagingLocations?: NullableJsonNullValueInput | InputJsonValue
    maxServiceRadius?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    interceptCapability?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use EMSUserCountOutputTypeDefaultArgs instead
     */
    export type EMSUserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EMSUserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EMSAgencyCountOutputTypeDefaultArgs instead
     */
    export type EMSAgencyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EMSAgencyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EMSUserDefaultArgs instead
     */
    export type EMSUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EMSUserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EMSAgencyDefaultArgs instead
     */
    export type EMSAgencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EMSAgencyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UnitDefaultArgs instead
     */
    export type UnitArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UnitDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CrewRoleDefaultArgs instead
     */
    export type CrewRoleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CrewRoleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TransportRequestDefaultArgs instead
     */
    export type TransportRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TransportRequestDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}