// Hospital Database Schema
generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/hospital"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_HOSPITAL")
}

model HospitalUser {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String
  name         String
  hospitalName String
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  transportRequests TransportRequest[]

  @@map("hospital_users")
}

model HealthcareUser {
  id                 String   @id @default(cuid())
  email              String   @unique
  password           String
  name               String
  phone              String?
  facilityName       String
  facilityType       String // HOSPITAL, CLINIC, URGENT_CARE, etc.
  emailNotifications Boolean  @default(true)
  smsNotifications   Boolean  @default(false)
  isActive           Boolean  @default(true)
  userType           String   @default("HEALTHCARE") // HEALTHCARE, ADMIN
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relations
  transportRequests TransportRequest[] @relation("HealthcareTransportRequests")

  @@map("healthcare_users")
}

model Facility {
  id          String   @id @default(cuid())
  name        String
  type        String
  address     String
  city        String
  state       String
  zipCode     String
  phone       String?
  email       String?
  coordinates Json?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  originTransportRequests      TransportRequest[] @relation("OriginFacility")
  destinationTransportRequests TransportRequest[] @relation("DestinationFacility")

  @@map("facilities")
}

model TransportRequest {
  id                    String    @id @default(cuid())
  tripNumber            String?   @unique
  patientId             String
  patientWeight         String?
  specialNeeds          String?
  originFacilityId      String?
  destinationFacilityId String?
  fromLocation          String?
  toLocation            String?
  scheduledTime         DateTime?
  transportLevel        String
  urgencyLevel          String?
  priority              String
  status                String    @default("PENDING")
  specialRequirements   String?

  // Clinical Details
  diagnosis          String?
  mobilityLevel      String?
  oxygenRequired     Boolean @default(false)
  monitoringRequired Boolean @default(false)

  // QR Code
  generateQRCode Boolean @default(false)
  qrCodeData     String?

  // Agency Notifications
  selectedAgencies   String[]
  notificationRadius Int?

  // Time Tracking
  transferRequestTime  DateTime?
  transferAcceptedTime DateTime?
  emsArrivalTime       DateTime?
  emsDepartureTime     DateTime?

  requestTimestamp      DateTime  @default(now())
  acceptedTimestamp     DateTime?
  pickupTimestamp       DateTime?
  completionTimestamp   DateTime?
  assignedAgencyId      String?
  assignedUnitId        String?
  createdById           String?
  healthcareCreatedById String?
  readyStart            DateTime?
  readyEnd              DateTime?
  isolation             Boolean   @default(false)
  bariatric             Boolean   @default(false)
  notes                 String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  // Relations
  originFacility      Facility?       @relation("OriginFacility", fields: [originFacilityId], references: [id])
  destinationFacility Facility?       @relation("DestinationFacility", fields: [destinationFacilityId], references: [id])
  createdBy           HospitalUser?   @relation(fields: [createdById], references: [id])
  createdByHealthcare HealthcareUser? @relation("HealthcareTransportRequests", fields: [healthcareCreatedById], references: [id])

  @@map("transport_requests")
}

model DropdownOption {
  id        String   @id @default(cuid())
  category  String // 'insurance', 'diagnosis', 'mobility', etc.
  value     String // The actual option value
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([category, value])
  @@map("dropdown_options")
}
