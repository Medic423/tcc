
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model HospitalUser
 * 
 */
export type HospitalUser = $Result.DefaultSelection<Prisma.$HospitalUserPayload>
/**
 * Model HealthcareUser
 * 
 */
export type HealthcareUser = $Result.DefaultSelection<Prisma.$HealthcareUserPayload>
/**
 * Model Facility
 * 
 */
export type Facility = $Result.DefaultSelection<Prisma.$FacilityPayload>
/**
 * Model TransportRequest
 * 
 */
export type TransportRequest = $Result.DefaultSelection<Prisma.$TransportRequestPayload>
/**
 * Model DropdownOption
 * 
 */
export type DropdownOption = $Result.DefaultSelection<Prisma.$DropdownOptionPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more HospitalUsers
 * const hospitalUsers = await prisma.hospitalUser.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more HospitalUsers
   * const hospitalUsers = await prisma.hospitalUser.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.hospitalUser`: Exposes CRUD operations for the **HospitalUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HospitalUsers
    * const hospitalUsers = await prisma.hospitalUser.findMany()
    * ```
    */
  get hospitalUser(): Prisma.HospitalUserDelegate<ExtArgs>;

  /**
   * `prisma.healthcareUser`: Exposes CRUD operations for the **HealthcareUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HealthcareUsers
    * const healthcareUsers = await prisma.healthcareUser.findMany()
    * ```
    */
  get healthcareUser(): Prisma.HealthcareUserDelegate<ExtArgs>;

  /**
   * `prisma.facility`: Exposes CRUD operations for the **Facility** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Facilities
    * const facilities = await prisma.facility.findMany()
    * ```
    */
  get facility(): Prisma.FacilityDelegate<ExtArgs>;

  /**
   * `prisma.transportRequest`: Exposes CRUD operations for the **TransportRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransportRequests
    * const transportRequests = await prisma.transportRequest.findMany()
    * ```
    */
  get transportRequest(): Prisma.TransportRequestDelegate<ExtArgs>;

  /**
   * `prisma.dropdownOption`: Exposes CRUD operations for the **DropdownOption** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DropdownOptions
    * const dropdownOptions = await prisma.dropdownOption.findMany()
    * ```
    */
  get dropdownOption(): Prisma.DropdownOptionDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    HospitalUser: 'HospitalUser',
    HealthcareUser: 'HealthcareUser',
    Facility: 'Facility',
    TransportRequest: 'TransportRequest',
    DropdownOption: 'DropdownOption'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "hospitalUser" | "healthcareUser" | "facility" | "transportRequest" | "dropdownOption"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      HospitalUser: {
        payload: Prisma.$HospitalUserPayload<ExtArgs>
        fields: Prisma.HospitalUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HospitalUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HospitalUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>
          }
          findFirst: {
            args: Prisma.HospitalUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HospitalUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>
          }
          findMany: {
            args: Prisma.HospitalUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>[]
          }
          create: {
            args: Prisma.HospitalUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>
          }
          createMany: {
            args: Prisma.HospitalUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HospitalUserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>[]
          }
          delete: {
            args: Prisma.HospitalUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>
          }
          update: {
            args: Prisma.HospitalUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>
          }
          deleteMany: {
            args: Prisma.HospitalUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HospitalUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HospitalUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HospitalUserPayload>
          }
          aggregate: {
            args: Prisma.HospitalUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHospitalUser>
          }
          groupBy: {
            args: Prisma.HospitalUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<HospitalUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.HospitalUserCountArgs<ExtArgs>
            result: $Utils.Optional<HospitalUserCountAggregateOutputType> | number
          }
        }
      }
      HealthcareUser: {
        payload: Prisma.$HealthcareUserPayload<ExtArgs>
        fields: Prisma.HealthcareUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HealthcareUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HealthcareUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>
          }
          findFirst: {
            args: Prisma.HealthcareUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HealthcareUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>
          }
          findMany: {
            args: Prisma.HealthcareUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>[]
          }
          create: {
            args: Prisma.HealthcareUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>
          }
          createMany: {
            args: Prisma.HealthcareUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HealthcareUserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>[]
          }
          delete: {
            args: Prisma.HealthcareUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>
          }
          update: {
            args: Prisma.HealthcareUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>
          }
          deleteMany: {
            args: Prisma.HealthcareUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HealthcareUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HealthcareUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthcareUserPayload>
          }
          aggregate: {
            args: Prisma.HealthcareUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHealthcareUser>
          }
          groupBy: {
            args: Prisma.HealthcareUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<HealthcareUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.HealthcareUserCountArgs<ExtArgs>
            result: $Utils.Optional<HealthcareUserCountAggregateOutputType> | number
          }
        }
      }
      Facility: {
        payload: Prisma.$FacilityPayload<ExtArgs>
        fields: Prisma.FacilityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FacilityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FacilityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>
          }
          findFirst: {
            args: Prisma.FacilityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FacilityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>
          }
          findMany: {
            args: Prisma.FacilityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>[]
          }
          create: {
            args: Prisma.FacilityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>
          }
          createMany: {
            args: Prisma.FacilityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FacilityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>[]
          }
          delete: {
            args: Prisma.FacilityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>
          }
          update: {
            args: Prisma.FacilityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>
          }
          deleteMany: {
            args: Prisma.FacilityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FacilityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FacilityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityPayload>
          }
          aggregate: {
            args: Prisma.FacilityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFacility>
          }
          groupBy: {
            args: Prisma.FacilityGroupByArgs<ExtArgs>
            result: $Utils.Optional<FacilityGroupByOutputType>[]
          }
          count: {
            args: Prisma.FacilityCountArgs<ExtArgs>
            result: $Utils.Optional<FacilityCountAggregateOutputType> | number
          }
        }
      }
      TransportRequest: {
        payload: Prisma.$TransportRequestPayload<ExtArgs>
        fields: Prisma.TransportRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransportRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransportRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          findFirst: {
            args: Prisma.TransportRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransportRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          findMany: {
            args: Prisma.TransportRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>[]
          }
          create: {
            args: Prisma.TransportRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          createMany: {
            args: Prisma.TransportRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransportRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>[]
          }
          delete: {
            args: Prisma.TransportRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          update: {
            args: Prisma.TransportRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          deleteMany: {
            args: Prisma.TransportRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransportRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransportRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportRequestPayload>
          }
          aggregate: {
            args: Prisma.TransportRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransportRequest>
          }
          groupBy: {
            args: Prisma.TransportRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransportRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransportRequestCountArgs<ExtArgs>
            result: $Utils.Optional<TransportRequestCountAggregateOutputType> | number
          }
        }
      }
      DropdownOption: {
        payload: Prisma.$DropdownOptionPayload<ExtArgs>
        fields: Prisma.DropdownOptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DropdownOptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DropdownOptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>
          }
          findFirst: {
            args: Prisma.DropdownOptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DropdownOptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>
          }
          findMany: {
            args: Prisma.DropdownOptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>[]
          }
          create: {
            args: Prisma.DropdownOptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>
          }
          createMany: {
            args: Prisma.DropdownOptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DropdownOptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>[]
          }
          delete: {
            args: Prisma.DropdownOptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>
          }
          update: {
            args: Prisma.DropdownOptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>
          }
          deleteMany: {
            args: Prisma.DropdownOptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DropdownOptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DropdownOptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DropdownOptionPayload>
          }
          aggregate: {
            args: Prisma.DropdownOptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDropdownOption>
          }
          groupBy: {
            args: Prisma.DropdownOptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DropdownOptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DropdownOptionCountArgs<ExtArgs>
            result: $Utils.Optional<DropdownOptionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type HospitalUserCountOutputType
   */

  export type HospitalUserCountOutputType = {
    transportRequests: number
  }

  export type HospitalUserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transportRequests?: boolean | HospitalUserCountOutputTypeCountTransportRequestsArgs
  }

  // Custom InputTypes
  /**
   * HospitalUserCountOutputType without action
   */
  export type HospitalUserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUserCountOutputType
     */
    select?: HospitalUserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HospitalUserCountOutputType without action
   */
  export type HospitalUserCountOutputTypeCountTransportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransportRequestWhereInput
  }


  /**
   * Count Type HealthcareUserCountOutputType
   */

  export type HealthcareUserCountOutputType = {
    transportRequests: number
  }

  export type HealthcareUserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transportRequests?: boolean | HealthcareUserCountOutputTypeCountTransportRequestsArgs
  }

  // Custom InputTypes
  /**
   * HealthcareUserCountOutputType without action
   */
  export type HealthcareUserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUserCountOutputType
     */
    select?: HealthcareUserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HealthcareUserCountOutputType without action
   */
  export type HealthcareUserCountOutputTypeCountTransportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransportRequestWhereInput
  }


  /**
   * Count Type FacilityCountOutputType
   */

  export type FacilityCountOutputType = {
    originTransportRequests: number
    destinationTransportRequests: number
  }

  export type FacilityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    originTransportRequests?: boolean | FacilityCountOutputTypeCountOriginTransportRequestsArgs
    destinationTransportRequests?: boolean | FacilityCountOutputTypeCountDestinationTransportRequestsArgs
  }

  // Custom InputTypes
  /**
   * FacilityCountOutputType without action
   */
  export type FacilityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCountOutputType
     */
    select?: FacilityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FacilityCountOutputType without action
   */
  export type FacilityCountOutputTypeCountOriginTransportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransportRequestWhereInput
  }

  /**
   * FacilityCountOutputType without action
   */
  export type FacilityCountOutputTypeCountDestinationTransportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransportRequestWhereInput
  }


  /**
   * Models
   */

  /**
   * Model HospitalUser
   */

  export type AggregateHospitalUser = {
    _count: HospitalUserCountAggregateOutputType | null
    _min: HospitalUserMinAggregateOutputType | null
    _max: HospitalUserMaxAggregateOutputType | null
  }

  export type HospitalUserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    hospitalName: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HospitalUserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    hospitalName: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HospitalUserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    hospitalName: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HospitalUserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    hospitalName?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HospitalUserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    hospitalName?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HospitalUserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    hospitalName?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HospitalUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HospitalUser to aggregate.
     */
    where?: HospitalUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HospitalUsers to fetch.
     */
    orderBy?: HospitalUserOrderByWithRelationInput | HospitalUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HospitalUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HospitalUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HospitalUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HospitalUsers
    **/
    _count?: true | HospitalUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HospitalUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HospitalUserMaxAggregateInputType
  }

  export type GetHospitalUserAggregateType<T extends HospitalUserAggregateArgs> = {
        [P in keyof T & keyof AggregateHospitalUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHospitalUser[P]>
      : GetScalarType<T[P], AggregateHospitalUser[P]>
  }




  export type HospitalUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HospitalUserWhereInput
    orderBy?: HospitalUserOrderByWithAggregationInput | HospitalUserOrderByWithAggregationInput[]
    by: HospitalUserScalarFieldEnum[] | HospitalUserScalarFieldEnum
    having?: HospitalUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HospitalUserCountAggregateInputType | true
    _min?: HospitalUserMinAggregateInputType
    _max?: HospitalUserMaxAggregateInputType
  }

  export type HospitalUserGroupByOutputType = {
    id: string
    email: string
    password: string
    name: string
    hospitalName: string
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: HospitalUserCountAggregateOutputType | null
    _min: HospitalUserMinAggregateOutputType | null
    _max: HospitalUserMaxAggregateOutputType | null
  }

  type GetHospitalUserGroupByPayload<T extends HospitalUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HospitalUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HospitalUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HospitalUserGroupByOutputType[P]>
            : GetScalarType<T[P], HospitalUserGroupByOutputType[P]>
        }
      >
    >


  export type HospitalUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    hospitalName?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transportRequests?: boolean | HospitalUser$transportRequestsArgs<ExtArgs>
    _count?: boolean | HospitalUserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hospitalUser"]>

  export type HospitalUserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    hospitalName?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["hospitalUser"]>

  export type HospitalUserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    hospitalName?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HospitalUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transportRequests?: boolean | HospitalUser$transportRequestsArgs<ExtArgs>
    _count?: boolean | HospitalUserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type HospitalUserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $HospitalUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HospitalUser"
    objects: {
      transportRequests: Prisma.$TransportRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      name: string
      hospitalName: string
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["hospitalUser"]>
    composites: {}
  }

  type HospitalUserGetPayload<S extends boolean | null | undefined | HospitalUserDefaultArgs> = $Result.GetResult<Prisma.$HospitalUserPayload, S>

  type HospitalUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HospitalUserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HospitalUserCountAggregateInputType | true
    }

  export interface HospitalUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HospitalUser'], meta: { name: 'HospitalUser' } }
    /**
     * Find zero or one HospitalUser that matches the filter.
     * @param {HospitalUserFindUniqueArgs} args - Arguments to find a HospitalUser
     * @example
     * // Get one HospitalUser
     * const hospitalUser = await prisma.hospitalUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HospitalUserFindUniqueArgs>(args: SelectSubset<T, HospitalUserFindUniqueArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one HospitalUser that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HospitalUserFindUniqueOrThrowArgs} args - Arguments to find a HospitalUser
     * @example
     * // Get one HospitalUser
     * const hospitalUser = await prisma.hospitalUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HospitalUserFindUniqueOrThrowArgs>(args: SelectSubset<T, HospitalUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first HospitalUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HospitalUserFindFirstArgs} args - Arguments to find a HospitalUser
     * @example
     * // Get one HospitalUser
     * const hospitalUser = await prisma.hospitalUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HospitalUserFindFirstArgs>(args?: SelectSubset<T, HospitalUserFindFirstArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first HospitalUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HospitalUserFindFirstOrThrowArgs} args - Arguments to find a HospitalUser
     * @example
     * // Get one HospitalUser
     * const hospitalUser = await prisma.hospitalUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HospitalUserFindFirstOrThrowArgs>(args?: SelectSubset<T, HospitalUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more HospitalUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HospitalUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HospitalUsers
     * const hospitalUsers = await prisma.hospitalUser.findMany()
     * 
     * // Get first 10 HospitalUsers
     * const hospitalUsers = await prisma.hospitalUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const hospitalUserWithIdOnly = await prisma.hospitalUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HospitalUserFindManyArgs>(args?: SelectSubset<T, HospitalUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a HospitalUser.
     * @param {HospitalUserCreateArgs} args - Arguments to create a HospitalUser.
     * @example
     * // Create one HospitalUser
     * const HospitalUser = await prisma.hospitalUser.create({
     *   data: {
     *     // ... data to create a HospitalUser
     *   }
     * })
     * 
     */
    create<T extends HospitalUserCreateArgs>(args: SelectSubset<T, HospitalUserCreateArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many HospitalUsers.
     * @param {HospitalUserCreateManyArgs} args - Arguments to create many HospitalUsers.
     * @example
     * // Create many HospitalUsers
     * const hospitalUser = await prisma.hospitalUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HospitalUserCreateManyArgs>(args?: SelectSubset<T, HospitalUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HospitalUsers and returns the data saved in the database.
     * @param {HospitalUserCreateManyAndReturnArgs} args - Arguments to create many HospitalUsers.
     * @example
     * // Create many HospitalUsers
     * const hospitalUser = await prisma.hospitalUser.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HospitalUsers and only return the `id`
     * const hospitalUserWithIdOnly = await prisma.hospitalUser.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HospitalUserCreateManyAndReturnArgs>(args?: SelectSubset<T, HospitalUserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a HospitalUser.
     * @param {HospitalUserDeleteArgs} args - Arguments to delete one HospitalUser.
     * @example
     * // Delete one HospitalUser
     * const HospitalUser = await prisma.hospitalUser.delete({
     *   where: {
     *     // ... filter to delete one HospitalUser
     *   }
     * })
     * 
     */
    delete<T extends HospitalUserDeleteArgs>(args: SelectSubset<T, HospitalUserDeleteArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one HospitalUser.
     * @param {HospitalUserUpdateArgs} args - Arguments to update one HospitalUser.
     * @example
     * // Update one HospitalUser
     * const hospitalUser = await prisma.hospitalUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HospitalUserUpdateArgs>(args: SelectSubset<T, HospitalUserUpdateArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more HospitalUsers.
     * @param {HospitalUserDeleteManyArgs} args - Arguments to filter HospitalUsers to delete.
     * @example
     * // Delete a few HospitalUsers
     * const { count } = await prisma.hospitalUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HospitalUserDeleteManyArgs>(args?: SelectSubset<T, HospitalUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HospitalUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HospitalUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HospitalUsers
     * const hospitalUser = await prisma.hospitalUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HospitalUserUpdateManyArgs>(args: SelectSubset<T, HospitalUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HospitalUser.
     * @param {HospitalUserUpsertArgs} args - Arguments to update or create a HospitalUser.
     * @example
     * // Update or create a HospitalUser
     * const hospitalUser = await prisma.hospitalUser.upsert({
     *   create: {
     *     // ... data to create a HospitalUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HospitalUser we want to update
     *   }
     * })
     */
    upsert<T extends HospitalUserUpsertArgs>(args: SelectSubset<T, HospitalUserUpsertArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of HospitalUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HospitalUserCountArgs} args - Arguments to filter HospitalUsers to count.
     * @example
     * // Count the number of HospitalUsers
     * const count = await prisma.hospitalUser.count({
     *   where: {
     *     // ... the filter for the HospitalUsers we want to count
     *   }
     * })
    **/
    count<T extends HospitalUserCountArgs>(
      args?: Subset<T, HospitalUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HospitalUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HospitalUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HospitalUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HospitalUserAggregateArgs>(args: Subset<T, HospitalUserAggregateArgs>): Prisma.PrismaPromise<GetHospitalUserAggregateType<T>>

    /**
     * Group by HospitalUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HospitalUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HospitalUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HospitalUserGroupByArgs['orderBy'] }
        : { orderBy?: HospitalUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HospitalUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHospitalUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HospitalUser model
   */
  readonly fields: HospitalUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HospitalUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HospitalUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transportRequests<T extends HospitalUser$transportRequestsArgs<ExtArgs> = {}>(args?: Subset<T, HospitalUser$transportRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HospitalUser model
   */ 
  interface HospitalUserFieldRefs {
    readonly id: FieldRef<"HospitalUser", 'String'>
    readonly email: FieldRef<"HospitalUser", 'String'>
    readonly password: FieldRef<"HospitalUser", 'String'>
    readonly name: FieldRef<"HospitalUser", 'String'>
    readonly hospitalName: FieldRef<"HospitalUser", 'String'>
    readonly isActive: FieldRef<"HospitalUser", 'Boolean'>
    readonly createdAt: FieldRef<"HospitalUser", 'DateTime'>
    readonly updatedAt: FieldRef<"HospitalUser", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HospitalUser findUnique
   */
  export type HospitalUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * Filter, which HospitalUser to fetch.
     */
    where: HospitalUserWhereUniqueInput
  }

  /**
   * HospitalUser findUniqueOrThrow
   */
  export type HospitalUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * Filter, which HospitalUser to fetch.
     */
    where: HospitalUserWhereUniqueInput
  }

  /**
   * HospitalUser findFirst
   */
  export type HospitalUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * Filter, which HospitalUser to fetch.
     */
    where?: HospitalUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HospitalUsers to fetch.
     */
    orderBy?: HospitalUserOrderByWithRelationInput | HospitalUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HospitalUsers.
     */
    cursor?: HospitalUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HospitalUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HospitalUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HospitalUsers.
     */
    distinct?: HospitalUserScalarFieldEnum | HospitalUserScalarFieldEnum[]
  }

  /**
   * HospitalUser findFirstOrThrow
   */
  export type HospitalUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * Filter, which HospitalUser to fetch.
     */
    where?: HospitalUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HospitalUsers to fetch.
     */
    orderBy?: HospitalUserOrderByWithRelationInput | HospitalUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HospitalUsers.
     */
    cursor?: HospitalUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HospitalUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HospitalUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HospitalUsers.
     */
    distinct?: HospitalUserScalarFieldEnum | HospitalUserScalarFieldEnum[]
  }

  /**
   * HospitalUser findMany
   */
  export type HospitalUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * Filter, which HospitalUsers to fetch.
     */
    where?: HospitalUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HospitalUsers to fetch.
     */
    orderBy?: HospitalUserOrderByWithRelationInput | HospitalUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HospitalUsers.
     */
    cursor?: HospitalUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HospitalUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HospitalUsers.
     */
    skip?: number
    distinct?: HospitalUserScalarFieldEnum | HospitalUserScalarFieldEnum[]
  }

  /**
   * HospitalUser create
   */
  export type HospitalUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * The data needed to create a HospitalUser.
     */
    data: XOR<HospitalUserCreateInput, HospitalUserUncheckedCreateInput>
  }

  /**
   * HospitalUser createMany
   */
  export type HospitalUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HospitalUsers.
     */
    data: HospitalUserCreateManyInput | HospitalUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HospitalUser createManyAndReturn
   */
  export type HospitalUserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many HospitalUsers.
     */
    data: HospitalUserCreateManyInput | HospitalUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HospitalUser update
   */
  export type HospitalUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * The data needed to update a HospitalUser.
     */
    data: XOR<HospitalUserUpdateInput, HospitalUserUncheckedUpdateInput>
    /**
     * Choose, which HospitalUser to update.
     */
    where: HospitalUserWhereUniqueInput
  }

  /**
   * HospitalUser updateMany
   */
  export type HospitalUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HospitalUsers.
     */
    data: XOR<HospitalUserUpdateManyMutationInput, HospitalUserUncheckedUpdateManyInput>
    /**
     * Filter which HospitalUsers to update
     */
    where?: HospitalUserWhereInput
  }

  /**
   * HospitalUser upsert
   */
  export type HospitalUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * The filter to search for the HospitalUser to update in case it exists.
     */
    where: HospitalUserWhereUniqueInput
    /**
     * In case the HospitalUser found by the `where` argument doesn't exist, create a new HospitalUser with this data.
     */
    create: XOR<HospitalUserCreateInput, HospitalUserUncheckedCreateInput>
    /**
     * In case the HospitalUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HospitalUserUpdateInput, HospitalUserUncheckedUpdateInput>
  }

  /**
   * HospitalUser delete
   */
  export type HospitalUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    /**
     * Filter which HospitalUser to delete.
     */
    where: HospitalUserWhereUniqueInput
  }

  /**
   * HospitalUser deleteMany
   */
  export type HospitalUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HospitalUsers to delete
     */
    where?: HospitalUserWhereInput
  }

  /**
   * HospitalUser.transportRequests
   */
  export type HospitalUser$transportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    where?: TransportRequestWhereInput
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    cursor?: TransportRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * HospitalUser without action
   */
  export type HospitalUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
  }


  /**
   * Model HealthcareUser
   */

  export type AggregateHealthcareUser = {
    _count: HealthcareUserCountAggregateOutputType | null
    _min: HealthcareUserMinAggregateOutputType | null
    _max: HealthcareUserMaxAggregateOutputType | null
  }

  export type HealthcareUserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    facilityName: string | null
    facilityType: string | null
    emailNotifications: boolean | null
    smsNotifications: boolean | null
    isActive: boolean | null
    userType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HealthcareUserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    facilityName: string | null
    facilityType: string | null
    emailNotifications: boolean | null
    smsNotifications: boolean | null
    isActive: boolean | null
    userType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HealthcareUserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    phone: number
    facilityName: number
    facilityType: number
    emailNotifications: number
    smsNotifications: number
    isActive: number
    userType: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HealthcareUserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    facilityName?: true
    facilityType?: true
    emailNotifications?: true
    smsNotifications?: true
    isActive?: true
    userType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HealthcareUserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    facilityName?: true
    facilityType?: true
    emailNotifications?: true
    smsNotifications?: true
    isActive?: true
    userType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HealthcareUserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    facilityName?: true
    facilityType?: true
    emailNotifications?: true
    smsNotifications?: true
    isActive?: true
    userType?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HealthcareUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HealthcareUser to aggregate.
     */
    where?: HealthcareUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthcareUsers to fetch.
     */
    orderBy?: HealthcareUserOrderByWithRelationInput | HealthcareUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HealthcareUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthcareUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthcareUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HealthcareUsers
    **/
    _count?: true | HealthcareUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HealthcareUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HealthcareUserMaxAggregateInputType
  }

  export type GetHealthcareUserAggregateType<T extends HealthcareUserAggregateArgs> = {
        [P in keyof T & keyof AggregateHealthcareUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHealthcareUser[P]>
      : GetScalarType<T[P], AggregateHealthcareUser[P]>
  }




  export type HealthcareUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HealthcareUserWhereInput
    orderBy?: HealthcareUserOrderByWithAggregationInput | HealthcareUserOrderByWithAggregationInput[]
    by: HealthcareUserScalarFieldEnum[] | HealthcareUserScalarFieldEnum
    having?: HealthcareUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HealthcareUserCountAggregateInputType | true
    _min?: HealthcareUserMinAggregateInputType
    _max?: HealthcareUserMaxAggregateInputType
  }

  export type HealthcareUserGroupByOutputType = {
    id: string
    email: string
    password: string
    name: string
    phone: string | null
    facilityName: string
    facilityType: string
    emailNotifications: boolean
    smsNotifications: boolean
    isActive: boolean
    userType: string
    createdAt: Date
    updatedAt: Date
    _count: HealthcareUserCountAggregateOutputType | null
    _min: HealthcareUserMinAggregateOutputType | null
    _max: HealthcareUserMaxAggregateOutputType | null
  }

  type GetHealthcareUserGroupByPayload<T extends HealthcareUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HealthcareUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HealthcareUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HealthcareUserGroupByOutputType[P]>
            : GetScalarType<T[P], HealthcareUserGroupByOutputType[P]>
        }
      >
    >


  export type HealthcareUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    facilityName?: boolean
    facilityType?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transportRequests?: boolean | HealthcareUser$transportRequestsArgs<ExtArgs>
    _count?: boolean | HealthcareUserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["healthcareUser"]>

  export type HealthcareUserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    facilityName?: boolean
    facilityType?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["healthcareUser"]>

  export type HealthcareUserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    facilityName?: boolean
    facilityType?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HealthcareUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transportRequests?: boolean | HealthcareUser$transportRequestsArgs<ExtArgs>
    _count?: boolean | HealthcareUserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type HealthcareUserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $HealthcareUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HealthcareUser"
    objects: {
      transportRequests: Prisma.$TransportRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      name: string
      phone: string | null
      facilityName: string
      facilityType: string
      emailNotifications: boolean
      smsNotifications: boolean
      isActive: boolean
      userType: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["healthcareUser"]>
    composites: {}
  }

  type HealthcareUserGetPayload<S extends boolean | null | undefined | HealthcareUserDefaultArgs> = $Result.GetResult<Prisma.$HealthcareUserPayload, S>

  type HealthcareUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HealthcareUserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HealthcareUserCountAggregateInputType | true
    }

  export interface HealthcareUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HealthcareUser'], meta: { name: 'HealthcareUser' } }
    /**
     * Find zero or one HealthcareUser that matches the filter.
     * @param {HealthcareUserFindUniqueArgs} args - Arguments to find a HealthcareUser
     * @example
     * // Get one HealthcareUser
     * const healthcareUser = await prisma.healthcareUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HealthcareUserFindUniqueArgs>(args: SelectSubset<T, HealthcareUserFindUniqueArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one HealthcareUser that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HealthcareUserFindUniqueOrThrowArgs} args - Arguments to find a HealthcareUser
     * @example
     * // Get one HealthcareUser
     * const healthcareUser = await prisma.healthcareUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HealthcareUserFindUniqueOrThrowArgs>(args: SelectSubset<T, HealthcareUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first HealthcareUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthcareUserFindFirstArgs} args - Arguments to find a HealthcareUser
     * @example
     * // Get one HealthcareUser
     * const healthcareUser = await prisma.healthcareUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HealthcareUserFindFirstArgs>(args?: SelectSubset<T, HealthcareUserFindFirstArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first HealthcareUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthcareUserFindFirstOrThrowArgs} args - Arguments to find a HealthcareUser
     * @example
     * // Get one HealthcareUser
     * const healthcareUser = await prisma.healthcareUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HealthcareUserFindFirstOrThrowArgs>(args?: SelectSubset<T, HealthcareUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more HealthcareUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthcareUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HealthcareUsers
     * const healthcareUsers = await prisma.healthcareUser.findMany()
     * 
     * // Get first 10 HealthcareUsers
     * const healthcareUsers = await prisma.healthcareUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const healthcareUserWithIdOnly = await prisma.healthcareUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HealthcareUserFindManyArgs>(args?: SelectSubset<T, HealthcareUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a HealthcareUser.
     * @param {HealthcareUserCreateArgs} args - Arguments to create a HealthcareUser.
     * @example
     * // Create one HealthcareUser
     * const HealthcareUser = await prisma.healthcareUser.create({
     *   data: {
     *     // ... data to create a HealthcareUser
     *   }
     * })
     * 
     */
    create<T extends HealthcareUserCreateArgs>(args: SelectSubset<T, HealthcareUserCreateArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many HealthcareUsers.
     * @param {HealthcareUserCreateManyArgs} args - Arguments to create many HealthcareUsers.
     * @example
     * // Create many HealthcareUsers
     * const healthcareUser = await prisma.healthcareUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HealthcareUserCreateManyArgs>(args?: SelectSubset<T, HealthcareUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HealthcareUsers and returns the data saved in the database.
     * @param {HealthcareUserCreateManyAndReturnArgs} args - Arguments to create many HealthcareUsers.
     * @example
     * // Create many HealthcareUsers
     * const healthcareUser = await prisma.healthcareUser.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HealthcareUsers and only return the `id`
     * const healthcareUserWithIdOnly = await prisma.healthcareUser.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HealthcareUserCreateManyAndReturnArgs>(args?: SelectSubset<T, HealthcareUserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a HealthcareUser.
     * @param {HealthcareUserDeleteArgs} args - Arguments to delete one HealthcareUser.
     * @example
     * // Delete one HealthcareUser
     * const HealthcareUser = await prisma.healthcareUser.delete({
     *   where: {
     *     // ... filter to delete one HealthcareUser
     *   }
     * })
     * 
     */
    delete<T extends HealthcareUserDeleteArgs>(args: SelectSubset<T, HealthcareUserDeleteArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one HealthcareUser.
     * @param {HealthcareUserUpdateArgs} args - Arguments to update one HealthcareUser.
     * @example
     * // Update one HealthcareUser
     * const healthcareUser = await prisma.healthcareUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HealthcareUserUpdateArgs>(args: SelectSubset<T, HealthcareUserUpdateArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more HealthcareUsers.
     * @param {HealthcareUserDeleteManyArgs} args - Arguments to filter HealthcareUsers to delete.
     * @example
     * // Delete a few HealthcareUsers
     * const { count } = await prisma.healthcareUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HealthcareUserDeleteManyArgs>(args?: SelectSubset<T, HealthcareUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HealthcareUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthcareUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HealthcareUsers
     * const healthcareUser = await prisma.healthcareUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HealthcareUserUpdateManyArgs>(args: SelectSubset<T, HealthcareUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HealthcareUser.
     * @param {HealthcareUserUpsertArgs} args - Arguments to update or create a HealthcareUser.
     * @example
     * // Update or create a HealthcareUser
     * const healthcareUser = await prisma.healthcareUser.upsert({
     *   create: {
     *     // ... data to create a HealthcareUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HealthcareUser we want to update
     *   }
     * })
     */
    upsert<T extends HealthcareUserUpsertArgs>(args: SelectSubset<T, HealthcareUserUpsertArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of HealthcareUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthcareUserCountArgs} args - Arguments to filter HealthcareUsers to count.
     * @example
     * // Count the number of HealthcareUsers
     * const count = await prisma.healthcareUser.count({
     *   where: {
     *     // ... the filter for the HealthcareUsers we want to count
     *   }
     * })
    **/
    count<T extends HealthcareUserCountArgs>(
      args?: Subset<T, HealthcareUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HealthcareUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HealthcareUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthcareUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HealthcareUserAggregateArgs>(args: Subset<T, HealthcareUserAggregateArgs>): Prisma.PrismaPromise<GetHealthcareUserAggregateType<T>>

    /**
     * Group by HealthcareUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthcareUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HealthcareUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HealthcareUserGroupByArgs['orderBy'] }
        : { orderBy?: HealthcareUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HealthcareUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHealthcareUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HealthcareUser model
   */
  readonly fields: HealthcareUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HealthcareUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HealthcareUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transportRequests<T extends HealthcareUser$transportRequestsArgs<ExtArgs> = {}>(args?: Subset<T, HealthcareUser$transportRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HealthcareUser model
   */ 
  interface HealthcareUserFieldRefs {
    readonly id: FieldRef<"HealthcareUser", 'String'>
    readonly email: FieldRef<"HealthcareUser", 'String'>
    readonly password: FieldRef<"HealthcareUser", 'String'>
    readonly name: FieldRef<"HealthcareUser", 'String'>
    readonly phone: FieldRef<"HealthcareUser", 'String'>
    readonly facilityName: FieldRef<"HealthcareUser", 'String'>
    readonly facilityType: FieldRef<"HealthcareUser", 'String'>
    readonly emailNotifications: FieldRef<"HealthcareUser", 'Boolean'>
    readonly smsNotifications: FieldRef<"HealthcareUser", 'Boolean'>
    readonly isActive: FieldRef<"HealthcareUser", 'Boolean'>
    readonly userType: FieldRef<"HealthcareUser", 'String'>
    readonly createdAt: FieldRef<"HealthcareUser", 'DateTime'>
    readonly updatedAt: FieldRef<"HealthcareUser", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HealthcareUser findUnique
   */
  export type HealthcareUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * Filter, which HealthcareUser to fetch.
     */
    where: HealthcareUserWhereUniqueInput
  }

  /**
   * HealthcareUser findUniqueOrThrow
   */
  export type HealthcareUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * Filter, which HealthcareUser to fetch.
     */
    where: HealthcareUserWhereUniqueInput
  }

  /**
   * HealthcareUser findFirst
   */
  export type HealthcareUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * Filter, which HealthcareUser to fetch.
     */
    where?: HealthcareUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthcareUsers to fetch.
     */
    orderBy?: HealthcareUserOrderByWithRelationInput | HealthcareUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HealthcareUsers.
     */
    cursor?: HealthcareUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthcareUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthcareUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HealthcareUsers.
     */
    distinct?: HealthcareUserScalarFieldEnum | HealthcareUserScalarFieldEnum[]
  }

  /**
   * HealthcareUser findFirstOrThrow
   */
  export type HealthcareUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * Filter, which HealthcareUser to fetch.
     */
    where?: HealthcareUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthcareUsers to fetch.
     */
    orderBy?: HealthcareUserOrderByWithRelationInput | HealthcareUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HealthcareUsers.
     */
    cursor?: HealthcareUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthcareUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthcareUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HealthcareUsers.
     */
    distinct?: HealthcareUserScalarFieldEnum | HealthcareUserScalarFieldEnum[]
  }

  /**
   * HealthcareUser findMany
   */
  export type HealthcareUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * Filter, which HealthcareUsers to fetch.
     */
    where?: HealthcareUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthcareUsers to fetch.
     */
    orderBy?: HealthcareUserOrderByWithRelationInput | HealthcareUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HealthcareUsers.
     */
    cursor?: HealthcareUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthcareUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthcareUsers.
     */
    skip?: number
    distinct?: HealthcareUserScalarFieldEnum | HealthcareUserScalarFieldEnum[]
  }

  /**
   * HealthcareUser create
   */
  export type HealthcareUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * The data needed to create a HealthcareUser.
     */
    data: XOR<HealthcareUserCreateInput, HealthcareUserUncheckedCreateInput>
  }

  /**
   * HealthcareUser createMany
   */
  export type HealthcareUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HealthcareUsers.
     */
    data: HealthcareUserCreateManyInput | HealthcareUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HealthcareUser createManyAndReturn
   */
  export type HealthcareUserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many HealthcareUsers.
     */
    data: HealthcareUserCreateManyInput | HealthcareUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HealthcareUser update
   */
  export type HealthcareUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * The data needed to update a HealthcareUser.
     */
    data: XOR<HealthcareUserUpdateInput, HealthcareUserUncheckedUpdateInput>
    /**
     * Choose, which HealthcareUser to update.
     */
    where: HealthcareUserWhereUniqueInput
  }

  /**
   * HealthcareUser updateMany
   */
  export type HealthcareUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HealthcareUsers.
     */
    data: XOR<HealthcareUserUpdateManyMutationInput, HealthcareUserUncheckedUpdateManyInput>
    /**
     * Filter which HealthcareUsers to update
     */
    where?: HealthcareUserWhereInput
  }

  /**
   * HealthcareUser upsert
   */
  export type HealthcareUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * The filter to search for the HealthcareUser to update in case it exists.
     */
    where: HealthcareUserWhereUniqueInput
    /**
     * In case the HealthcareUser found by the `where` argument doesn't exist, create a new HealthcareUser with this data.
     */
    create: XOR<HealthcareUserCreateInput, HealthcareUserUncheckedCreateInput>
    /**
     * In case the HealthcareUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HealthcareUserUpdateInput, HealthcareUserUncheckedUpdateInput>
  }

  /**
   * HealthcareUser delete
   */
  export type HealthcareUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    /**
     * Filter which HealthcareUser to delete.
     */
    where: HealthcareUserWhereUniqueInput
  }

  /**
   * HealthcareUser deleteMany
   */
  export type HealthcareUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HealthcareUsers to delete
     */
    where?: HealthcareUserWhereInput
  }

  /**
   * HealthcareUser.transportRequests
   */
  export type HealthcareUser$transportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    where?: TransportRequestWhereInput
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    cursor?: TransportRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * HealthcareUser without action
   */
  export type HealthcareUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
  }


  /**
   * Model Facility
   */

  export type AggregateFacility = {
    _count: FacilityCountAggregateOutputType | null
    _min: FacilityMinAggregateOutputType | null
    _max: FacilityMaxAggregateOutputType | null
  }

  export type FacilityMinAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    phone: string | null
    email: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FacilityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    phone: string | null
    email: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FacilityCountAggregateOutputType = {
    id: number
    name: number
    type: number
    address: number
    city: number
    state: number
    zipCode: number
    phone: number
    email: number
    coordinates: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FacilityMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    phone?: true
    email?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FacilityMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    phone?: true
    email?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FacilityCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    phone?: true
    email?: true
    coordinates?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FacilityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Facility to aggregate.
     */
    where?: FacilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facilities to fetch.
     */
    orderBy?: FacilityOrderByWithRelationInput | FacilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FacilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Facilities
    **/
    _count?: true | FacilityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FacilityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FacilityMaxAggregateInputType
  }

  export type GetFacilityAggregateType<T extends FacilityAggregateArgs> = {
        [P in keyof T & keyof AggregateFacility]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFacility[P]>
      : GetScalarType<T[P], AggregateFacility[P]>
  }




  export type FacilityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacilityWhereInput
    orderBy?: FacilityOrderByWithAggregationInput | FacilityOrderByWithAggregationInput[]
    by: FacilityScalarFieldEnum[] | FacilityScalarFieldEnum
    having?: FacilityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FacilityCountAggregateInputType | true
    _min?: FacilityMinAggregateInputType
    _max?: FacilityMaxAggregateInputType
  }

  export type FacilityGroupByOutputType = {
    id: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone: string | null
    email: string | null
    coordinates: JsonValue | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: FacilityCountAggregateOutputType | null
    _min: FacilityMinAggregateOutputType | null
    _max: FacilityMaxAggregateOutputType | null
  }

  type GetFacilityGroupByPayload<T extends FacilityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FacilityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FacilityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FacilityGroupByOutputType[P]>
            : GetScalarType<T[P], FacilityGroupByOutputType[P]>
        }
      >
    >


  export type FacilitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    phone?: boolean
    email?: boolean
    coordinates?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    originTransportRequests?: boolean | Facility$originTransportRequestsArgs<ExtArgs>
    destinationTransportRequests?: boolean | Facility$destinationTransportRequestsArgs<ExtArgs>
    _count?: boolean | FacilityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["facility"]>

  export type FacilitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    phone?: boolean
    email?: boolean
    coordinates?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["facility"]>

  export type FacilitySelectScalar = {
    id?: boolean
    name?: boolean
    type?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    phone?: boolean
    email?: boolean
    coordinates?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FacilityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    originTransportRequests?: boolean | Facility$originTransportRequestsArgs<ExtArgs>
    destinationTransportRequests?: boolean | Facility$destinationTransportRequestsArgs<ExtArgs>
    _count?: boolean | FacilityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FacilityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $FacilityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Facility"
    objects: {
      originTransportRequests: Prisma.$TransportRequestPayload<ExtArgs>[]
      destinationTransportRequests: Prisma.$TransportRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      type: string
      address: string
      city: string
      state: string
      zipCode: string
      phone: string | null
      email: string | null
      coordinates: Prisma.JsonValue | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["facility"]>
    composites: {}
  }

  type FacilityGetPayload<S extends boolean | null | undefined | FacilityDefaultArgs> = $Result.GetResult<Prisma.$FacilityPayload, S>

  type FacilityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FacilityFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FacilityCountAggregateInputType | true
    }

  export interface FacilityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Facility'], meta: { name: 'Facility' } }
    /**
     * Find zero or one Facility that matches the filter.
     * @param {FacilityFindUniqueArgs} args - Arguments to find a Facility
     * @example
     * // Get one Facility
     * const facility = await prisma.facility.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FacilityFindUniqueArgs>(args: SelectSubset<T, FacilityFindUniqueArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Facility that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FacilityFindUniqueOrThrowArgs} args - Arguments to find a Facility
     * @example
     * // Get one Facility
     * const facility = await prisma.facility.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FacilityFindUniqueOrThrowArgs>(args: SelectSubset<T, FacilityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Facility that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityFindFirstArgs} args - Arguments to find a Facility
     * @example
     * // Get one Facility
     * const facility = await prisma.facility.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FacilityFindFirstArgs>(args?: SelectSubset<T, FacilityFindFirstArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Facility that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityFindFirstOrThrowArgs} args - Arguments to find a Facility
     * @example
     * // Get one Facility
     * const facility = await prisma.facility.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FacilityFindFirstOrThrowArgs>(args?: SelectSubset<T, FacilityFindFirstOrThrowArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Facilities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Facilities
     * const facilities = await prisma.facility.findMany()
     * 
     * // Get first 10 Facilities
     * const facilities = await prisma.facility.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const facilityWithIdOnly = await prisma.facility.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FacilityFindManyArgs>(args?: SelectSubset<T, FacilityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Facility.
     * @param {FacilityCreateArgs} args - Arguments to create a Facility.
     * @example
     * // Create one Facility
     * const Facility = await prisma.facility.create({
     *   data: {
     *     // ... data to create a Facility
     *   }
     * })
     * 
     */
    create<T extends FacilityCreateArgs>(args: SelectSubset<T, FacilityCreateArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Facilities.
     * @param {FacilityCreateManyArgs} args - Arguments to create many Facilities.
     * @example
     * // Create many Facilities
     * const facility = await prisma.facility.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FacilityCreateManyArgs>(args?: SelectSubset<T, FacilityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Facilities and returns the data saved in the database.
     * @param {FacilityCreateManyAndReturnArgs} args - Arguments to create many Facilities.
     * @example
     * // Create many Facilities
     * const facility = await prisma.facility.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Facilities and only return the `id`
     * const facilityWithIdOnly = await prisma.facility.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FacilityCreateManyAndReturnArgs>(args?: SelectSubset<T, FacilityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Facility.
     * @param {FacilityDeleteArgs} args - Arguments to delete one Facility.
     * @example
     * // Delete one Facility
     * const Facility = await prisma.facility.delete({
     *   where: {
     *     // ... filter to delete one Facility
     *   }
     * })
     * 
     */
    delete<T extends FacilityDeleteArgs>(args: SelectSubset<T, FacilityDeleteArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Facility.
     * @param {FacilityUpdateArgs} args - Arguments to update one Facility.
     * @example
     * // Update one Facility
     * const facility = await prisma.facility.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FacilityUpdateArgs>(args: SelectSubset<T, FacilityUpdateArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Facilities.
     * @param {FacilityDeleteManyArgs} args - Arguments to filter Facilities to delete.
     * @example
     * // Delete a few Facilities
     * const { count } = await prisma.facility.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FacilityDeleteManyArgs>(args?: SelectSubset<T, FacilityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Facilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Facilities
     * const facility = await prisma.facility.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FacilityUpdateManyArgs>(args: SelectSubset<T, FacilityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Facility.
     * @param {FacilityUpsertArgs} args - Arguments to update or create a Facility.
     * @example
     * // Update or create a Facility
     * const facility = await prisma.facility.upsert({
     *   create: {
     *     // ... data to create a Facility
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Facility we want to update
     *   }
     * })
     */
    upsert<T extends FacilityUpsertArgs>(args: SelectSubset<T, FacilityUpsertArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Facilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCountArgs} args - Arguments to filter Facilities to count.
     * @example
     * // Count the number of Facilities
     * const count = await prisma.facility.count({
     *   where: {
     *     // ... the filter for the Facilities we want to count
     *   }
     * })
    **/
    count<T extends FacilityCountArgs>(
      args?: Subset<T, FacilityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FacilityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Facility.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FacilityAggregateArgs>(args: Subset<T, FacilityAggregateArgs>): Prisma.PrismaPromise<GetFacilityAggregateType<T>>

    /**
     * Group by Facility.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FacilityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FacilityGroupByArgs['orderBy'] }
        : { orderBy?: FacilityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FacilityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFacilityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Facility model
   */
  readonly fields: FacilityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Facility.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FacilityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    originTransportRequests<T extends Facility$originTransportRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Facility$originTransportRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findMany"> | Null>
    destinationTransportRequests<T extends Facility$destinationTransportRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Facility$destinationTransportRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Facility model
   */ 
  interface FacilityFieldRefs {
    readonly id: FieldRef<"Facility", 'String'>
    readonly name: FieldRef<"Facility", 'String'>
    readonly type: FieldRef<"Facility", 'String'>
    readonly address: FieldRef<"Facility", 'String'>
    readonly city: FieldRef<"Facility", 'String'>
    readonly state: FieldRef<"Facility", 'String'>
    readonly zipCode: FieldRef<"Facility", 'String'>
    readonly phone: FieldRef<"Facility", 'String'>
    readonly email: FieldRef<"Facility", 'String'>
    readonly coordinates: FieldRef<"Facility", 'Json'>
    readonly isActive: FieldRef<"Facility", 'Boolean'>
    readonly createdAt: FieldRef<"Facility", 'DateTime'>
    readonly updatedAt: FieldRef<"Facility", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Facility findUnique
   */
  export type FacilityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * Filter, which Facility to fetch.
     */
    where: FacilityWhereUniqueInput
  }

  /**
   * Facility findUniqueOrThrow
   */
  export type FacilityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * Filter, which Facility to fetch.
     */
    where: FacilityWhereUniqueInput
  }

  /**
   * Facility findFirst
   */
  export type FacilityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * Filter, which Facility to fetch.
     */
    where?: FacilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facilities to fetch.
     */
    orderBy?: FacilityOrderByWithRelationInput | FacilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Facilities.
     */
    cursor?: FacilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Facilities.
     */
    distinct?: FacilityScalarFieldEnum | FacilityScalarFieldEnum[]
  }

  /**
   * Facility findFirstOrThrow
   */
  export type FacilityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * Filter, which Facility to fetch.
     */
    where?: FacilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facilities to fetch.
     */
    orderBy?: FacilityOrderByWithRelationInput | FacilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Facilities.
     */
    cursor?: FacilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Facilities.
     */
    distinct?: FacilityScalarFieldEnum | FacilityScalarFieldEnum[]
  }

  /**
   * Facility findMany
   */
  export type FacilityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * Filter, which Facilities to fetch.
     */
    where?: FacilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facilities to fetch.
     */
    orderBy?: FacilityOrderByWithRelationInput | FacilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Facilities.
     */
    cursor?: FacilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facilities.
     */
    skip?: number
    distinct?: FacilityScalarFieldEnum | FacilityScalarFieldEnum[]
  }

  /**
   * Facility create
   */
  export type FacilityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * The data needed to create a Facility.
     */
    data: XOR<FacilityCreateInput, FacilityUncheckedCreateInput>
  }

  /**
   * Facility createMany
   */
  export type FacilityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Facilities.
     */
    data: FacilityCreateManyInput | FacilityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Facility createManyAndReturn
   */
  export type FacilityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Facilities.
     */
    data: FacilityCreateManyInput | FacilityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Facility update
   */
  export type FacilityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * The data needed to update a Facility.
     */
    data: XOR<FacilityUpdateInput, FacilityUncheckedUpdateInput>
    /**
     * Choose, which Facility to update.
     */
    where: FacilityWhereUniqueInput
  }

  /**
   * Facility updateMany
   */
  export type FacilityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Facilities.
     */
    data: XOR<FacilityUpdateManyMutationInput, FacilityUncheckedUpdateManyInput>
    /**
     * Filter which Facilities to update
     */
    where?: FacilityWhereInput
  }

  /**
   * Facility upsert
   */
  export type FacilityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * The filter to search for the Facility to update in case it exists.
     */
    where: FacilityWhereUniqueInput
    /**
     * In case the Facility found by the `where` argument doesn't exist, create a new Facility with this data.
     */
    create: XOR<FacilityCreateInput, FacilityUncheckedCreateInput>
    /**
     * In case the Facility was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FacilityUpdateInput, FacilityUncheckedUpdateInput>
  }

  /**
   * Facility delete
   */
  export type FacilityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    /**
     * Filter which Facility to delete.
     */
    where: FacilityWhereUniqueInput
  }

  /**
   * Facility deleteMany
   */
  export type FacilityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Facilities to delete
     */
    where?: FacilityWhereInput
  }

  /**
   * Facility.originTransportRequests
   */
  export type Facility$originTransportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    where?: TransportRequestWhereInput
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    cursor?: TransportRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * Facility.destinationTransportRequests
   */
  export type Facility$destinationTransportRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    where?: TransportRequestWhereInput
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    cursor?: TransportRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * Facility without action
   */
  export type FacilityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
  }


  /**
   * Model TransportRequest
   */

  export type AggregateTransportRequest = {
    _count: TransportRequestCountAggregateOutputType | null
    _avg: TransportRequestAvgAggregateOutputType | null
    _sum: TransportRequestSumAggregateOutputType | null
    _min: TransportRequestMinAggregateOutputType | null
    _max: TransportRequestMaxAggregateOutputType | null
  }

  export type TransportRequestAvgAggregateOutputType = {
    notificationRadius: number | null
  }

  export type TransportRequestSumAggregateOutputType = {
    notificationRadius: number | null
  }

  export type TransportRequestMinAggregateOutputType = {
    id: string | null
    tripNumber: string | null
    patientId: string | null
    patientWeight: string | null
    specialNeeds: string | null
    originFacilityId: string | null
    destinationFacilityId: string | null
    fromLocation: string | null
    toLocation: string | null
    scheduledTime: Date | null
    transportLevel: string | null
    urgencyLevel: string | null
    priority: string | null
    status: string | null
    specialRequirements: string | null
    diagnosis: string | null
    mobilityLevel: string | null
    oxygenRequired: boolean | null
    monitoringRequired: boolean | null
    generateQRCode: boolean | null
    qrCodeData: string | null
    notificationRadius: number | null
    transferRequestTime: Date | null
    transferAcceptedTime: Date | null
    emsArrivalTime: Date | null
    emsDepartureTime: Date | null
    requestTimestamp: Date | null
    acceptedTimestamp: Date | null
    pickupTimestamp: Date | null
    completionTimestamp: Date | null
    assignedAgencyId: string | null
    assignedUnitId: string | null
    createdById: string | null
    healthcareCreatedById: string | null
    readyStart: Date | null
    readyEnd: Date | null
    isolation: boolean | null
    bariatric: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransportRequestMaxAggregateOutputType = {
    id: string | null
    tripNumber: string | null
    patientId: string | null
    patientWeight: string | null
    specialNeeds: string | null
    originFacilityId: string | null
    destinationFacilityId: string | null
    fromLocation: string | null
    toLocation: string | null
    scheduledTime: Date | null
    transportLevel: string | null
    urgencyLevel: string | null
    priority: string | null
    status: string | null
    specialRequirements: string | null
    diagnosis: string | null
    mobilityLevel: string | null
    oxygenRequired: boolean | null
    monitoringRequired: boolean | null
    generateQRCode: boolean | null
    qrCodeData: string | null
    notificationRadius: number | null
    transferRequestTime: Date | null
    transferAcceptedTime: Date | null
    emsArrivalTime: Date | null
    emsDepartureTime: Date | null
    requestTimestamp: Date | null
    acceptedTimestamp: Date | null
    pickupTimestamp: Date | null
    completionTimestamp: Date | null
    assignedAgencyId: string | null
    assignedUnitId: string | null
    createdById: string | null
    healthcareCreatedById: string | null
    readyStart: Date | null
    readyEnd: Date | null
    isolation: boolean | null
    bariatric: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransportRequestCountAggregateOutputType = {
    id: number
    tripNumber: number
    patientId: number
    patientWeight: number
    specialNeeds: number
    originFacilityId: number
    destinationFacilityId: number
    fromLocation: number
    toLocation: number
    scheduledTime: number
    transportLevel: number
    urgencyLevel: number
    priority: number
    status: number
    specialRequirements: number
    diagnosis: number
    mobilityLevel: number
    oxygenRequired: number
    monitoringRequired: number
    generateQRCode: number
    qrCodeData: number
    selectedAgencies: number
    notificationRadius: number
    transferRequestTime: number
    transferAcceptedTime: number
    emsArrivalTime: number
    emsDepartureTime: number
    requestTimestamp: number
    acceptedTimestamp: number
    pickupTimestamp: number
    completionTimestamp: number
    assignedAgencyId: number
    assignedUnitId: number
    createdById: number
    healthcareCreatedById: number
    readyStart: number
    readyEnd: number
    isolation: number
    bariatric: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TransportRequestAvgAggregateInputType = {
    notificationRadius?: true
  }

  export type TransportRequestSumAggregateInputType = {
    notificationRadius?: true
  }

  export type TransportRequestMinAggregateInputType = {
    id?: true
    tripNumber?: true
    patientId?: true
    patientWeight?: true
    specialNeeds?: true
    originFacilityId?: true
    destinationFacilityId?: true
    fromLocation?: true
    toLocation?: true
    scheduledTime?: true
    transportLevel?: true
    urgencyLevel?: true
    priority?: true
    status?: true
    specialRequirements?: true
    diagnosis?: true
    mobilityLevel?: true
    oxygenRequired?: true
    monitoringRequired?: true
    generateQRCode?: true
    qrCodeData?: true
    notificationRadius?: true
    transferRequestTime?: true
    transferAcceptedTime?: true
    emsArrivalTime?: true
    emsDepartureTime?: true
    requestTimestamp?: true
    acceptedTimestamp?: true
    pickupTimestamp?: true
    completionTimestamp?: true
    assignedAgencyId?: true
    assignedUnitId?: true
    createdById?: true
    healthcareCreatedById?: true
    readyStart?: true
    readyEnd?: true
    isolation?: true
    bariatric?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransportRequestMaxAggregateInputType = {
    id?: true
    tripNumber?: true
    patientId?: true
    patientWeight?: true
    specialNeeds?: true
    originFacilityId?: true
    destinationFacilityId?: true
    fromLocation?: true
    toLocation?: true
    scheduledTime?: true
    transportLevel?: true
    urgencyLevel?: true
    priority?: true
    status?: true
    specialRequirements?: true
    diagnosis?: true
    mobilityLevel?: true
    oxygenRequired?: true
    monitoringRequired?: true
    generateQRCode?: true
    qrCodeData?: true
    notificationRadius?: true
    transferRequestTime?: true
    transferAcceptedTime?: true
    emsArrivalTime?: true
    emsDepartureTime?: true
    requestTimestamp?: true
    acceptedTimestamp?: true
    pickupTimestamp?: true
    completionTimestamp?: true
    assignedAgencyId?: true
    assignedUnitId?: true
    createdById?: true
    healthcareCreatedById?: true
    readyStart?: true
    readyEnd?: true
    isolation?: true
    bariatric?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransportRequestCountAggregateInputType = {
    id?: true
    tripNumber?: true
    patientId?: true
    patientWeight?: true
    specialNeeds?: true
    originFacilityId?: true
    destinationFacilityId?: true
    fromLocation?: true
    toLocation?: true
    scheduledTime?: true
    transportLevel?: true
    urgencyLevel?: true
    priority?: true
    status?: true
    specialRequirements?: true
    diagnosis?: true
    mobilityLevel?: true
    oxygenRequired?: true
    monitoringRequired?: true
    generateQRCode?: true
    qrCodeData?: true
    selectedAgencies?: true
    notificationRadius?: true
    transferRequestTime?: true
    transferAcceptedTime?: true
    emsArrivalTime?: true
    emsDepartureTime?: true
    requestTimestamp?: true
    acceptedTimestamp?: true
    pickupTimestamp?: true
    completionTimestamp?: true
    assignedAgencyId?: true
    assignedUnitId?: true
    createdById?: true
    healthcareCreatedById?: true
    readyStart?: true
    readyEnd?: true
    isolation?: true
    bariatric?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TransportRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransportRequest to aggregate.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransportRequests
    **/
    _count?: true | TransportRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransportRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransportRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransportRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransportRequestMaxAggregateInputType
  }

  export type GetTransportRequestAggregateType<T extends TransportRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateTransportRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransportRequest[P]>
      : GetScalarType<T[P], AggregateTransportRequest[P]>
  }




  export type TransportRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransportRequestWhereInput
    orderBy?: TransportRequestOrderByWithAggregationInput | TransportRequestOrderByWithAggregationInput[]
    by: TransportRequestScalarFieldEnum[] | TransportRequestScalarFieldEnum
    having?: TransportRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransportRequestCountAggregateInputType | true
    _avg?: TransportRequestAvgAggregateInputType
    _sum?: TransportRequestSumAggregateInputType
    _min?: TransportRequestMinAggregateInputType
    _max?: TransportRequestMaxAggregateInputType
  }

  export type TransportRequestGroupByOutputType = {
    id: string
    tripNumber: string | null
    patientId: string
    patientWeight: string | null
    specialNeeds: string | null
    originFacilityId: string | null
    destinationFacilityId: string | null
    fromLocation: string | null
    toLocation: string | null
    scheduledTime: Date | null
    transportLevel: string
    urgencyLevel: string | null
    priority: string
    status: string
    specialRequirements: string | null
    diagnosis: string | null
    mobilityLevel: string | null
    oxygenRequired: boolean
    monitoringRequired: boolean
    generateQRCode: boolean
    qrCodeData: string | null
    selectedAgencies: string[]
    notificationRadius: number | null
    transferRequestTime: Date | null
    transferAcceptedTime: Date | null
    emsArrivalTime: Date | null
    emsDepartureTime: Date | null
    requestTimestamp: Date
    acceptedTimestamp: Date | null
    pickupTimestamp: Date | null
    completionTimestamp: Date | null
    assignedAgencyId: string | null
    assignedUnitId: string | null
    createdById: string | null
    healthcareCreatedById: string | null
    readyStart: Date | null
    readyEnd: Date | null
    isolation: boolean
    bariatric: boolean
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: TransportRequestCountAggregateOutputType | null
    _avg: TransportRequestAvgAggregateOutputType | null
    _sum: TransportRequestSumAggregateOutputType | null
    _min: TransportRequestMinAggregateOutputType | null
    _max: TransportRequestMaxAggregateOutputType | null
  }

  type GetTransportRequestGroupByPayload<T extends TransportRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransportRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransportRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransportRequestGroupByOutputType[P]>
            : GetScalarType<T[P], TransportRequestGroupByOutputType[P]>
        }
      >
    >


  export type TransportRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tripNumber?: boolean
    patientId?: boolean
    patientWeight?: boolean
    specialNeeds?: boolean
    originFacilityId?: boolean
    destinationFacilityId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    scheduledTime?: boolean
    transportLevel?: boolean
    urgencyLevel?: boolean
    priority?: boolean
    status?: boolean
    specialRequirements?: boolean
    diagnosis?: boolean
    mobilityLevel?: boolean
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: boolean
    selectedAgencies?: boolean
    notificationRadius?: boolean
    transferRequestTime?: boolean
    transferAcceptedTime?: boolean
    emsArrivalTime?: boolean
    emsDepartureTime?: boolean
    requestTimestamp?: boolean
    acceptedTimestamp?: boolean
    pickupTimestamp?: boolean
    completionTimestamp?: boolean
    assignedAgencyId?: boolean
    assignedUnitId?: boolean
    createdById?: boolean
    healthcareCreatedById?: boolean
    readyStart?: boolean
    readyEnd?: boolean
    isolation?: boolean
    bariatric?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    originFacility?: boolean | TransportRequest$originFacilityArgs<ExtArgs>
    destinationFacility?: boolean | TransportRequest$destinationFacilityArgs<ExtArgs>
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
    createdByHealthcare?: boolean | TransportRequest$createdByHealthcareArgs<ExtArgs>
  }, ExtArgs["result"]["transportRequest"]>

  export type TransportRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tripNumber?: boolean
    patientId?: boolean
    patientWeight?: boolean
    specialNeeds?: boolean
    originFacilityId?: boolean
    destinationFacilityId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    scheduledTime?: boolean
    transportLevel?: boolean
    urgencyLevel?: boolean
    priority?: boolean
    status?: boolean
    specialRequirements?: boolean
    diagnosis?: boolean
    mobilityLevel?: boolean
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: boolean
    selectedAgencies?: boolean
    notificationRadius?: boolean
    transferRequestTime?: boolean
    transferAcceptedTime?: boolean
    emsArrivalTime?: boolean
    emsDepartureTime?: boolean
    requestTimestamp?: boolean
    acceptedTimestamp?: boolean
    pickupTimestamp?: boolean
    completionTimestamp?: boolean
    assignedAgencyId?: boolean
    assignedUnitId?: boolean
    createdById?: boolean
    healthcareCreatedById?: boolean
    readyStart?: boolean
    readyEnd?: boolean
    isolation?: boolean
    bariatric?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    originFacility?: boolean | TransportRequest$originFacilityArgs<ExtArgs>
    destinationFacility?: boolean | TransportRequest$destinationFacilityArgs<ExtArgs>
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
    createdByHealthcare?: boolean | TransportRequest$createdByHealthcareArgs<ExtArgs>
  }, ExtArgs["result"]["transportRequest"]>

  export type TransportRequestSelectScalar = {
    id?: boolean
    tripNumber?: boolean
    patientId?: boolean
    patientWeight?: boolean
    specialNeeds?: boolean
    originFacilityId?: boolean
    destinationFacilityId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    scheduledTime?: boolean
    transportLevel?: boolean
    urgencyLevel?: boolean
    priority?: boolean
    status?: boolean
    specialRequirements?: boolean
    diagnosis?: boolean
    mobilityLevel?: boolean
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: boolean
    selectedAgencies?: boolean
    notificationRadius?: boolean
    transferRequestTime?: boolean
    transferAcceptedTime?: boolean
    emsArrivalTime?: boolean
    emsDepartureTime?: boolean
    requestTimestamp?: boolean
    acceptedTimestamp?: boolean
    pickupTimestamp?: boolean
    completionTimestamp?: boolean
    assignedAgencyId?: boolean
    assignedUnitId?: boolean
    createdById?: boolean
    healthcareCreatedById?: boolean
    readyStart?: boolean
    readyEnd?: boolean
    isolation?: boolean
    bariatric?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TransportRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    originFacility?: boolean | TransportRequest$originFacilityArgs<ExtArgs>
    destinationFacility?: boolean | TransportRequest$destinationFacilityArgs<ExtArgs>
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
    createdByHealthcare?: boolean | TransportRequest$createdByHealthcareArgs<ExtArgs>
  }
  export type TransportRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    originFacility?: boolean | TransportRequest$originFacilityArgs<ExtArgs>
    destinationFacility?: boolean | TransportRequest$destinationFacilityArgs<ExtArgs>
    createdBy?: boolean | TransportRequest$createdByArgs<ExtArgs>
    createdByHealthcare?: boolean | TransportRequest$createdByHealthcareArgs<ExtArgs>
  }

  export type $TransportRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransportRequest"
    objects: {
      originFacility: Prisma.$FacilityPayload<ExtArgs> | null
      destinationFacility: Prisma.$FacilityPayload<ExtArgs> | null
      createdBy: Prisma.$HospitalUserPayload<ExtArgs> | null
      createdByHealthcare: Prisma.$HealthcareUserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tripNumber: string | null
      patientId: string
      patientWeight: string | null
      specialNeeds: string | null
      originFacilityId: string | null
      destinationFacilityId: string | null
      fromLocation: string | null
      toLocation: string | null
      scheduledTime: Date | null
      transportLevel: string
      urgencyLevel: string | null
      priority: string
      status: string
      specialRequirements: string | null
      diagnosis: string | null
      mobilityLevel: string | null
      oxygenRequired: boolean
      monitoringRequired: boolean
      generateQRCode: boolean
      qrCodeData: string | null
      selectedAgencies: string[]
      notificationRadius: number | null
      transferRequestTime: Date | null
      transferAcceptedTime: Date | null
      emsArrivalTime: Date | null
      emsDepartureTime: Date | null
      requestTimestamp: Date
      acceptedTimestamp: Date | null
      pickupTimestamp: Date | null
      completionTimestamp: Date | null
      assignedAgencyId: string | null
      assignedUnitId: string | null
      createdById: string | null
      healthcareCreatedById: string | null
      readyStart: Date | null
      readyEnd: Date | null
      isolation: boolean
      bariatric: boolean
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["transportRequest"]>
    composites: {}
  }

  type TransportRequestGetPayload<S extends boolean | null | undefined | TransportRequestDefaultArgs> = $Result.GetResult<Prisma.$TransportRequestPayload, S>

  type TransportRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TransportRequestFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TransportRequestCountAggregateInputType | true
    }

  export interface TransportRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransportRequest'], meta: { name: 'TransportRequest' } }
    /**
     * Find zero or one TransportRequest that matches the filter.
     * @param {TransportRequestFindUniqueArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransportRequestFindUniqueArgs>(args: SelectSubset<T, TransportRequestFindUniqueArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TransportRequest that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TransportRequestFindUniqueOrThrowArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransportRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, TransportRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TransportRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestFindFirstArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransportRequestFindFirstArgs>(args?: SelectSubset<T, TransportRequestFindFirstArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TransportRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestFindFirstOrThrowArgs} args - Arguments to find a TransportRequest
     * @example
     * // Get one TransportRequest
     * const transportRequest = await prisma.transportRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransportRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, TransportRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TransportRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransportRequests
     * const transportRequests = await prisma.transportRequest.findMany()
     * 
     * // Get first 10 TransportRequests
     * const transportRequests = await prisma.transportRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transportRequestWithIdOnly = await prisma.transportRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransportRequestFindManyArgs>(args?: SelectSubset<T, TransportRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TransportRequest.
     * @param {TransportRequestCreateArgs} args - Arguments to create a TransportRequest.
     * @example
     * // Create one TransportRequest
     * const TransportRequest = await prisma.transportRequest.create({
     *   data: {
     *     // ... data to create a TransportRequest
     *   }
     * })
     * 
     */
    create<T extends TransportRequestCreateArgs>(args: SelectSubset<T, TransportRequestCreateArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TransportRequests.
     * @param {TransportRequestCreateManyArgs} args - Arguments to create many TransportRequests.
     * @example
     * // Create many TransportRequests
     * const transportRequest = await prisma.transportRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransportRequestCreateManyArgs>(args?: SelectSubset<T, TransportRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TransportRequests and returns the data saved in the database.
     * @param {TransportRequestCreateManyAndReturnArgs} args - Arguments to create many TransportRequests.
     * @example
     * // Create many TransportRequests
     * const transportRequest = await prisma.transportRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TransportRequests and only return the `id`
     * const transportRequestWithIdOnly = await prisma.transportRequest.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransportRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, TransportRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TransportRequest.
     * @param {TransportRequestDeleteArgs} args - Arguments to delete one TransportRequest.
     * @example
     * // Delete one TransportRequest
     * const TransportRequest = await prisma.transportRequest.delete({
     *   where: {
     *     // ... filter to delete one TransportRequest
     *   }
     * })
     * 
     */
    delete<T extends TransportRequestDeleteArgs>(args: SelectSubset<T, TransportRequestDeleteArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TransportRequest.
     * @param {TransportRequestUpdateArgs} args - Arguments to update one TransportRequest.
     * @example
     * // Update one TransportRequest
     * const transportRequest = await prisma.transportRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransportRequestUpdateArgs>(args: SelectSubset<T, TransportRequestUpdateArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TransportRequests.
     * @param {TransportRequestDeleteManyArgs} args - Arguments to filter TransportRequests to delete.
     * @example
     * // Delete a few TransportRequests
     * const { count } = await prisma.transportRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransportRequestDeleteManyArgs>(args?: SelectSubset<T, TransportRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransportRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransportRequests
     * const transportRequest = await prisma.transportRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransportRequestUpdateManyArgs>(args: SelectSubset<T, TransportRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TransportRequest.
     * @param {TransportRequestUpsertArgs} args - Arguments to update or create a TransportRequest.
     * @example
     * // Update or create a TransportRequest
     * const transportRequest = await prisma.transportRequest.upsert({
     *   create: {
     *     // ... data to create a TransportRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransportRequest we want to update
     *   }
     * })
     */
    upsert<T extends TransportRequestUpsertArgs>(args: SelectSubset<T, TransportRequestUpsertArgs<ExtArgs>>): Prisma__TransportRequestClient<$Result.GetResult<Prisma.$TransportRequestPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TransportRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestCountArgs} args - Arguments to filter TransportRequests to count.
     * @example
     * // Count the number of TransportRequests
     * const count = await prisma.transportRequest.count({
     *   where: {
     *     // ... the filter for the TransportRequests we want to count
     *   }
     * })
    **/
    count<T extends TransportRequestCountArgs>(
      args?: Subset<T, TransportRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransportRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransportRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransportRequestAggregateArgs>(args: Subset<T, TransportRequestAggregateArgs>): Prisma.PrismaPromise<GetTransportRequestAggregateType<T>>

    /**
     * Group by TransportRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransportRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransportRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransportRequestGroupByArgs['orderBy'] }
        : { orderBy?: TransportRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransportRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransportRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransportRequest model
   */
  readonly fields: TransportRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransportRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransportRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    originFacility<T extends TransportRequest$originFacilityArgs<ExtArgs> = {}>(args?: Subset<T, TransportRequest$originFacilityArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    destinationFacility<T extends TransportRequest$destinationFacilityArgs<ExtArgs> = {}>(args?: Subset<T, TransportRequest$destinationFacilityArgs<ExtArgs>>): Prisma__FacilityClient<$Result.GetResult<Prisma.$FacilityPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    createdBy<T extends TransportRequest$createdByArgs<ExtArgs> = {}>(args?: Subset<T, TransportRequest$createdByArgs<ExtArgs>>): Prisma__HospitalUserClient<$Result.GetResult<Prisma.$HospitalUserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    createdByHealthcare<T extends TransportRequest$createdByHealthcareArgs<ExtArgs> = {}>(args?: Subset<T, TransportRequest$createdByHealthcareArgs<ExtArgs>>): Prisma__HealthcareUserClient<$Result.GetResult<Prisma.$HealthcareUserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransportRequest model
   */ 
  interface TransportRequestFieldRefs {
    readonly id: FieldRef<"TransportRequest", 'String'>
    readonly tripNumber: FieldRef<"TransportRequest", 'String'>
    readonly patientId: FieldRef<"TransportRequest", 'String'>
    readonly patientWeight: FieldRef<"TransportRequest", 'String'>
    readonly specialNeeds: FieldRef<"TransportRequest", 'String'>
    readonly originFacilityId: FieldRef<"TransportRequest", 'String'>
    readonly destinationFacilityId: FieldRef<"TransportRequest", 'String'>
    readonly fromLocation: FieldRef<"TransportRequest", 'String'>
    readonly toLocation: FieldRef<"TransportRequest", 'String'>
    readonly scheduledTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly transportLevel: FieldRef<"TransportRequest", 'String'>
    readonly urgencyLevel: FieldRef<"TransportRequest", 'String'>
    readonly priority: FieldRef<"TransportRequest", 'String'>
    readonly status: FieldRef<"TransportRequest", 'String'>
    readonly specialRequirements: FieldRef<"TransportRequest", 'String'>
    readonly diagnosis: FieldRef<"TransportRequest", 'String'>
    readonly mobilityLevel: FieldRef<"TransportRequest", 'String'>
    readonly oxygenRequired: FieldRef<"TransportRequest", 'Boolean'>
    readonly monitoringRequired: FieldRef<"TransportRequest", 'Boolean'>
    readonly generateQRCode: FieldRef<"TransportRequest", 'Boolean'>
    readonly qrCodeData: FieldRef<"TransportRequest", 'String'>
    readonly selectedAgencies: FieldRef<"TransportRequest", 'String[]'>
    readonly notificationRadius: FieldRef<"TransportRequest", 'Int'>
    readonly transferRequestTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly transferAcceptedTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly emsArrivalTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly emsDepartureTime: FieldRef<"TransportRequest", 'DateTime'>
    readonly requestTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly acceptedTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly pickupTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly completionTimestamp: FieldRef<"TransportRequest", 'DateTime'>
    readonly assignedAgencyId: FieldRef<"TransportRequest", 'String'>
    readonly assignedUnitId: FieldRef<"TransportRequest", 'String'>
    readonly createdById: FieldRef<"TransportRequest", 'String'>
    readonly healthcareCreatedById: FieldRef<"TransportRequest", 'String'>
    readonly readyStart: FieldRef<"TransportRequest", 'DateTime'>
    readonly readyEnd: FieldRef<"TransportRequest", 'DateTime'>
    readonly isolation: FieldRef<"TransportRequest", 'Boolean'>
    readonly bariatric: FieldRef<"TransportRequest", 'Boolean'>
    readonly notes: FieldRef<"TransportRequest", 'String'>
    readonly createdAt: FieldRef<"TransportRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"TransportRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TransportRequest findUnique
   */
  export type TransportRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest findUniqueOrThrow
   */
  export type TransportRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest findFirst
   */
  export type TransportRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransportRequests.
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransportRequests.
     */
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * TransportRequest findFirstOrThrow
   */
  export type TransportRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequest to fetch.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransportRequests.
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransportRequests.
     */
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * TransportRequest findMany
   */
  export type TransportRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter, which TransportRequests to fetch.
     */
    where?: TransportRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransportRequests to fetch.
     */
    orderBy?: TransportRequestOrderByWithRelationInput | TransportRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransportRequests.
     */
    cursor?: TransportRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransportRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransportRequests.
     */
    skip?: number
    distinct?: TransportRequestScalarFieldEnum | TransportRequestScalarFieldEnum[]
  }

  /**
   * TransportRequest create
   */
  export type TransportRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a TransportRequest.
     */
    data: XOR<TransportRequestCreateInput, TransportRequestUncheckedCreateInput>
  }

  /**
   * TransportRequest createMany
   */
  export type TransportRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransportRequests.
     */
    data: TransportRequestCreateManyInput | TransportRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransportRequest createManyAndReturn
   */
  export type TransportRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TransportRequests.
     */
    data: TransportRequestCreateManyInput | TransportRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TransportRequest update
   */
  export type TransportRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a TransportRequest.
     */
    data: XOR<TransportRequestUpdateInput, TransportRequestUncheckedUpdateInput>
    /**
     * Choose, which TransportRequest to update.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest updateMany
   */
  export type TransportRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransportRequests.
     */
    data: XOR<TransportRequestUpdateManyMutationInput, TransportRequestUncheckedUpdateManyInput>
    /**
     * Filter which TransportRequests to update
     */
    where?: TransportRequestWhereInput
  }

  /**
   * TransportRequest upsert
   */
  export type TransportRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the TransportRequest to update in case it exists.
     */
    where: TransportRequestWhereUniqueInput
    /**
     * In case the TransportRequest found by the `where` argument doesn't exist, create a new TransportRequest with this data.
     */
    create: XOR<TransportRequestCreateInput, TransportRequestUncheckedCreateInput>
    /**
     * In case the TransportRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransportRequestUpdateInput, TransportRequestUncheckedUpdateInput>
  }

  /**
   * TransportRequest delete
   */
  export type TransportRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
    /**
     * Filter which TransportRequest to delete.
     */
    where: TransportRequestWhereUniqueInput
  }

  /**
   * TransportRequest deleteMany
   */
  export type TransportRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransportRequests to delete
     */
    where?: TransportRequestWhereInput
  }

  /**
   * TransportRequest.originFacility
   */
  export type TransportRequest$originFacilityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    where?: FacilityWhereInput
  }

  /**
   * TransportRequest.destinationFacility
   */
  export type TransportRequest$destinationFacilityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Facility
     */
    select?: FacilitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityInclude<ExtArgs> | null
    where?: FacilityWhereInput
  }

  /**
   * TransportRequest.createdBy
   */
  export type TransportRequest$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HospitalUser
     */
    select?: HospitalUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HospitalUserInclude<ExtArgs> | null
    where?: HospitalUserWhereInput
  }

  /**
   * TransportRequest.createdByHealthcare
   */
  export type TransportRequest$createdByHealthcareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthcareUser
     */
    select?: HealthcareUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthcareUserInclude<ExtArgs> | null
    where?: HealthcareUserWhereInput
  }

  /**
   * TransportRequest without action
   */
  export type TransportRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransportRequest
     */
    select?: TransportRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransportRequestInclude<ExtArgs> | null
  }


  /**
   * Model DropdownOption
   */

  export type AggregateDropdownOption = {
    _count: DropdownOptionCountAggregateOutputType | null
    _min: DropdownOptionMinAggregateOutputType | null
    _max: DropdownOptionMaxAggregateOutputType | null
  }

  export type DropdownOptionMinAggregateOutputType = {
    id: string | null
    category: string | null
    value: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DropdownOptionMaxAggregateOutputType = {
    id: string | null
    category: string | null
    value: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DropdownOptionCountAggregateOutputType = {
    id: number
    category: number
    value: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DropdownOptionMinAggregateInputType = {
    id?: true
    category?: true
    value?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DropdownOptionMaxAggregateInputType = {
    id?: true
    category?: true
    value?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DropdownOptionCountAggregateInputType = {
    id?: true
    category?: true
    value?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DropdownOptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DropdownOption to aggregate.
     */
    where?: DropdownOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DropdownOptions to fetch.
     */
    orderBy?: DropdownOptionOrderByWithRelationInput | DropdownOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DropdownOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DropdownOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DropdownOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DropdownOptions
    **/
    _count?: true | DropdownOptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DropdownOptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DropdownOptionMaxAggregateInputType
  }

  export type GetDropdownOptionAggregateType<T extends DropdownOptionAggregateArgs> = {
        [P in keyof T & keyof AggregateDropdownOption]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDropdownOption[P]>
      : GetScalarType<T[P], AggregateDropdownOption[P]>
  }




  export type DropdownOptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DropdownOptionWhereInput
    orderBy?: DropdownOptionOrderByWithAggregationInput | DropdownOptionOrderByWithAggregationInput[]
    by: DropdownOptionScalarFieldEnum[] | DropdownOptionScalarFieldEnum
    having?: DropdownOptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DropdownOptionCountAggregateInputType | true
    _min?: DropdownOptionMinAggregateInputType
    _max?: DropdownOptionMaxAggregateInputType
  }

  export type DropdownOptionGroupByOutputType = {
    id: string
    category: string
    value: string
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: DropdownOptionCountAggregateOutputType | null
    _min: DropdownOptionMinAggregateOutputType | null
    _max: DropdownOptionMaxAggregateOutputType | null
  }

  type GetDropdownOptionGroupByPayload<T extends DropdownOptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DropdownOptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DropdownOptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DropdownOptionGroupByOutputType[P]>
            : GetScalarType<T[P], DropdownOptionGroupByOutputType[P]>
        }
      >
    >


  export type DropdownOptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category?: boolean
    value?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["dropdownOption"]>

  export type DropdownOptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category?: boolean
    value?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["dropdownOption"]>

  export type DropdownOptionSelectScalar = {
    id?: boolean
    category?: boolean
    value?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $DropdownOptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DropdownOption"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      category: string
      value: string
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["dropdownOption"]>
    composites: {}
  }

  type DropdownOptionGetPayload<S extends boolean | null | undefined | DropdownOptionDefaultArgs> = $Result.GetResult<Prisma.$DropdownOptionPayload, S>

  type DropdownOptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DropdownOptionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DropdownOptionCountAggregateInputType | true
    }

  export interface DropdownOptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DropdownOption'], meta: { name: 'DropdownOption' } }
    /**
     * Find zero or one DropdownOption that matches the filter.
     * @param {DropdownOptionFindUniqueArgs} args - Arguments to find a DropdownOption
     * @example
     * // Get one DropdownOption
     * const dropdownOption = await prisma.dropdownOption.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DropdownOptionFindUniqueArgs>(args: SelectSubset<T, DropdownOptionFindUniqueArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DropdownOption that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DropdownOptionFindUniqueOrThrowArgs} args - Arguments to find a DropdownOption
     * @example
     * // Get one DropdownOption
     * const dropdownOption = await prisma.dropdownOption.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DropdownOptionFindUniqueOrThrowArgs>(args: SelectSubset<T, DropdownOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DropdownOption that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropdownOptionFindFirstArgs} args - Arguments to find a DropdownOption
     * @example
     * // Get one DropdownOption
     * const dropdownOption = await prisma.dropdownOption.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DropdownOptionFindFirstArgs>(args?: SelectSubset<T, DropdownOptionFindFirstArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DropdownOption that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropdownOptionFindFirstOrThrowArgs} args - Arguments to find a DropdownOption
     * @example
     * // Get one DropdownOption
     * const dropdownOption = await prisma.dropdownOption.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DropdownOptionFindFirstOrThrowArgs>(args?: SelectSubset<T, DropdownOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DropdownOptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropdownOptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DropdownOptions
     * const dropdownOptions = await prisma.dropdownOption.findMany()
     * 
     * // Get first 10 DropdownOptions
     * const dropdownOptions = await prisma.dropdownOption.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dropdownOptionWithIdOnly = await prisma.dropdownOption.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DropdownOptionFindManyArgs>(args?: SelectSubset<T, DropdownOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DropdownOption.
     * @param {DropdownOptionCreateArgs} args - Arguments to create a DropdownOption.
     * @example
     * // Create one DropdownOption
     * const DropdownOption = await prisma.dropdownOption.create({
     *   data: {
     *     // ... data to create a DropdownOption
     *   }
     * })
     * 
     */
    create<T extends DropdownOptionCreateArgs>(args: SelectSubset<T, DropdownOptionCreateArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DropdownOptions.
     * @param {DropdownOptionCreateManyArgs} args - Arguments to create many DropdownOptions.
     * @example
     * // Create many DropdownOptions
     * const dropdownOption = await prisma.dropdownOption.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DropdownOptionCreateManyArgs>(args?: SelectSubset<T, DropdownOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DropdownOptions and returns the data saved in the database.
     * @param {DropdownOptionCreateManyAndReturnArgs} args - Arguments to create many DropdownOptions.
     * @example
     * // Create many DropdownOptions
     * const dropdownOption = await prisma.dropdownOption.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DropdownOptions and only return the `id`
     * const dropdownOptionWithIdOnly = await prisma.dropdownOption.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DropdownOptionCreateManyAndReturnArgs>(args?: SelectSubset<T, DropdownOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DropdownOption.
     * @param {DropdownOptionDeleteArgs} args - Arguments to delete one DropdownOption.
     * @example
     * // Delete one DropdownOption
     * const DropdownOption = await prisma.dropdownOption.delete({
     *   where: {
     *     // ... filter to delete one DropdownOption
     *   }
     * })
     * 
     */
    delete<T extends DropdownOptionDeleteArgs>(args: SelectSubset<T, DropdownOptionDeleteArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DropdownOption.
     * @param {DropdownOptionUpdateArgs} args - Arguments to update one DropdownOption.
     * @example
     * // Update one DropdownOption
     * const dropdownOption = await prisma.dropdownOption.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DropdownOptionUpdateArgs>(args: SelectSubset<T, DropdownOptionUpdateArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DropdownOptions.
     * @param {DropdownOptionDeleteManyArgs} args - Arguments to filter DropdownOptions to delete.
     * @example
     * // Delete a few DropdownOptions
     * const { count } = await prisma.dropdownOption.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DropdownOptionDeleteManyArgs>(args?: SelectSubset<T, DropdownOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DropdownOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropdownOptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DropdownOptions
     * const dropdownOption = await prisma.dropdownOption.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DropdownOptionUpdateManyArgs>(args: SelectSubset<T, DropdownOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DropdownOption.
     * @param {DropdownOptionUpsertArgs} args - Arguments to update or create a DropdownOption.
     * @example
     * // Update or create a DropdownOption
     * const dropdownOption = await prisma.dropdownOption.upsert({
     *   create: {
     *     // ... data to create a DropdownOption
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DropdownOption we want to update
     *   }
     * })
     */
    upsert<T extends DropdownOptionUpsertArgs>(args: SelectSubset<T, DropdownOptionUpsertArgs<ExtArgs>>): Prisma__DropdownOptionClient<$Result.GetResult<Prisma.$DropdownOptionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DropdownOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropdownOptionCountArgs} args - Arguments to filter DropdownOptions to count.
     * @example
     * // Count the number of DropdownOptions
     * const count = await prisma.dropdownOption.count({
     *   where: {
     *     // ... the filter for the DropdownOptions we want to count
     *   }
     * })
    **/
    count<T extends DropdownOptionCountArgs>(
      args?: Subset<T, DropdownOptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DropdownOptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DropdownOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropdownOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DropdownOptionAggregateArgs>(args: Subset<T, DropdownOptionAggregateArgs>): Prisma.PrismaPromise<GetDropdownOptionAggregateType<T>>

    /**
     * Group by DropdownOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropdownOptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DropdownOptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DropdownOptionGroupByArgs['orderBy'] }
        : { orderBy?: DropdownOptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DropdownOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDropdownOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DropdownOption model
   */
  readonly fields: DropdownOptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DropdownOption.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DropdownOptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DropdownOption model
   */ 
  interface DropdownOptionFieldRefs {
    readonly id: FieldRef<"DropdownOption", 'String'>
    readonly category: FieldRef<"DropdownOption", 'String'>
    readonly value: FieldRef<"DropdownOption", 'String'>
    readonly isActive: FieldRef<"DropdownOption", 'Boolean'>
    readonly createdAt: FieldRef<"DropdownOption", 'DateTime'>
    readonly updatedAt: FieldRef<"DropdownOption", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DropdownOption findUnique
   */
  export type DropdownOptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * Filter, which DropdownOption to fetch.
     */
    where: DropdownOptionWhereUniqueInput
  }

  /**
   * DropdownOption findUniqueOrThrow
   */
  export type DropdownOptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * Filter, which DropdownOption to fetch.
     */
    where: DropdownOptionWhereUniqueInput
  }

  /**
   * DropdownOption findFirst
   */
  export type DropdownOptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * Filter, which DropdownOption to fetch.
     */
    where?: DropdownOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DropdownOptions to fetch.
     */
    orderBy?: DropdownOptionOrderByWithRelationInput | DropdownOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DropdownOptions.
     */
    cursor?: DropdownOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DropdownOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DropdownOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DropdownOptions.
     */
    distinct?: DropdownOptionScalarFieldEnum | DropdownOptionScalarFieldEnum[]
  }

  /**
   * DropdownOption findFirstOrThrow
   */
  export type DropdownOptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * Filter, which DropdownOption to fetch.
     */
    where?: DropdownOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DropdownOptions to fetch.
     */
    orderBy?: DropdownOptionOrderByWithRelationInput | DropdownOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DropdownOptions.
     */
    cursor?: DropdownOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DropdownOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DropdownOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DropdownOptions.
     */
    distinct?: DropdownOptionScalarFieldEnum | DropdownOptionScalarFieldEnum[]
  }

  /**
   * DropdownOption findMany
   */
  export type DropdownOptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * Filter, which DropdownOptions to fetch.
     */
    where?: DropdownOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DropdownOptions to fetch.
     */
    orderBy?: DropdownOptionOrderByWithRelationInput | DropdownOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DropdownOptions.
     */
    cursor?: DropdownOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DropdownOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DropdownOptions.
     */
    skip?: number
    distinct?: DropdownOptionScalarFieldEnum | DropdownOptionScalarFieldEnum[]
  }

  /**
   * DropdownOption create
   */
  export type DropdownOptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * The data needed to create a DropdownOption.
     */
    data: XOR<DropdownOptionCreateInput, DropdownOptionUncheckedCreateInput>
  }

  /**
   * DropdownOption createMany
   */
  export type DropdownOptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DropdownOptions.
     */
    data: DropdownOptionCreateManyInput | DropdownOptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DropdownOption createManyAndReturn
   */
  export type DropdownOptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DropdownOptions.
     */
    data: DropdownOptionCreateManyInput | DropdownOptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DropdownOption update
   */
  export type DropdownOptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * The data needed to update a DropdownOption.
     */
    data: XOR<DropdownOptionUpdateInput, DropdownOptionUncheckedUpdateInput>
    /**
     * Choose, which DropdownOption to update.
     */
    where: DropdownOptionWhereUniqueInput
  }

  /**
   * DropdownOption updateMany
   */
  export type DropdownOptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DropdownOptions.
     */
    data: XOR<DropdownOptionUpdateManyMutationInput, DropdownOptionUncheckedUpdateManyInput>
    /**
     * Filter which DropdownOptions to update
     */
    where?: DropdownOptionWhereInput
  }

  /**
   * DropdownOption upsert
   */
  export type DropdownOptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * The filter to search for the DropdownOption to update in case it exists.
     */
    where: DropdownOptionWhereUniqueInput
    /**
     * In case the DropdownOption found by the `where` argument doesn't exist, create a new DropdownOption with this data.
     */
    create: XOR<DropdownOptionCreateInput, DropdownOptionUncheckedCreateInput>
    /**
     * In case the DropdownOption was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DropdownOptionUpdateInput, DropdownOptionUncheckedUpdateInput>
  }

  /**
   * DropdownOption delete
   */
  export type DropdownOptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
    /**
     * Filter which DropdownOption to delete.
     */
    where: DropdownOptionWhereUniqueInput
  }

  /**
   * DropdownOption deleteMany
   */
  export type DropdownOptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DropdownOptions to delete
     */
    where?: DropdownOptionWhereInput
  }

  /**
   * DropdownOption without action
   */
  export type DropdownOptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropdownOption
     */
    select?: DropdownOptionSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const HospitalUserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    hospitalName: 'hospitalName',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HospitalUserScalarFieldEnum = (typeof HospitalUserScalarFieldEnum)[keyof typeof HospitalUserScalarFieldEnum]


  export const HealthcareUserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    phone: 'phone',
    facilityName: 'facilityName',
    facilityType: 'facilityType',
    emailNotifications: 'emailNotifications',
    smsNotifications: 'smsNotifications',
    isActive: 'isActive',
    userType: 'userType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HealthcareUserScalarFieldEnum = (typeof HealthcareUserScalarFieldEnum)[keyof typeof HealthcareUserScalarFieldEnum]


  export const FacilityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    address: 'address',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    phone: 'phone',
    email: 'email',
    coordinates: 'coordinates',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FacilityScalarFieldEnum = (typeof FacilityScalarFieldEnum)[keyof typeof FacilityScalarFieldEnum]


  export const TransportRequestScalarFieldEnum: {
    id: 'id',
    tripNumber: 'tripNumber',
    patientId: 'patientId',
    patientWeight: 'patientWeight',
    specialNeeds: 'specialNeeds',
    originFacilityId: 'originFacilityId',
    destinationFacilityId: 'destinationFacilityId',
    fromLocation: 'fromLocation',
    toLocation: 'toLocation',
    scheduledTime: 'scheduledTime',
    transportLevel: 'transportLevel',
    urgencyLevel: 'urgencyLevel',
    priority: 'priority',
    status: 'status',
    specialRequirements: 'specialRequirements',
    diagnosis: 'diagnosis',
    mobilityLevel: 'mobilityLevel',
    oxygenRequired: 'oxygenRequired',
    monitoringRequired: 'monitoringRequired',
    generateQRCode: 'generateQRCode',
    qrCodeData: 'qrCodeData',
    selectedAgencies: 'selectedAgencies',
    notificationRadius: 'notificationRadius',
    transferRequestTime: 'transferRequestTime',
    transferAcceptedTime: 'transferAcceptedTime',
    emsArrivalTime: 'emsArrivalTime',
    emsDepartureTime: 'emsDepartureTime',
    requestTimestamp: 'requestTimestamp',
    acceptedTimestamp: 'acceptedTimestamp',
    pickupTimestamp: 'pickupTimestamp',
    completionTimestamp: 'completionTimestamp',
    assignedAgencyId: 'assignedAgencyId',
    assignedUnitId: 'assignedUnitId',
    createdById: 'createdById',
    healthcareCreatedById: 'healthcareCreatedById',
    readyStart: 'readyStart',
    readyEnd: 'readyEnd',
    isolation: 'isolation',
    bariatric: 'bariatric',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TransportRequestScalarFieldEnum = (typeof TransportRequestScalarFieldEnum)[keyof typeof TransportRequestScalarFieldEnum]


  export const DropdownOptionScalarFieldEnum: {
    id: 'id',
    category: 'category',
    value: 'value',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DropdownOptionScalarFieldEnum = (typeof DropdownOptionScalarFieldEnum)[keyof typeof DropdownOptionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type HospitalUserWhereInput = {
    AND?: HospitalUserWhereInput | HospitalUserWhereInput[]
    OR?: HospitalUserWhereInput[]
    NOT?: HospitalUserWhereInput | HospitalUserWhereInput[]
    id?: StringFilter<"HospitalUser"> | string
    email?: StringFilter<"HospitalUser"> | string
    password?: StringFilter<"HospitalUser"> | string
    name?: StringFilter<"HospitalUser"> | string
    hospitalName?: StringFilter<"HospitalUser"> | string
    isActive?: BoolFilter<"HospitalUser"> | boolean
    createdAt?: DateTimeFilter<"HospitalUser"> | Date | string
    updatedAt?: DateTimeFilter<"HospitalUser"> | Date | string
    transportRequests?: TransportRequestListRelationFilter
  }

  export type HospitalUserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    hospitalName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    transportRequests?: TransportRequestOrderByRelationAggregateInput
  }

  export type HospitalUserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: HospitalUserWhereInput | HospitalUserWhereInput[]
    OR?: HospitalUserWhereInput[]
    NOT?: HospitalUserWhereInput | HospitalUserWhereInput[]
    password?: StringFilter<"HospitalUser"> | string
    name?: StringFilter<"HospitalUser"> | string
    hospitalName?: StringFilter<"HospitalUser"> | string
    isActive?: BoolFilter<"HospitalUser"> | boolean
    createdAt?: DateTimeFilter<"HospitalUser"> | Date | string
    updatedAt?: DateTimeFilter<"HospitalUser"> | Date | string
    transportRequests?: TransportRequestListRelationFilter
  }, "id" | "email">

  export type HospitalUserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    hospitalName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: HospitalUserCountOrderByAggregateInput
    _max?: HospitalUserMaxOrderByAggregateInput
    _min?: HospitalUserMinOrderByAggregateInput
  }

  export type HospitalUserScalarWhereWithAggregatesInput = {
    AND?: HospitalUserScalarWhereWithAggregatesInput | HospitalUserScalarWhereWithAggregatesInput[]
    OR?: HospitalUserScalarWhereWithAggregatesInput[]
    NOT?: HospitalUserScalarWhereWithAggregatesInput | HospitalUserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"HospitalUser"> | string
    email?: StringWithAggregatesFilter<"HospitalUser"> | string
    password?: StringWithAggregatesFilter<"HospitalUser"> | string
    name?: StringWithAggregatesFilter<"HospitalUser"> | string
    hospitalName?: StringWithAggregatesFilter<"HospitalUser"> | string
    isActive?: BoolWithAggregatesFilter<"HospitalUser"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"HospitalUser"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"HospitalUser"> | Date | string
  }

  export type HealthcareUserWhereInput = {
    AND?: HealthcareUserWhereInput | HealthcareUserWhereInput[]
    OR?: HealthcareUserWhereInput[]
    NOT?: HealthcareUserWhereInput | HealthcareUserWhereInput[]
    id?: StringFilter<"HealthcareUser"> | string
    email?: StringFilter<"HealthcareUser"> | string
    password?: StringFilter<"HealthcareUser"> | string
    name?: StringFilter<"HealthcareUser"> | string
    phone?: StringNullableFilter<"HealthcareUser"> | string | null
    facilityName?: StringFilter<"HealthcareUser"> | string
    facilityType?: StringFilter<"HealthcareUser"> | string
    emailNotifications?: BoolFilter<"HealthcareUser"> | boolean
    smsNotifications?: BoolFilter<"HealthcareUser"> | boolean
    isActive?: BoolFilter<"HealthcareUser"> | boolean
    userType?: StringFilter<"HealthcareUser"> | string
    createdAt?: DateTimeFilter<"HealthcareUser"> | Date | string
    updatedAt?: DateTimeFilter<"HealthcareUser"> | Date | string
    transportRequests?: TransportRequestListRelationFilter
  }

  export type HealthcareUserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    facilityName?: SortOrder
    facilityType?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    transportRequests?: TransportRequestOrderByRelationAggregateInput
  }

  export type HealthcareUserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: HealthcareUserWhereInput | HealthcareUserWhereInput[]
    OR?: HealthcareUserWhereInput[]
    NOT?: HealthcareUserWhereInput | HealthcareUserWhereInput[]
    password?: StringFilter<"HealthcareUser"> | string
    name?: StringFilter<"HealthcareUser"> | string
    phone?: StringNullableFilter<"HealthcareUser"> | string | null
    facilityName?: StringFilter<"HealthcareUser"> | string
    facilityType?: StringFilter<"HealthcareUser"> | string
    emailNotifications?: BoolFilter<"HealthcareUser"> | boolean
    smsNotifications?: BoolFilter<"HealthcareUser"> | boolean
    isActive?: BoolFilter<"HealthcareUser"> | boolean
    userType?: StringFilter<"HealthcareUser"> | string
    createdAt?: DateTimeFilter<"HealthcareUser"> | Date | string
    updatedAt?: DateTimeFilter<"HealthcareUser"> | Date | string
    transportRequests?: TransportRequestListRelationFilter
  }, "id" | "email">

  export type HealthcareUserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    facilityName?: SortOrder
    facilityType?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: HealthcareUserCountOrderByAggregateInput
    _max?: HealthcareUserMaxOrderByAggregateInput
    _min?: HealthcareUserMinOrderByAggregateInput
  }

  export type HealthcareUserScalarWhereWithAggregatesInput = {
    AND?: HealthcareUserScalarWhereWithAggregatesInput | HealthcareUserScalarWhereWithAggregatesInput[]
    OR?: HealthcareUserScalarWhereWithAggregatesInput[]
    NOT?: HealthcareUserScalarWhereWithAggregatesInput | HealthcareUserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"HealthcareUser"> | string
    email?: StringWithAggregatesFilter<"HealthcareUser"> | string
    password?: StringWithAggregatesFilter<"HealthcareUser"> | string
    name?: StringWithAggregatesFilter<"HealthcareUser"> | string
    phone?: StringNullableWithAggregatesFilter<"HealthcareUser"> | string | null
    facilityName?: StringWithAggregatesFilter<"HealthcareUser"> | string
    facilityType?: StringWithAggregatesFilter<"HealthcareUser"> | string
    emailNotifications?: BoolWithAggregatesFilter<"HealthcareUser"> | boolean
    smsNotifications?: BoolWithAggregatesFilter<"HealthcareUser"> | boolean
    isActive?: BoolWithAggregatesFilter<"HealthcareUser"> | boolean
    userType?: StringWithAggregatesFilter<"HealthcareUser"> | string
    createdAt?: DateTimeWithAggregatesFilter<"HealthcareUser"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"HealthcareUser"> | Date | string
  }

  export type FacilityWhereInput = {
    AND?: FacilityWhereInput | FacilityWhereInput[]
    OR?: FacilityWhereInput[]
    NOT?: FacilityWhereInput | FacilityWhereInput[]
    id?: StringFilter<"Facility"> | string
    name?: StringFilter<"Facility"> | string
    type?: StringFilter<"Facility"> | string
    address?: StringFilter<"Facility"> | string
    city?: StringFilter<"Facility"> | string
    state?: StringFilter<"Facility"> | string
    zipCode?: StringFilter<"Facility"> | string
    phone?: StringNullableFilter<"Facility"> | string | null
    email?: StringNullableFilter<"Facility"> | string | null
    coordinates?: JsonNullableFilter<"Facility">
    isActive?: BoolFilter<"Facility"> | boolean
    createdAt?: DateTimeFilter<"Facility"> | Date | string
    updatedAt?: DateTimeFilter<"Facility"> | Date | string
    originTransportRequests?: TransportRequestListRelationFilter
    destinationTransportRequests?: TransportRequestListRelationFilter
  }

  export type FacilityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    coordinates?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    originTransportRequests?: TransportRequestOrderByRelationAggregateInput
    destinationTransportRequests?: TransportRequestOrderByRelationAggregateInput
  }

  export type FacilityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FacilityWhereInput | FacilityWhereInput[]
    OR?: FacilityWhereInput[]
    NOT?: FacilityWhereInput | FacilityWhereInput[]
    name?: StringFilter<"Facility"> | string
    type?: StringFilter<"Facility"> | string
    address?: StringFilter<"Facility"> | string
    city?: StringFilter<"Facility"> | string
    state?: StringFilter<"Facility"> | string
    zipCode?: StringFilter<"Facility"> | string
    phone?: StringNullableFilter<"Facility"> | string | null
    email?: StringNullableFilter<"Facility"> | string | null
    coordinates?: JsonNullableFilter<"Facility">
    isActive?: BoolFilter<"Facility"> | boolean
    createdAt?: DateTimeFilter<"Facility"> | Date | string
    updatedAt?: DateTimeFilter<"Facility"> | Date | string
    originTransportRequests?: TransportRequestListRelationFilter
    destinationTransportRequests?: TransportRequestListRelationFilter
  }, "id">

  export type FacilityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    coordinates?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FacilityCountOrderByAggregateInput
    _max?: FacilityMaxOrderByAggregateInput
    _min?: FacilityMinOrderByAggregateInput
  }

  export type FacilityScalarWhereWithAggregatesInput = {
    AND?: FacilityScalarWhereWithAggregatesInput | FacilityScalarWhereWithAggregatesInput[]
    OR?: FacilityScalarWhereWithAggregatesInput[]
    NOT?: FacilityScalarWhereWithAggregatesInput | FacilityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Facility"> | string
    name?: StringWithAggregatesFilter<"Facility"> | string
    type?: StringWithAggregatesFilter<"Facility"> | string
    address?: StringWithAggregatesFilter<"Facility"> | string
    city?: StringWithAggregatesFilter<"Facility"> | string
    state?: StringWithAggregatesFilter<"Facility"> | string
    zipCode?: StringWithAggregatesFilter<"Facility"> | string
    phone?: StringNullableWithAggregatesFilter<"Facility"> | string | null
    email?: StringNullableWithAggregatesFilter<"Facility"> | string | null
    coordinates?: JsonNullableWithAggregatesFilter<"Facility">
    isActive?: BoolWithAggregatesFilter<"Facility"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Facility"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Facility"> | Date | string
  }

  export type TransportRequestWhereInput = {
    AND?: TransportRequestWhereInput | TransportRequestWhereInput[]
    OR?: TransportRequestWhereInput[]
    NOT?: TransportRequestWhereInput | TransportRequestWhereInput[]
    id?: StringFilter<"TransportRequest"> | string
    tripNumber?: StringNullableFilter<"TransportRequest"> | string | null
    patientId?: StringFilter<"TransportRequest"> | string
    patientWeight?: StringNullableFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableFilter<"TransportRequest"> | string | null
    priority?: StringFilter<"TransportRequest"> | string
    status?: StringFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableFilter<"TransportRequest"> | string | null
    createdById?: StringNullableFilter<"TransportRequest"> | string | null
    healthcareCreatedById?: StringNullableFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolFilter<"TransportRequest"> | boolean
    bariatric?: BoolFilter<"TransportRequest"> | boolean
    notes?: StringNullableFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeFilter<"TransportRequest"> | Date | string
    originFacility?: XOR<FacilityNullableRelationFilter, FacilityWhereInput> | null
    destinationFacility?: XOR<FacilityNullableRelationFilter, FacilityWhereInput> | null
    createdBy?: XOR<HospitalUserNullableRelationFilter, HospitalUserWhereInput> | null
    createdByHealthcare?: XOR<HealthcareUserNullableRelationFilter, HealthcareUserWhereInput> | null
  }

  export type TransportRequestOrderByWithRelationInput = {
    id?: SortOrder
    tripNumber?: SortOrderInput | SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrderInput | SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    originFacilityId?: SortOrderInput | SortOrder
    destinationFacilityId?: SortOrderInput | SortOrder
    fromLocation?: SortOrderInput | SortOrder
    toLocation?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrderInput | SortOrder
    diagnosis?: SortOrderInput | SortOrder
    mobilityLevel?: SortOrderInput | SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrderInput | SortOrder
    selectedAgencies?: SortOrder
    notificationRadius?: SortOrderInput | SortOrder
    transferRequestTime?: SortOrderInput | SortOrder
    transferAcceptedTime?: SortOrderInput | SortOrder
    emsArrivalTime?: SortOrderInput | SortOrder
    emsDepartureTime?: SortOrderInput | SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrderInput | SortOrder
    pickupTimestamp?: SortOrderInput | SortOrder
    completionTimestamp?: SortOrderInput | SortOrder
    assignedAgencyId?: SortOrderInput | SortOrder
    assignedUnitId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    healthcareCreatedById?: SortOrderInput | SortOrder
    readyStart?: SortOrderInput | SortOrder
    readyEnd?: SortOrderInput | SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    originFacility?: FacilityOrderByWithRelationInput
    destinationFacility?: FacilityOrderByWithRelationInput
    createdBy?: HospitalUserOrderByWithRelationInput
    createdByHealthcare?: HealthcareUserOrderByWithRelationInput
  }

  export type TransportRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    tripNumber?: string
    AND?: TransportRequestWhereInput | TransportRequestWhereInput[]
    OR?: TransportRequestWhereInput[]
    NOT?: TransportRequestWhereInput | TransportRequestWhereInput[]
    patientId?: StringFilter<"TransportRequest"> | string
    patientWeight?: StringNullableFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableFilter<"TransportRequest"> | string | null
    priority?: StringFilter<"TransportRequest"> | string
    status?: StringFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableFilter<"TransportRequest"> | string | null
    createdById?: StringNullableFilter<"TransportRequest"> | string | null
    healthcareCreatedById?: StringNullableFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolFilter<"TransportRequest"> | boolean
    bariatric?: BoolFilter<"TransportRequest"> | boolean
    notes?: StringNullableFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeFilter<"TransportRequest"> | Date | string
    originFacility?: XOR<FacilityNullableRelationFilter, FacilityWhereInput> | null
    destinationFacility?: XOR<FacilityNullableRelationFilter, FacilityWhereInput> | null
    createdBy?: XOR<HospitalUserNullableRelationFilter, HospitalUserWhereInput> | null
    createdByHealthcare?: XOR<HealthcareUserNullableRelationFilter, HealthcareUserWhereInput> | null
  }, "id" | "tripNumber">

  export type TransportRequestOrderByWithAggregationInput = {
    id?: SortOrder
    tripNumber?: SortOrderInput | SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrderInput | SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    originFacilityId?: SortOrderInput | SortOrder
    destinationFacilityId?: SortOrderInput | SortOrder
    fromLocation?: SortOrderInput | SortOrder
    toLocation?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrderInput | SortOrder
    diagnosis?: SortOrderInput | SortOrder
    mobilityLevel?: SortOrderInput | SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrderInput | SortOrder
    selectedAgencies?: SortOrder
    notificationRadius?: SortOrderInput | SortOrder
    transferRequestTime?: SortOrderInput | SortOrder
    transferAcceptedTime?: SortOrderInput | SortOrder
    emsArrivalTime?: SortOrderInput | SortOrder
    emsDepartureTime?: SortOrderInput | SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrderInput | SortOrder
    pickupTimestamp?: SortOrderInput | SortOrder
    completionTimestamp?: SortOrderInput | SortOrder
    assignedAgencyId?: SortOrderInput | SortOrder
    assignedUnitId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    healthcareCreatedById?: SortOrderInput | SortOrder
    readyStart?: SortOrderInput | SortOrder
    readyEnd?: SortOrderInput | SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TransportRequestCountOrderByAggregateInput
    _avg?: TransportRequestAvgOrderByAggregateInput
    _max?: TransportRequestMaxOrderByAggregateInput
    _min?: TransportRequestMinOrderByAggregateInput
    _sum?: TransportRequestSumOrderByAggregateInput
  }

  export type TransportRequestScalarWhereWithAggregatesInput = {
    AND?: TransportRequestScalarWhereWithAggregatesInput | TransportRequestScalarWhereWithAggregatesInput[]
    OR?: TransportRequestScalarWhereWithAggregatesInput[]
    NOT?: TransportRequestScalarWhereWithAggregatesInput | TransportRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TransportRequest"> | string
    tripNumber?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    patientId?: StringWithAggregatesFilter<"TransportRequest"> | string
    patientWeight?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringWithAggregatesFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    priority?: StringWithAggregatesFilter<"TransportRequest"> | string
    status?: StringWithAggregatesFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableWithAggregatesFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeWithAggregatesFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    healthcareCreatedById?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableWithAggregatesFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    bariatric?: BoolWithAggregatesFilter<"TransportRequest"> | boolean
    notes?: StringNullableWithAggregatesFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TransportRequest"> | Date | string
  }

  export type DropdownOptionWhereInput = {
    AND?: DropdownOptionWhereInput | DropdownOptionWhereInput[]
    OR?: DropdownOptionWhereInput[]
    NOT?: DropdownOptionWhereInput | DropdownOptionWhereInput[]
    id?: StringFilter<"DropdownOption"> | string
    category?: StringFilter<"DropdownOption"> | string
    value?: StringFilter<"DropdownOption"> | string
    isActive?: BoolFilter<"DropdownOption"> | boolean
    createdAt?: DateTimeFilter<"DropdownOption"> | Date | string
    updatedAt?: DateTimeFilter<"DropdownOption"> | Date | string
  }

  export type DropdownOptionOrderByWithRelationInput = {
    id?: SortOrder
    category?: SortOrder
    value?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DropdownOptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    category_value?: DropdownOptionCategoryValueCompoundUniqueInput
    AND?: DropdownOptionWhereInput | DropdownOptionWhereInput[]
    OR?: DropdownOptionWhereInput[]
    NOT?: DropdownOptionWhereInput | DropdownOptionWhereInput[]
    category?: StringFilter<"DropdownOption"> | string
    value?: StringFilter<"DropdownOption"> | string
    isActive?: BoolFilter<"DropdownOption"> | boolean
    createdAt?: DateTimeFilter<"DropdownOption"> | Date | string
    updatedAt?: DateTimeFilter<"DropdownOption"> | Date | string
  }, "id" | "category_value">

  export type DropdownOptionOrderByWithAggregationInput = {
    id?: SortOrder
    category?: SortOrder
    value?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DropdownOptionCountOrderByAggregateInput
    _max?: DropdownOptionMaxOrderByAggregateInput
    _min?: DropdownOptionMinOrderByAggregateInput
  }

  export type DropdownOptionScalarWhereWithAggregatesInput = {
    AND?: DropdownOptionScalarWhereWithAggregatesInput | DropdownOptionScalarWhereWithAggregatesInput[]
    OR?: DropdownOptionScalarWhereWithAggregatesInput[]
    NOT?: DropdownOptionScalarWhereWithAggregatesInput | DropdownOptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DropdownOption"> | string
    category?: StringWithAggregatesFilter<"DropdownOption"> | string
    value?: StringWithAggregatesFilter<"DropdownOption"> | string
    isActive?: BoolWithAggregatesFilter<"DropdownOption"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"DropdownOption"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DropdownOption"> | Date | string
  }

  export type HospitalUserCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    hospitalName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    transportRequests?: TransportRequestCreateNestedManyWithoutCreatedByInput
  }

  export type HospitalUserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    hospitalName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    transportRequests?: TransportRequestUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type HospitalUserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    hospitalName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportRequests?: TransportRequestUpdateManyWithoutCreatedByNestedInput
  }

  export type HospitalUserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    hospitalName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportRequests?: TransportRequestUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type HospitalUserCreateManyInput = {
    id?: string
    email: string
    password: string
    name: string
    hospitalName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HospitalUserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    hospitalName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HospitalUserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    hospitalName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HealthcareUserCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    facilityName: string
    facilityType: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    transportRequests?: TransportRequestCreateNestedManyWithoutCreatedByHealthcareInput
  }

  export type HealthcareUserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    facilityName: string
    facilityType: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    transportRequests?: TransportRequestUncheckedCreateNestedManyWithoutCreatedByHealthcareInput
  }

  export type HealthcareUserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    facilityName?: StringFieldUpdateOperationsInput | string
    facilityType?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportRequests?: TransportRequestUpdateManyWithoutCreatedByHealthcareNestedInput
  }

  export type HealthcareUserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    facilityName?: StringFieldUpdateOperationsInput | string
    facilityType?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportRequests?: TransportRequestUncheckedUpdateManyWithoutCreatedByHealthcareNestedInput
  }

  export type HealthcareUserCreateManyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    facilityName: string
    facilityType: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HealthcareUserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    facilityName?: StringFieldUpdateOperationsInput | string
    facilityType?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HealthcareUserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    facilityName?: StringFieldUpdateOperationsInput | string
    facilityType?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FacilityCreateInput = {
    id?: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone?: string | null
    email?: string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    originTransportRequests?: TransportRequestCreateNestedManyWithoutOriginFacilityInput
    destinationTransportRequests?: TransportRequestCreateNestedManyWithoutDestinationFacilityInput
  }

  export type FacilityUncheckedCreateInput = {
    id?: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone?: string | null
    email?: string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    originTransportRequests?: TransportRequestUncheckedCreateNestedManyWithoutOriginFacilityInput
    destinationTransportRequests?: TransportRequestUncheckedCreateNestedManyWithoutDestinationFacilityInput
  }

  export type FacilityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originTransportRequests?: TransportRequestUpdateManyWithoutOriginFacilityNestedInput
    destinationTransportRequests?: TransportRequestUpdateManyWithoutDestinationFacilityNestedInput
  }

  export type FacilityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originTransportRequests?: TransportRequestUncheckedUpdateManyWithoutOriginFacilityNestedInput
    destinationTransportRequests?: TransportRequestUncheckedUpdateManyWithoutDestinationFacilityNestedInput
  }

  export type FacilityCreateManyInput = {
    id?: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone?: string | null
    email?: string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FacilityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FacilityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    originFacility?: FacilityCreateNestedOneWithoutOriginTransportRequestsInput
    destinationFacility?: FacilityCreateNestedOneWithoutDestinationTransportRequestsInput
    createdBy?: HospitalUserCreateNestedOneWithoutTransportRequestsInput
    createdByHealthcare?: HealthcareUserCreateNestedOneWithoutTransportRequestsInput
  }

  export type TransportRequestUncheckedCreateInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originFacility?: FacilityUpdateOneWithoutOriginTransportRequestsNestedInput
    destinationFacility?: FacilityUpdateOneWithoutDestinationTransportRequestsNestedInput
    createdBy?: HospitalUserUpdateOneWithoutTransportRequestsNestedInput
    createdByHealthcare?: HealthcareUserUpdateOneWithoutTransportRequestsNestedInput
  }

  export type TransportRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateManyInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DropdownOptionCreateInput = {
    id?: string
    category: string
    value: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DropdownOptionUncheckedCreateInput = {
    id?: string
    category: string
    value: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DropdownOptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DropdownOptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DropdownOptionCreateManyInput = {
    id?: string
    category: string
    value: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DropdownOptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DropdownOptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type TransportRequestListRelationFilter = {
    every?: TransportRequestWhereInput
    some?: TransportRequestWhereInput
    none?: TransportRequestWhereInput
  }

  export type TransportRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HospitalUserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    hospitalName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HospitalUserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    hospitalName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HospitalUserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    hospitalName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type HealthcareUserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    facilityName?: SortOrder
    facilityType?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HealthcareUserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    facilityName?: SortOrder
    facilityType?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HealthcareUserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    facilityName?: SortOrder
    facilityType?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type FacilityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    coordinates?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FacilityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FacilityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FacilityNullableRelationFilter = {
    is?: FacilityWhereInput | null
    isNot?: FacilityWhereInput | null
  }

  export type HospitalUserNullableRelationFilter = {
    is?: HospitalUserWhereInput | null
    isNot?: HospitalUserWhereInput | null
  }

  export type HealthcareUserNullableRelationFilter = {
    is?: HealthcareUserWhereInput | null
    isNot?: HealthcareUserWhereInput | null
  }

  export type TransportRequestCountOrderByAggregateInput = {
    id?: SortOrder
    tripNumber?: SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrder
    specialNeeds?: SortOrder
    originFacilityId?: SortOrder
    destinationFacilityId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    scheduledTime?: SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrder
    diagnosis?: SortOrder
    mobilityLevel?: SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrder
    selectedAgencies?: SortOrder
    notificationRadius?: SortOrder
    transferRequestTime?: SortOrder
    transferAcceptedTime?: SortOrder
    emsArrivalTime?: SortOrder
    emsDepartureTime?: SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrder
    pickupTimestamp?: SortOrder
    completionTimestamp?: SortOrder
    assignedAgencyId?: SortOrder
    assignedUnitId?: SortOrder
    createdById?: SortOrder
    healthcareCreatedById?: SortOrder
    readyStart?: SortOrder
    readyEnd?: SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransportRequestAvgOrderByAggregateInput = {
    notificationRadius?: SortOrder
  }

  export type TransportRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    tripNumber?: SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrder
    specialNeeds?: SortOrder
    originFacilityId?: SortOrder
    destinationFacilityId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    scheduledTime?: SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrder
    diagnosis?: SortOrder
    mobilityLevel?: SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrder
    notificationRadius?: SortOrder
    transferRequestTime?: SortOrder
    transferAcceptedTime?: SortOrder
    emsArrivalTime?: SortOrder
    emsDepartureTime?: SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrder
    pickupTimestamp?: SortOrder
    completionTimestamp?: SortOrder
    assignedAgencyId?: SortOrder
    assignedUnitId?: SortOrder
    createdById?: SortOrder
    healthcareCreatedById?: SortOrder
    readyStart?: SortOrder
    readyEnd?: SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransportRequestMinOrderByAggregateInput = {
    id?: SortOrder
    tripNumber?: SortOrder
    patientId?: SortOrder
    patientWeight?: SortOrder
    specialNeeds?: SortOrder
    originFacilityId?: SortOrder
    destinationFacilityId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    scheduledTime?: SortOrder
    transportLevel?: SortOrder
    urgencyLevel?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    specialRequirements?: SortOrder
    diagnosis?: SortOrder
    mobilityLevel?: SortOrder
    oxygenRequired?: SortOrder
    monitoringRequired?: SortOrder
    generateQRCode?: SortOrder
    qrCodeData?: SortOrder
    notificationRadius?: SortOrder
    transferRequestTime?: SortOrder
    transferAcceptedTime?: SortOrder
    emsArrivalTime?: SortOrder
    emsDepartureTime?: SortOrder
    requestTimestamp?: SortOrder
    acceptedTimestamp?: SortOrder
    pickupTimestamp?: SortOrder
    completionTimestamp?: SortOrder
    assignedAgencyId?: SortOrder
    assignedUnitId?: SortOrder
    createdById?: SortOrder
    healthcareCreatedById?: SortOrder
    readyStart?: SortOrder
    readyEnd?: SortOrder
    isolation?: SortOrder
    bariatric?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransportRequestSumOrderByAggregateInput = {
    notificationRadius?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DropdownOptionCategoryValueCompoundUniqueInput = {
    category: string
    value: string
  }

  export type DropdownOptionCountOrderByAggregateInput = {
    id?: SortOrder
    category?: SortOrder
    value?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DropdownOptionMaxOrderByAggregateInput = {
    id?: SortOrder
    category?: SortOrder
    value?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DropdownOptionMinOrderByAggregateInput = {
    id?: SortOrder
    category?: SortOrder
    value?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransportRequestCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type TransportRequestUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type TransportRequestUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput | TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput | TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutCreatedByInput | TransportRequestUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput> | TransportRequestCreateWithoutCreatedByInput[] | TransportRequestUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByInput | TransportRequestCreateOrConnectWithoutCreatedByInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput | TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TransportRequestCreateManyCreatedByInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput | TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutCreatedByInput | TransportRequestUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestCreateNestedManyWithoutCreatedByHealthcareInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByHealthcareInput, TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput> | TransportRequestCreateWithoutCreatedByHealthcareInput[] | TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput | TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput[]
    createMany?: TransportRequestCreateManyCreatedByHealthcareInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type TransportRequestUncheckedCreateNestedManyWithoutCreatedByHealthcareInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByHealthcareInput, TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput> | TransportRequestCreateWithoutCreatedByHealthcareInput[] | TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput | TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput[]
    createMany?: TransportRequestCreateManyCreatedByHealthcareInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type TransportRequestUpdateManyWithoutCreatedByHealthcareNestedInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByHealthcareInput, TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput> | TransportRequestCreateWithoutCreatedByHealthcareInput[] | TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput | TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutCreatedByHealthcareInput | TransportRequestUpsertWithWhereUniqueWithoutCreatedByHealthcareInput[]
    createMany?: TransportRequestCreateManyCreatedByHealthcareInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutCreatedByHealthcareInput | TransportRequestUpdateWithWhereUniqueWithoutCreatedByHealthcareInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutCreatedByHealthcareInput | TransportRequestUpdateManyWithWhereWithoutCreatedByHealthcareInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestUncheckedUpdateManyWithoutCreatedByHealthcareNestedInput = {
    create?: XOR<TransportRequestCreateWithoutCreatedByHealthcareInput, TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput> | TransportRequestCreateWithoutCreatedByHealthcareInput[] | TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput | TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutCreatedByHealthcareInput | TransportRequestUpsertWithWhereUniqueWithoutCreatedByHealthcareInput[]
    createMany?: TransportRequestCreateManyCreatedByHealthcareInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutCreatedByHealthcareInput | TransportRequestUpdateWithWhereUniqueWithoutCreatedByHealthcareInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutCreatedByHealthcareInput | TransportRequestUpdateManyWithWhereWithoutCreatedByHealthcareInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestCreateNestedManyWithoutOriginFacilityInput = {
    create?: XOR<TransportRequestCreateWithoutOriginFacilityInput, TransportRequestUncheckedCreateWithoutOriginFacilityInput> | TransportRequestCreateWithoutOriginFacilityInput[] | TransportRequestUncheckedCreateWithoutOriginFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutOriginFacilityInput | TransportRequestCreateOrConnectWithoutOriginFacilityInput[]
    createMany?: TransportRequestCreateManyOriginFacilityInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type TransportRequestCreateNestedManyWithoutDestinationFacilityInput = {
    create?: XOR<TransportRequestCreateWithoutDestinationFacilityInput, TransportRequestUncheckedCreateWithoutDestinationFacilityInput> | TransportRequestCreateWithoutDestinationFacilityInput[] | TransportRequestUncheckedCreateWithoutDestinationFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutDestinationFacilityInput | TransportRequestCreateOrConnectWithoutDestinationFacilityInput[]
    createMany?: TransportRequestCreateManyDestinationFacilityInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type TransportRequestUncheckedCreateNestedManyWithoutOriginFacilityInput = {
    create?: XOR<TransportRequestCreateWithoutOriginFacilityInput, TransportRequestUncheckedCreateWithoutOriginFacilityInput> | TransportRequestCreateWithoutOriginFacilityInput[] | TransportRequestUncheckedCreateWithoutOriginFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutOriginFacilityInput | TransportRequestCreateOrConnectWithoutOriginFacilityInput[]
    createMany?: TransportRequestCreateManyOriginFacilityInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type TransportRequestUncheckedCreateNestedManyWithoutDestinationFacilityInput = {
    create?: XOR<TransportRequestCreateWithoutDestinationFacilityInput, TransportRequestUncheckedCreateWithoutDestinationFacilityInput> | TransportRequestCreateWithoutDestinationFacilityInput[] | TransportRequestUncheckedCreateWithoutDestinationFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutDestinationFacilityInput | TransportRequestCreateOrConnectWithoutDestinationFacilityInput[]
    createMany?: TransportRequestCreateManyDestinationFacilityInputEnvelope
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
  }

  export type TransportRequestUpdateManyWithoutOriginFacilityNestedInput = {
    create?: XOR<TransportRequestCreateWithoutOriginFacilityInput, TransportRequestUncheckedCreateWithoutOriginFacilityInput> | TransportRequestCreateWithoutOriginFacilityInput[] | TransportRequestUncheckedCreateWithoutOriginFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutOriginFacilityInput | TransportRequestCreateOrConnectWithoutOriginFacilityInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutOriginFacilityInput | TransportRequestUpsertWithWhereUniqueWithoutOriginFacilityInput[]
    createMany?: TransportRequestCreateManyOriginFacilityInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutOriginFacilityInput | TransportRequestUpdateWithWhereUniqueWithoutOriginFacilityInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutOriginFacilityInput | TransportRequestUpdateManyWithWhereWithoutOriginFacilityInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestUpdateManyWithoutDestinationFacilityNestedInput = {
    create?: XOR<TransportRequestCreateWithoutDestinationFacilityInput, TransportRequestUncheckedCreateWithoutDestinationFacilityInput> | TransportRequestCreateWithoutDestinationFacilityInput[] | TransportRequestUncheckedCreateWithoutDestinationFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutDestinationFacilityInput | TransportRequestCreateOrConnectWithoutDestinationFacilityInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutDestinationFacilityInput | TransportRequestUpsertWithWhereUniqueWithoutDestinationFacilityInput[]
    createMany?: TransportRequestCreateManyDestinationFacilityInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutDestinationFacilityInput | TransportRequestUpdateWithWhereUniqueWithoutDestinationFacilityInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutDestinationFacilityInput | TransportRequestUpdateManyWithWhereWithoutDestinationFacilityInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestUncheckedUpdateManyWithoutOriginFacilityNestedInput = {
    create?: XOR<TransportRequestCreateWithoutOriginFacilityInput, TransportRequestUncheckedCreateWithoutOriginFacilityInput> | TransportRequestCreateWithoutOriginFacilityInput[] | TransportRequestUncheckedCreateWithoutOriginFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutOriginFacilityInput | TransportRequestCreateOrConnectWithoutOriginFacilityInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutOriginFacilityInput | TransportRequestUpsertWithWhereUniqueWithoutOriginFacilityInput[]
    createMany?: TransportRequestCreateManyOriginFacilityInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutOriginFacilityInput | TransportRequestUpdateWithWhereUniqueWithoutOriginFacilityInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutOriginFacilityInput | TransportRequestUpdateManyWithWhereWithoutOriginFacilityInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestUncheckedUpdateManyWithoutDestinationFacilityNestedInput = {
    create?: XOR<TransportRequestCreateWithoutDestinationFacilityInput, TransportRequestUncheckedCreateWithoutDestinationFacilityInput> | TransportRequestCreateWithoutDestinationFacilityInput[] | TransportRequestUncheckedCreateWithoutDestinationFacilityInput[]
    connectOrCreate?: TransportRequestCreateOrConnectWithoutDestinationFacilityInput | TransportRequestCreateOrConnectWithoutDestinationFacilityInput[]
    upsert?: TransportRequestUpsertWithWhereUniqueWithoutDestinationFacilityInput | TransportRequestUpsertWithWhereUniqueWithoutDestinationFacilityInput[]
    createMany?: TransportRequestCreateManyDestinationFacilityInputEnvelope
    set?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    disconnect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    delete?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    connect?: TransportRequestWhereUniqueInput | TransportRequestWhereUniqueInput[]
    update?: TransportRequestUpdateWithWhereUniqueWithoutDestinationFacilityInput | TransportRequestUpdateWithWhereUniqueWithoutDestinationFacilityInput[]
    updateMany?: TransportRequestUpdateManyWithWhereWithoutDestinationFacilityInput | TransportRequestUpdateManyWithWhereWithoutDestinationFacilityInput[]
    deleteMany?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
  }

  export type TransportRequestCreateselectedAgenciesInput = {
    set: string[]
  }

  export type FacilityCreateNestedOneWithoutOriginTransportRequestsInput = {
    create?: XOR<FacilityCreateWithoutOriginTransportRequestsInput, FacilityUncheckedCreateWithoutOriginTransportRequestsInput>
    connectOrCreate?: FacilityCreateOrConnectWithoutOriginTransportRequestsInput
    connect?: FacilityWhereUniqueInput
  }

  export type FacilityCreateNestedOneWithoutDestinationTransportRequestsInput = {
    create?: XOR<FacilityCreateWithoutDestinationTransportRequestsInput, FacilityUncheckedCreateWithoutDestinationTransportRequestsInput>
    connectOrCreate?: FacilityCreateOrConnectWithoutDestinationTransportRequestsInput
    connect?: FacilityWhereUniqueInput
  }

  export type HospitalUserCreateNestedOneWithoutTransportRequestsInput = {
    create?: XOR<HospitalUserCreateWithoutTransportRequestsInput, HospitalUserUncheckedCreateWithoutTransportRequestsInput>
    connectOrCreate?: HospitalUserCreateOrConnectWithoutTransportRequestsInput
    connect?: HospitalUserWhereUniqueInput
  }

  export type HealthcareUserCreateNestedOneWithoutTransportRequestsInput = {
    create?: XOR<HealthcareUserCreateWithoutTransportRequestsInput, HealthcareUserUncheckedCreateWithoutTransportRequestsInput>
    connectOrCreate?: HealthcareUserCreateOrConnectWithoutTransportRequestsInput
    connect?: HealthcareUserWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type TransportRequestUpdateselectedAgenciesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FacilityUpdateOneWithoutOriginTransportRequestsNestedInput = {
    create?: XOR<FacilityCreateWithoutOriginTransportRequestsInput, FacilityUncheckedCreateWithoutOriginTransportRequestsInput>
    connectOrCreate?: FacilityCreateOrConnectWithoutOriginTransportRequestsInput
    upsert?: FacilityUpsertWithoutOriginTransportRequestsInput
    disconnect?: FacilityWhereInput | boolean
    delete?: FacilityWhereInput | boolean
    connect?: FacilityWhereUniqueInput
    update?: XOR<XOR<FacilityUpdateToOneWithWhereWithoutOriginTransportRequestsInput, FacilityUpdateWithoutOriginTransportRequestsInput>, FacilityUncheckedUpdateWithoutOriginTransportRequestsInput>
  }

  export type FacilityUpdateOneWithoutDestinationTransportRequestsNestedInput = {
    create?: XOR<FacilityCreateWithoutDestinationTransportRequestsInput, FacilityUncheckedCreateWithoutDestinationTransportRequestsInput>
    connectOrCreate?: FacilityCreateOrConnectWithoutDestinationTransportRequestsInput
    upsert?: FacilityUpsertWithoutDestinationTransportRequestsInput
    disconnect?: FacilityWhereInput | boolean
    delete?: FacilityWhereInput | boolean
    connect?: FacilityWhereUniqueInput
    update?: XOR<XOR<FacilityUpdateToOneWithWhereWithoutDestinationTransportRequestsInput, FacilityUpdateWithoutDestinationTransportRequestsInput>, FacilityUncheckedUpdateWithoutDestinationTransportRequestsInput>
  }

  export type HospitalUserUpdateOneWithoutTransportRequestsNestedInput = {
    create?: XOR<HospitalUserCreateWithoutTransportRequestsInput, HospitalUserUncheckedCreateWithoutTransportRequestsInput>
    connectOrCreate?: HospitalUserCreateOrConnectWithoutTransportRequestsInput
    upsert?: HospitalUserUpsertWithoutTransportRequestsInput
    disconnect?: HospitalUserWhereInput | boolean
    delete?: HospitalUserWhereInput | boolean
    connect?: HospitalUserWhereUniqueInput
    update?: XOR<XOR<HospitalUserUpdateToOneWithWhereWithoutTransportRequestsInput, HospitalUserUpdateWithoutTransportRequestsInput>, HospitalUserUncheckedUpdateWithoutTransportRequestsInput>
  }

  export type HealthcareUserUpdateOneWithoutTransportRequestsNestedInput = {
    create?: XOR<HealthcareUserCreateWithoutTransportRequestsInput, HealthcareUserUncheckedCreateWithoutTransportRequestsInput>
    connectOrCreate?: HealthcareUserCreateOrConnectWithoutTransportRequestsInput
    upsert?: HealthcareUserUpsertWithoutTransportRequestsInput
    disconnect?: HealthcareUserWhereInput | boolean
    delete?: HealthcareUserWhereInput | boolean
    connect?: HealthcareUserWhereUniqueInput
    update?: XOR<XOR<HealthcareUserUpdateToOneWithWhereWithoutTransportRequestsInput, HealthcareUserUpdateWithoutTransportRequestsInput>, HealthcareUserUncheckedUpdateWithoutTransportRequestsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type TransportRequestCreateWithoutCreatedByInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    originFacility?: FacilityCreateNestedOneWithoutOriginTransportRequestsInput
    destinationFacility?: FacilityCreateNestedOneWithoutDestinationTransportRequestsInput
    createdByHealthcare?: HealthcareUserCreateNestedOneWithoutTransportRequestsInput
  }

  export type TransportRequestUncheckedCreateWithoutCreatedByInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestCreateOrConnectWithoutCreatedByInput = {
    where: TransportRequestWhereUniqueInput
    create: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput>
  }

  export type TransportRequestCreateManyCreatedByInputEnvelope = {
    data: TransportRequestCreateManyCreatedByInput | TransportRequestCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type TransportRequestUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: TransportRequestWhereUniqueInput
    update: XOR<TransportRequestUpdateWithoutCreatedByInput, TransportRequestUncheckedUpdateWithoutCreatedByInput>
    create: XOR<TransportRequestCreateWithoutCreatedByInput, TransportRequestUncheckedCreateWithoutCreatedByInput>
  }

  export type TransportRequestUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: TransportRequestWhereUniqueInput
    data: XOR<TransportRequestUpdateWithoutCreatedByInput, TransportRequestUncheckedUpdateWithoutCreatedByInput>
  }

  export type TransportRequestUpdateManyWithWhereWithoutCreatedByInput = {
    where: TransportRequestScalarWhereInput
    data: XOR<TransportRequestUpdateManyMutationInput, TransportRequestUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type TransportRequestScalarWhereInput = {
    AND?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
    OR?: TransportRequestScalarWhereInput[]
    NOT?: TransportRequestScalarWhereInput | TransportRequestScalarWhereInput[]
    id?: StringFilter<"TransportRequest"> | string
    tripNumber?: StringNullableFilter<"TransportRequest"> | string | null
    patientId?: StringFilter<"TransportRequest"> | string
    patientWeight?: StringNullableFilter<"TransportRequest"> | string | null
    specialNeeds?: StringNullableFilter<"TransportRequest"> | string | null
    originFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    destinationFacilityId?: StringNullableFilter<"TransportRequest"> | string | null
    fromLocation?: StringNullableFilter<"TransportRequest"> | string | null
    toLocation?: StringNullableFilter<"TransportRequest"> | string | null
    scheduledTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transportLevel?: StringFilter<"TransportRequest"> | string
    urgencyLevel?: StringNullableFilter<"TransportRequest"> | string | null
    priority?: StringFilter<"TransportRequest"> | string
    status?: StringFilter<"TransportRequest"> | string
    specialRequirements?: StringNullableFilter<"TransportRequest"> | string | null
    diagnosis?: StringNullableFilter<"TransportRequest"> | string | null
    mobilityLevel?: StringNullableFilter<"TransportRequest"> | string | null
    oxygenRequired?: BoolFilter<"TransportRequest"> | boolean
    monitoringRequired?: BoolFilter<"TransportRequest"> | boolean
    generateQRCode?: BoolFilter<"TransportRequest"> | boolean
    qrCodeData?: StringNullableFilter<"TransportRequest"> | string | null
    selectedAgencies?: StringNullableListFilter<"TransportRequest">
    notificationRadius?: IntNullableFilter<"TransportRequest"> | number | null
    transferRequestTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    transferAcceptedTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsArrivalTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    emsDepartureTime?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    requestTimestamp?: DateTimeFilter<"TransportRequest"> | Date | string
    acceptedTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    pickupTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    completionTimestamp?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    assignedAgencyId?: StringNullableFilter<"TransportRequest"> | string | null
    assignedUnitId?: StringNullableFilter<"TransportRequest"> | string | null
    createdById?: StringNullableFilter<"TransportRequest"> | string | null
    healthcareCreatedById?: StringNullableFilter<"TransportRequest"> | string | null
    readyStart?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    readyEnd?: DateTimeNullableFilter<"TransportRequest"> | Date | string | null
    isolation?: BoolFilter<"TransportRequest"> | boolean
    bariatric?: BoolFilter<"TransportRequest"> | boolean
    notes?: StringNullableFilter<"TransportRequest"> | string | null
    createdAt?: DateTimeFilter<"TransportRequest"> | Date | string
    updatedAt?: DateTimeFilter<"TransportRequest"> | Date | string
  }

  export type TransportRequestCreateWithoutCreatedByHealthcareInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    originFacility?: FacilityCreateNestedOneWithoutOriginTransportRequestsInput
    destinationFacility?: FacilityCreateNestedOneWithoutDestinationTransportRequestsInput
    createdBy?: HospitalUserCreateNestedOneWithoutTransportRequestsInput
  }

  export type TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestCreateOrConnectWithoutCreatedByHealthcareInput = {
    where: TransportRequestWhereUniqueInput
    create: XOR<TransportRequestCreateWithoutCreatedByHealthcareInput, TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput>
  }

  export type TransportRequestCreateManyCreatedByHealthcareInputEnvelope = {
    data: TransportRequestCreateManyCreatedByHealthcareInput | TransportRequestCreateManyCreatedByHealthcareInput[]
    skipDuplicates?: boolean
  }

  export type TransportRequestUpsertWithWhereUniqueWithoutCreatedByHealthcareInput = {
    where: TransportRequestWhereUniqueInput
    update: XOR<TransportRequestUpdateWithoutCreatedByHealthcareInput, TransportRequestUncheckedUpdateWithoutCreatedByHealthcareInput>
    create: XOR<TransportRequestCreateWithoutCreatedByHealthcareInput, TransportRequestUncheckedCreateWithoutCreatedByHealthcareInput>
  }

  export type TransportRequestUpdateWithWhereUniqueWithoutCreatedByHealthcareInput = {
    where: TransportRequestWhereUniqueInput
    data: XOR<TransportRequestUpdateWithoutCreatedByHealthcareInput, TransportRequestUncheckedUpdateWithoutCreatedByHealthcareInput>
  }

  export type TransportRequestUpdateManyWithWhereWithoutCreatedByHealthcareInput = {
    where: TransportRequestScalarWhereInput
    data: XOR<TransportRequestUpdateManyMutationInput, TransportRequestUncheckedUpdateManyWithoutCreatedByHealthcareInput>
  }

  export type TransportRequestCreateWithoutOriginFacilityInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    destinationFacility?: FacilityCreateNestedOneWithoutDestinationTransportRequestsInput
    createdBy?: HospitalUserCreateNestedOneWithoutTransportRequestsInput
    createdByHealthcare?: HealthcareUserCreateNestedOneWithoutTransportRequestsInput
  }

  export type TransportRequestUncheckedCreateWithoutOriginFacilityInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestCreateOrConnectWithoutOriginFacilityInput = {
    where: TransportRequestWhereUniqueInput
    create: XOR<TransportRequestCreateWithoutOriginFacilityInput, TransportRequestUncheckedCreateWithoutOriginFacilityInput>
  }

  export type TransportRequestCreateManyOriginFacilityInputEnvelope = {
    data: TransportRequestCreateManyOriginFacilityInput | TransportRequestCreateManyOriginFacilityInput[]
    skipDuplicates?: boolean
  }

  export type TransportRequestCreateWithoutDestinationFacilityInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    originFacility?: FacilityCreateNestedOneWithoutOriginTransportRequestsInput
    createdBy?: HospitalUserCreateNestedOneWithoutTransportRequestsInput
    createdByHealthcare?: HealthcareUserCreateNestedOneWithoutTransportRequestsInput
  }

  export type TransportRequestUncheckedCreateWithoutDestinationFacilityInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestCreateOrConnectWithoutDestinationFacilityInput = {
    where: TransportRequestWhereUniqueInput
    create: XOR<TransportRequestCreateWithoutDestinationFacilityInput, TransportRequestUncheckedCreateWithoutDestinationFacilityInput>
  }

  export type TransportRequestCreateManyDestinationFacilityInputEnvelope = {
    data: TransportRequestCreateManyDestinationFacilityInput | TransportRequestCreateManyDestinationFacilityInput[]
    skipDuplicates?: boolean
  }

  export type TransportRequestUpsertWithWhereUniqueWithoutOriginFacilityInput = {
    where: TransportRequestWhereUniqueInput
    update: XOR<TransportRequestUpdateWithoutOriginFacilityInput, TransportRequestUncheckedUpdateWithoutOriginFacilityInput>
    create: XOR<TransportRequestCreateWithoutOriginFacilityInput, TransportRequestUncheckedCreateWithoutOriginFacilityInput>
  }

  export type TransportRequestUpdateWithWhereUniqueWithoutOriginFacilityInput = {
    where: TransportRequestWhereUniqueInput
    data: XOR<TransportRequestUpdateWithoutOriginFacilityInput, TransportRequestUncheckedUpdateWithoutOriginFacilityInput>
  }

  export type TransportRequestUpdateManyWithWhereWithoutOriginFacilityInput = {
    where: TransportRequestScalarWhereInput
    data: XOR<TransportRequestUpdateManyMutationInput, TransportRequestUncheckedUpdateManyWithoutOriginFacilityInput>
  }

  export type TransportRequestUpsertWithWhereUniqueWithoutDestinationFacilityInput = {
    where: TransportRequestWhereUniqueInput
    update: XOR<TransportRequestUpdateWithoutDestinationFacilityInput, TransportRequestUncheckedUpdateWithoutDestinationFacilityInput>
    create: XOR<TransportRequestCreateWithoutDestinationFacilityInput, TransportRequestUncheckedCreateWithoutDestinationFacilityInput>
  }

  export type TransportRequestUpdateWithWhereUniqueWithoutDestinationFacilityInput = {
    where: TransportRequestWhereUniqueInput
    data: XOR<TransportRequestUpdateWithoutDestinationFacilityInput, TransportRequestUncheckedUpdateWithoutDestinationFacilityInput>
  }

  export type TransportRequestUpdateManyWithWhereWithoutDestinationFacilityInput = {
    where: TransportRequestScalarWhereInput
    data: XOR<TransportRequestUpdateManyMutationInput, TransportRequestUncheckedUpdateManyWithoutDestinationFacilityInput>
  }

  export type FacilityCreateWithoutOriginTransportRequestsInput = {
    id?: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone?: string | null
    email?: string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    destinationTransportRequests?: TransportRequestCreateNestedManyWithoutDestinationFacilityInput
  }

  export type FacilityUncheckedCreateWithoutOriginTransportRequestsInput = {
    id?: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone?: string | null
    email?: string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    destinationTransportRequests?: TransportRequestUncheckedCreateNestedManyWithoutDestinationFacilityInput
  }

  export type FacilityCreateOrConnectWithoutOriginTransportRequestsInput = {
    where: FacilityWhereUniqueInput
    create: XOR<FacilityCreateWithoutOriginTransportRequestsInput, FacilityUncheckedCreateWithoutOriginTransportRequestsInput>
  }

  export type FacilityCreateWithoutDestinationTransportRequestsInput = {
    id?: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone?: string | null
    email?: string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    originTransportRequests?: TransportRequestCreateNestedManyWithoutOriginFacilityInput
  }

  export type FacilityUncheckedCreateWithoutDestinationTransportRequestsInput = {
    id?: string
    name: string
    type: string
    address: string
    city: string
    state: string
    zipCode: string
    phone?: string | null
    email?: string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    originTransportRequests?: TransportRequestUncheckedCreateNestedManyWithoutOriginFacilityInput
  }

  export type FacilityCreateOrConnectWithoutDestinationTransportRequestsInput = {
    where: FacilityWhereUniqueInput
    create: XOR<FacilityCreateWithoutDestinationTransportRequestsInput, FacilityUncheckedCreateWithoutDestinationTransportRequestsInput>
  }

  export type HospitalUserCreateWithoutTransportRequestsInput = {
    id?: string
    email: string
    password: string
    name: string
    hospitalName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HospitalUserUncheckedCreateWithoutTransportRequestsInput = {
    id?: string
    email: string
    password: string
    name: string
    hospitalName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HospitalUserCreateOrConnectWithoutTransportRequestsInput = {
    where: HospitalUserWhereUniqueInput
    create: XOR<HospitalUserCreateWithoutTransportRequestsInput, HospitalUserUncheckedCreateWithoutTransportRequestsInput>
  }

  export type HealthcareUserCreateWithoutTransportRequestsInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    facilityName: string
    facilityType: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HealthcareUserUncheckedCreateWithoutTransportRequestsInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    facilityName: string
    facilityType: string
    emailNotifications?: boolean
    smsNotifications?: boolean
    isActive?: boolean
    userType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HealthcareUserCreateOrConnectWithoutTransportRequestsInput = {
    where: HealthcareUserWhereUniqueInput
    create: XOR<HealthcareUserCreateWithoutTransportRequestsInput, HealthcareUserUncheckedCreateWithoutTransportRequestsInput>
  }

  export type FacilityUpsertWithoutOriginTransportRequestsInput = {
    update: XOR<FacilityUpdateWithoutOriginTransportRequestsInput, FacilityUncheckedUpdateWithoutOriginTransportRequestsInput>
    create: XOR<FacilityCreateWithoutOriginTransportRequestsInput, FacilityUncheckedCreateWithoutOriginTransportRequestsInput>
    where?: FacilityWhereInput
  }

  export type FacilityUpdateToOneWithWhereWithoutOriginTransportRequestsInput = {
    where?: FacilityWhereInput
    data: XOR<FacilityUpdateWithoutOriginTransportRequestsInput, FacilityUncheckedUpdateWithoutOriginTransportRequestsInput>
  }

  export type FacilityUpdateWithoutOriginTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    destinationTransportRequests?: TransportRequestUpdateManyWithoutDestinationFacilityNestedInput
  }

  export type FacilityUncheckedUpdateWithoutOriginTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    destinationTransportRequests?: TransportRequestUncheckedUpdateManyWithoutDestinationFacilityNestedInput
  }

  export type FacilityUpsertWithoutDestinationTransportRequestsInput = {
    update: XOR<FacilityUpdateWithoutDestinationTransportRequestsInput, FacilityUncheckedUpdateWithoutDestinationTransportRequestsInput>
    create: XOR<FacilityCreateWithoutDestinationTransportRequestsInput, FacilityUncheckedCreateWithoutDestinationTransportRequestsInput>
    where?: FacilityWhereInput
  }

  export type FacilityUpdateToOneWithWhereWithoutDestinationTransportRequestsInput = {
    where?: FacilityWhereInput
    data: XOR<FacilityUpdateWithoutDestinationTransportRequestsInput, FacilityUncheckedUpdateWithoutDestinationTransportRequestsInput>
  }

  export type FacilityUpdateWithoutDestinationTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originTransportRequests?: TransportRequestUpdateManyWithoutOriginFacilityNestedInput
  }

  export type FacilityUncheckedUpdateWithoutDestinationTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originTransportRequests?: TransportRequestUncheckedUpdateManyWithoutOriginFacilityNestedInput
  }

  export type HospitalUserUpsertWithoutTransportRequestsInput = {
    update: XOR<HospitalUserUpdateWithoutTransportRequestsInput, HospitalUserUncheckedUpdateWithoutTransportRequestsInput>
    create: XOR<HospitalUserCreateWithoutTransportRequestsInput, HospitalUserUncheckedCreateWithoutTransportRequestsInput>
    where?: HospitalUserWhereInput
  }

  export type HospitalUserUpdateToOneWithWhereWithoutTransportRequestsInput = {
    where?: HospitalUserWhereInput
    data: XOR<HospitalUserUpdateWithoutTransportRequestsInput, HospitalUserUncheckedUpdateWithoutTransportRequestsInput>
  }

  export type HospitalUserUpdateWithoutTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    hospitalName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HospitalUserUncheckedUpdateWithoutTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    hospitalName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HealthcareUserUpsertWithoutTransportRequestsInput = {
    update: XOR<HealthcareUserUpdateWithoutTransportRequestsInput, HealthcareUserUncheckedUpdateWithoutTransportRequestsInput>
    create: XOR<HealthcareUserCreateWithoutTransportRequestsInput, HealthcareUserUncheckedCreateWithoutTransportRequestsInput>
    where?: HealthcareUserWhereInput
  }

  export type HealthcareUserUpdateToOneWithWhereWithoutTransportRequestsInput = {
    where?: HealthcareUserWhereInput
    data: XOR<HealthcareUserUpdateWithoutTransportRequestsInput, HealthcareUserUncheckedUpdateWithoutTransportRequestsInput>
  }

  export type HealthcareUserUpdateWithoutTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    facilityName?: StringFieldUpdateOperationsInput | string
    facilityType?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HealthcareUserUncheckedUpdateWithoutTransportRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    facilityName?: StringFieldUpdateOperationsInput | string
    facilityType?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateManyCreatedByInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originFacility?: FacilityUpdateOneWithoutOriginTransportRequestsNestedInput
    destinationFacility?: FacilityUpdateOneWithoutDestinationTransportRequestsNestedInput
    createdByHealthcare?: HealthcareUserUpdateOneWithoutTransportRequestsNestedInput
  }

  export type TransportRequestUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateManyCreatedByHealthcareInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateWithoutCreatedByHealthcareInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originFacility?: FacilityUpdateOneWithoutOriginTransportRequestsNestedInput
    destinationFacility?: FacilityUpdateOneWithoutDestinationTransportRequestsNestedInput
    createdBy?: HospitalUserUpdateOneWithoutTransportRequestsNestedInput
  }

  export type TransportRequestUncheckedUpdateWithoutCreatedByHealthcareInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateManyWithoutCreatedByHealthcareInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestCreateManyOriginFacilityInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    destinationFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestCreateManyDestinationFacilityInput = {
    id?: string
    tripNumber?: string | null
    patientId: string
    patientWeight?: string | null
    specialNeeds?: string | null
    originFacilityId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    scheduledTime?: Date | string | null
    transportLevel: string
    urgencyLevel?: string | null
    priority: string
    status?: string
    specialRequirements?: string | null
    diagnosis?: string | null
    mobilityLevel?: string | null
    oxygenRequired?: boolean
    monitoringRequired?: boolean
    generateQRCode?: boolean
    qrCodeData?: string | null
    selectedAgencies?: TransportRequestCreateselectedAgenciesInput | string[]
    notificationRadius?: number | null
    transferRequestTime?: Date | string | null
    transferAcceptedTime?: Date | string | null
    emsArrivalTime?: Date | string | null
    emsDepartureTime?: Date | string | null
    requestTimestamp?: Date | string
    acceptedTimestamp?: Date | string | null
    pickupTimestamp?: Date | string | null
    completionTimestamp?: Date | string | null
    assignedAgencyId?: string | null
    assignedUnitId?: string | null
    createdById?: string | null
    healthcareCreatedById?: string | null
    readyStart?: Date | string | null
    readyEnd?: Date | string | null
    isolation?: boolean
    bariatric?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransportRequestUpdateWithoutOriginFacilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    destinationFacility?: FacilityUpdateOneWithoutDestinationTransportRequestsNestedInput
    createdBy?: HospitalUserUpdateOneWithoutTransportRequestsNestedInput
    createdByHealthcare?: HealthcareUserUpdateOneWithoutTransportRequestsNestedInput
  }

  export type TransportRequestUncheckedUpdateWithoutOriginFacilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateManyWithoutOriginFacilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    destinationFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUpdateWithoutDestinationFacilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    originFacility?: FacilityUpdateOneWithoutOriginTransportRequestsNestedInput
    createdBy?: HospitalUserUpdateOneWithoutTransportRequestsNestedInput
    createdByHealthcare?: HealthcareUserUpdateOneWithoutTransportRequestsNestedInput
  }

  export type TransportRequestUncheckedUpdateWithoutDestinationFacilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransportRequestUncheckedUpdateManyWithoutDestinationFacilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    tripNumber?: NullableStringFieldUpdateOperationsInput | string | null
    patientId?: StringFieldUpdateOperationsInput | string
    patientWeight?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    originFacilityId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transportLevel?: StringFieldUpdateOperationsInput | string
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    specialRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    diagnosis?: NullableStringFieldUpdateOperationsInput | string | null
    mobilityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    oxygenRequired?: BoolFieldUpdateOperationsInput | boolean
    monitoringRequired?: BoolFieldUpdateOperationsInput | boolean
    generateQRCode?: BoolFieldUpdateOperationsInput | boolean
    qrCodeData?: NullableStringFieldUpdateOperationsInput | string | null
    selectedAgencies?: TransportRequestUpdateselectedAgenciesInput | string[]
    notificationRadius?: NullableIntFieldUpdateOperationsInput | number | null
    transferRequestTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferAcceptedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsArrivalTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emsDepartureTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestTimestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAgencyId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUnitId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    healthcareCreatedById?: NullableStringFieldUpdateOperationsInput | string | null
    readyStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isolation?: BoolFieldUpdateOperationsInput | boolean
    bariatric?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use HospitalUserCountOutputTypeDefaultArgs instead
     */
    export type HospitalUserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HospitalUserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HealthcareUserCountOutputTypeDefaultArgs instead
     */
    export type HealthcareUserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HealthcareUserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FacilityCountOutputTypeDefaultArgs instead
     */
    export type FacilityCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FacilityCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HospitalUserDefaultArgs instead
     */
    export type HospitalUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HospitalUserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HealthcareUserDefaultArgs instead
     */
    export type HealthcareUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HealthcareUserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FacilityDefaultArgs instead
     */
    export type FacilityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FacilityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TransportRequestDefaultArgs instead
     */
    export type TransportRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TransportRequestDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DropdownOptionDefaultArgs instead
     */
    export type DropdownOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DropdownOptionDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}